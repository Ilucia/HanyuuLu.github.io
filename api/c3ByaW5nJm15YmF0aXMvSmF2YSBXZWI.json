{"title":"spring&mybatis/Java Web","date":"2022-04-27T15:24:01.747Z","link":"spring&mybatis/Java Web","updated":"2022-04-27T15:24:01.747Z","content":"<h2 id=\"servlet\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Java Web#servlet\"></a> Servlet<a href=\"spring&mybatis/Java Web#servlet\"></a></h2>\n<ul>\n<li>\n<p>Servlet其实就是一个<strong>遵循Servlet开发的java类</strong></p>\n</li>\n<li>\n<p>Servlet是<strong>由服务器调用的，运行在服务器端</strong></p>\n</li>\n<li>\n<p>Servlet带给我们最大的作用就是<strong>能够处理浏览器带来的HTTP请求，并返回一个响应给浏览器，从而实现浏览器和服务器的交互</strong></p>\n</li>\n</ul>\n<h3 id=\"java-web目录结构\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Java Web#java-web目录结构\"></a> Java Web目录结构<a href=\"spring&mybatis/Java Web#java-web目录结构\"></a></h3>\n<p>![Java Web目录结构](/Users/ng/Documents/spring&amp;mybatis/pictures/Java Web目录结构.png)</p>\n<ul>\n<li>bbs目录代表一个web应用</li>\n<li>bbs目录下的html,jsp文件可以直接被浏览器访问</li>\n<li>WEB-INF目录下的资源是不能直接被浏览器访问的</li>\n<li>web.xml文件是web程序的主要配置文件</li>\n<li>所有的classes文件都放在classes目录下</li>\n<li>jar文件放在lib目录下</li>\n</ul>\n<h3 id=\"编写servlet程序\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Java Web#编写servlet程序\"></a> 编写Servlet程序<a href=\"spring&mybatis/Java Web#编写servlet程序\"></a></h3>\n<ol>\n<li>创建一个自定义类，实现Servlet接口</li>\n<li>我们发现有5个方法需要重写，有init【初始化】，destroy【销毁】,service【服务】,ServletConfig【Servlet配置】,getServletInfo【Servlet信息</li>\n<li>调用ServletResponse对象的方法向浏览器输出HelloWorld</li>\n<li>配置xml文件，光写了Servlet是不行的，Tomcat还要知道浏览器怎么访问这个Servlet</li>\n</ol>\n<h4 id=\"servlet生命周期\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Java Web#servlet生命周期\"></a> Servlet生命周期<a href=\"spring&mybatis/Java Web#servlet生命周期\"></a></h4>\n<ol>\n<li><strong>加载Servlet。当Tomcat第一次访问Servlet的时候，Tomcat会负责创建Servlet的实例</strong></li>\n<li><strong>初始化。当Servlet被实例化后，Tomcat会调用init()方法初始化这个对象</strong></li>\n<li><strong>处理服务。当浏览器访问Servlet的时候，Servlet 会调用service()方法处理请求</strong></li>\n<li><strong>销毁。当Tomcat关闭时或者检测到Servlet要从Tomcat删除的时候会自动调用destroy()方法，让该实例释放掉所占的资源。一个Servlet如果长时间不被使用的话，也会被Tomcat自动销毁</strong></li>\n<li><strong>卸载。当Servlet调用完destroy()方法后，等待垃圾回收。如果有需要再次使用这个Servlet，会重新调用init()方法进行初始化操作</strong></li>\n<li>简单总结：只要访问Servlet，service()就会被调用。init()只有第一次访问Servlet的时候才会被调用。destroy()只有在Tomcat关闭的时候才会被调用</li>\n</ol>\n<p><img src=\"/Users/ng/Documents/spring&amp;mybatis/pictures/Servlet%E8%B0%83%E7%94%A8%E5%9B%BE.png\" alt=\"Servlet调用图\" class=\"article-img\"></p>\n<h4 id=\"继承httpservlet编写servlet程序\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Java Web#继承httpservlet编写servlet程序\"></a> 继承HttpServlet编写Servlet程序<a href=\"spring&mybatis/Java Web#继承httpservlet编写servlet程序\"></a></h4>\n<ul>\n<li>实现Servlet接口，要实现5个方法</li>\n<li>而HttpServlet类已经实现了Servlet接口的所有方法，编写Servlet时，只需要继承HttpServlet，重写你需要的方法即可，并且它在原有Servlet接口上添加了一些与HTTP协议处理方法，它比Servlet接口的功能更为强大</li>\n<li>idea创建Servlet的时候已经重写好了doGet()和doPost()方法</li>\n</ul>\n<h4 id=\"http协议\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Java Web#http协议\"></a> HTTP协议<a href=\"spring&mybatis/Java Web#http协议\"></a></h4>\n<ul>\n<li><strong>HTTP协议是客户端和服务器交互的一种通迅的格式</strong></li>\n<li>当在浏览器中点击这个链接的时候，<strong>浏览器会向服务器发送一段文本</strong>，**告诉服务器请求打开的是哪一个网页。服务器收到请求后，就返回一段文本给浏览器，浏览器会将该文本解析，然后显示出来。**这段「文本」就是遵循HTTP协议规范的</li>\n</ul>\n","prev":{"title":"spring&mybatis/Dubbo","link":"spring&mybatis/Dubbo"},"next":{"title":"spring&mybatis/Mybatis - MybatisPlus","link":"spring&mybatis/Mybatis - MybatisPlus"},"plink":"ilucia.github.io/spring&mybatis/Java Web/","toc":[{"title":"<a class=\"markdownIt-Anchor\"></a> Servlet","id":"servlet","index":"1","children":[{"title":"<a class=\"markdownIt-Anchor\"></a> Java Web目录结构","id":"java-web目录结构","index":"1.1"},{"title":"<a class=\"markdownIt-Anchor\"></a> 编写Servlet程序","id":"编写servlet程序","index":"1.2","children":[{"title":"<a class=\"markdownIt-Anchor\"></a> Servlet生命周期","id":"servlet生命周期","index":"1.2.1"},{"title":"<a class=\"markdownIt-Anchor\"></a> 继承HttpServlet编写Servlet程序","id":"继承httpservlet编写servlet程序","index":"1.2.2"},{"title":"<a class=\"markdownIt-Anchor\"></a> HTTP协议","id":"http协议","index":"1.2.3"}]}]}],"copyright":{"author":"Ilucia Niu","license":"<a rel=\"license\" href=\"http://creativecommons.org/licenses/by/4.0/\">知识共享署名 4.0 国际许可协议</a>","published":"2022年4月27日","updated":"2022年4月27日"}}