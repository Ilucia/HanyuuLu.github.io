{"title":"spring&mybatis/Spring MVC","date":"2022-04-27T15:24:01.747Z","link":"spring&mybatis/Spring MVC","updated":"2022-04-27T15:24:01.747Z","content":"<h2 id=\"spring-mvc\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#spring-mvc\"></a> Spring MVC<a href=\"spring&mybatis/Spring MVC#spring-mvc\"></a></h2>\n<h3 id=\"spring-ioc\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#spring-ioc\"></a> Spring ioc<a href=\"spring&mybatis/Spring MVC#spring-ioc\"></a></h3>\n<p><img src=\"/Users/ng/Documents/spring&amp;mybatis/pictures/SpringIOC.jpg\" alt=\"\" class=\"article-img\"></p>\n<h3 id=\"原理\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#原理\"></a> 原理<a href=\"spring&mybatis/Spring MVC#原理\"></a></h3>\n<p><img src=\"/Users/ng/Documents/spring&amp;mybatis/pictures/SpringMVC%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B.png\" alt=\"\" class=\"article-img\"></p>\n<h4 id=\"1-dispatcherservlet\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#1-dispatcherservlet\"></a> 1. DispatcherServlet<a href=\"spring&mybatis/Spring MVC#1-dispatcherservlet\"></a></h4>\n<ul>\n<li>DispatcherServlet 会拦截所有的请求，并且将这些请求发送给 Spring MVC 控制器</li>\n</ul>\n<h4 id=\"2-handlermapping\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#2-handlermapping\"></a> 2. HandlerMapping<a href=\"spring&mybatis/Spring MVC#2-handlermapping\"></a></h4>\n<ul>\n<li>DispatcherServlet 会查询一个或多个处理器映射来确定请求的下一站在哪里，处理器映射会<strong>根据请求所携带的 URL 信息来进行决策</strong></li>\n<li>例如通过配置 simpleUrlHandlerMapping 来将 /hello 地址交给 helloController 处理</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"simpleUrlHandlerMapping\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"mappings\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">props</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- /hello 路径的请求交给 id 为 helloController 的控制器处理--&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">prop</span> <span class=\"attr\">key</span>=<span class=\"string\">\"/hello\"</span>&gt;</span>helloController<span class=\"tag\">&lt;/<span class=\"name\">prop</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">props</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"helloController\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"controller.HelloController\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n<h4 id=\"3-控制器\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#3-控制器\"></a> 3. 控制器<a href=\"spring&mybatis/Spring MVC#3-控制器\"></a></h4>\n<ul>\n<li>一旦选择了合适的控制器， DispatcherServlet 会将请求发送给选中的控制器，到了控制器，请求会卸下其负载（用户提交的请求）等待控制器处理完这些信息</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> ModelAndView <span class=\"title\">handleRequest</span><span class=\"params\">(javax.servlet.http.HttpServletRequest httpServletRequest, javax.servlet.http.HttpServletResponse httpServletResponse)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 处理逻辑</span></span><br><span class=\"line\">    ....</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<h4 id=\"4-返回dispatcherservlet\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#4-返回dispatcherservlet\"></a> 4. 返回DispatcherServlet<a href=\"spring&mybatis/Spring MVC#4-返回dispatcherservlet\"></a></h4>\n<ul>\n<li>\u0015当控制器在完成逻辑处理后，通常会产生一些信息，这些信息就是需要返回给用户并在浏览器上显示的信息，它们被称为<strong>模型（Model）</strong>。仅仅返回原始的信息时不够的——这些信息需要以用户友好的方式进行格式化，一般会是 HTML，所以，信息需要发送给一个<strong>视图（view）</strong>，通常会是 JSP</li>\n<li>控制器所做的最后一件事就是将模型数据打包，并且表示出用于渲染输出的视图名**（逻辑视图名）。它接下来会将请求连同模型和视图名发送回 DispatcherServlet**</li>\n<li>这样以来，控制器就不会和特定的视图相耦合，传递给 DispatcherServlet 的视图名并不直接表示某个特定的 JSP。（实际上，它甚至不能确定视图就是 JSP）相反，<strong>它传递的仅仅是一个逻辑名称，这个名称将会用来查找产生结果的真正视图</strong></li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> ModelAndView <span class=\"title\">handleRequest</span><span class=\"params\">(javax.servlet.http.HttpServletRequest httpServletRequest, javax.servlet.http.HttpServletResponse httpServletResponse)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 处理逻辑</span></span><br><span class=\"line\">    ....</span><br><span class=\"line\">    <span class=\"comment\">// 返回给 DispatcherServlet</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> mav;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<h4 id=\"5-视图解析器\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#5-视图解析器\"></a> 5. 视图解析器<a href=\"spring&mybatis/Spring MVC#5-视图解析器\"></a></h4>\n<ul>\n<li>DispatcherServlet 将会使用视图解析器（view resolver）来将逻辑视图名匹配为一个特定的视图实现，它可能是也可能不是 JSP</li>\n</ul>\n<h4 id=\"6-视图\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#6-视图\"></a> 6. 视图<a href=\"spring&mybatis/Spring MVC#6-视图\"></a></h4>\n<ul>\n<li>既然 DispatcherServlet 已经知道由哪个视图渲染结果了，那请求的任务基本上也就完成了</li>\n<li>它的最后一站是视图的实现，在这里它交付模型数据，请求的任务也就完成了。视图使用模型数据渲染出结果，这个输出结果会通过响应对象传递给客户端</li>\n</ul>\n<h3 id=\"使用注解配置springmvc\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#使用注解配置springmvc\"></a> 使用注解配置SpringMVC<a href=\"spring&mybatis/Spring MVC#使用注解配置springmvc\"></a></h3>\n<h4 id=\"完整的命名空间\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#完整的命名空间\"></a> 完整的命名空间<a href=\"spring&mybatis/Spring MVC#完整的命名空间\"></a></h4>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">\"http://www.springframework.org/schema/context\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:mvc</span>=<span class=\"string\">\"http://www.springframework.org/schema/mvc\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    http://www.springframework.org/schema/mvc</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    http://www.springframework.org/schema/context</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    http://www.springframework.org/schema/context/spring-context-4.2.xsd\"</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n<h4 id=\"主要注解\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#主要注解\"></a> 主要注解<a href=\"spring&mybatis/Spring MVC#主要注解\"></a></h4>\n<p><img src=\"/Users/ng/Documents/spring&amp;mybatis/pictures/SpringMVC%E6%B3%A8%E8%A7%A3.png\" alt=\"\" class=\"article-img\"></p>\n<h3 id=\"配置视图解析器\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#配置视图解析器\"></a> 配置视图解析器<a href=\"spring&mybatis/Spring MVC#配置视图解析器\"></a></h3>\n<p>视图解析器负责定位视图，它接受一个由 DispaterServlet 传递过来的逻辑视图名来匹配一个特定的视图。</p>\n<ul>\n<li><strong>需求：</strong> 有一些页面我们不希望用户用户直接访问到，例如有重要数据的页面，例如有模型数据支撑的页面</li>\n<li><strong>造成的问题：</strong>\n<ul>\n<li>我们可以在【web】根目录下放置一个【test.jsp】模拟一个重要数据的页面，我们什么都不用做，重新启动服务器，网页中输入 <code>localhost/test.jsp</code> 就能够直接访问到了，这会造成<strong>数据泄露</strong></li>\n<li>另外我们可以直接输入 <code>localhost/index.jsp</code> 试试，根据我们上面的程序，这会是一个空白的页面，因为并没有获取到 <code>${message}</code> 参数就直接访问了，这会<strong>影响用户体验</strong></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"解决方案\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#解决方案\"></a> 解决方案<a href=\"spring&mybatis/Spring MVC#解决方案\"></a></h4>\n<ul>\n<li>\n<p>我们将我们的 JSP 文件配置在【WEB-INF】文件夹中的【page】文件夹下，【WEB-INF】是 Java Web 中默认的安全目录，是不允许用户直接访问的</p>\n<ul>\n<li>也就是你说你通过 <code>localhost/WEB-INF/</code> 这样的方式是永远访问不到的</li>\n</ul>\n</li>\n<li>\n<p>但是我们需要将这告诉给视图解析器，我们在 dispatcher-servlet.xml 文件中做如下配置</p>\n</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;bean id=<span class=\"string\">\"viewResolver\"</span></span><br><span class=\"line\">      <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"org.springframework.web.servlet.view.InternalResourceViewResolver\"</span>&gt;</span><br><span class=\"line\">    &lt;property name=<span class=\"string\">\"prefix\"</span> value=<span class=\"string\">\"/WEB-INF/page/\"</span> /&gt;</span><br><span class=\"line\">    &lt;property name=<span class=\"string\">\"suffix\"</span> value=<span class=\"string\">\".jsp\"</span> /&gt;</span><br><span class=\"line\">&lt;/bean&gt;</span><br></pre></td></tr></table></div></figure>\n<p>这里配置了一个 Spring MVC 内置的一个视图解析器，该解析器是遵循着一种约定：会<strong>在视图名上添加前缀和后缀，进而确定一个 Web 应用中视图资源的物理路径的</strong></p>\n<h5 id=\"修改hellocontroller\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#修改hellocontroller\"></a> 修改HelloController<a href=\"spring&mybatis/Spring MVC#修改hellocontroller\"></a></h5>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Controller用来声明控制器</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Controller</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloController</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * description: RequestMapping注解用来映射 路径请求和方法</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> httpServletRequest 请求</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> httpServletResponse 回应</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> org.springframework.web.servlet.ModelAndView</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/hello\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ModelAndView <span class=\"title\">handleRequest</span><span class=\"params\">(javax.servlet.http.HttpServletRequest httpServletRequest, javax.servlet.http.HttpServletResponse httpServletResponse)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        ModelAndView mav = <span class=\"keyword\">new</span> ModelAndView(<span class=\"string\">\"index\"</span>);</span><br><span class=\"line\">        mav.addObject(<span class=\"string\">\"message\"</span>, <span class=\"string\">\"Hello Spring MVC\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> mav;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<h5 id=\"配置视图解析器-2\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#配置视图解析器-2\"></a> 配置视图解析器<a href=\"spring&mybatis/Spring MVC#配置视图解析器-2\"></a></h5>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">\"http://www.springframework.org/schema/context\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--&lt;bean id=\"simpleUrlHandlerMapping\"--&gt;</span></span><br><span class=\"line\">                                        <span class=\"comment\">&lt;!--class=\"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping\"&gt;--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--&lt;property name=\"mappings\"&gt;--&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--&lt;props&gt;--&gt;</span></span><br><span class=\"line\">                <span class=\"comment\">&lt;!--&amp;lt;!&amp;ndash; /hello 路径的请求交给 id 为 helloController 的控制器处理&amp;ndash;&amp;gt;--&gt;</span></span><br><span class=\"line\">                <span class=\"comment\">&lt;!--&lt;prop key=\"/hello\"&gt;helloController&lt;/prop&gt;--&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--&lt;/props&gt;--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--&lt;/property&gt;--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--&lt;/bean&gt;--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--&lt;bean id=\"helloController\" class=\"controller.HelloController\"&gt;&lt;/bean&gt;--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 扫描controller下的组件 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:component-scan</span> <span class=\"attr\">base-package</span>=<span class=\"string\">\"controller\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"viewResolver\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.web.servlet.view.InternalResourceViewResolver\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"prefix\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"/WEB-INF/page/\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"suffix\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\".jsp\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n<h5 id=\"剪切indexjsp文件\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#剪切indexjsp文件\"></a> 剪切index.jsp文件<a href=\"spring&mybatis/Spring MVC#剪切indexjsp文件\"></a></h5>\n<h3 id=\"控制器接收请求数据\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#控制器接收请求数据\"></a> 控制器接收请求数据<a href=\"spring&mybatis/Spring MVC#控制器接收请求数据\"></a></h3>\n<h5 id=\"testjsp\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#testjsp\"></a> test.jsp<a href=\"spring&mybatis/Spring MVC#testjsp\"></a></h5>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%@</span> <span class=\"attr\">page</span> <span class=\"attr\">language</span>=<span class=\"string\">\"java\"</span> <span class=\"attr\">contentType</span>=<span class=\"string\">\"text/html; charset=UTF-8\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">pageEncoding</span>=<span class=\"string\">\"UTF-8\"</span> <span class=\"attr\">import</span>=<span class=\"string\">\"java.util.*\"</span> <span class=\"attr\">isELIgnored</span>=<span class=\"string\">\"false\"</span>%&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Spring MVC 传参方式<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"/param\"</span> <span class=\"attr\">role</span>=<span class=\"string\">\"form\"</span>&gt;</span></span><br><span class=\"line\">    用户名：<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"userName\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span><br><span class=\"line\">    密码：<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"提  交\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/test\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ModelAndView <span class=\"title\">handlePost</span><span class=\"params\">(javax.servlet.http.HttpServletRequest httpServletRequest, javax.servlet.http.HttpServletResponse httpServletResponse)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ModelAndView(<span class=\"string\">\"test\"</span>);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></div></figure>\n<h4 id=\"使用servlet原生api\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#使用servlet原生api\"></a> 使用Servlet原生API<a href=\"spring&mybatis/Spring MVC#使用servlet原生api\"></a></h4>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/param\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> ModelAndView <span class=\"title\">getParam</span><span class=\"params\">(HttpServletRequest request,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                         HttpServletResponse response)</span> </span>&#123;</span><br><span class=\"line\">    String userName = request.getParameter(<span class=\"string\">\"userName\"</span>);</span><br><span class=\"line\">    String password = request.getParameter(<span class=\"string\">\"password\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(userName);</span><br><span class=\"line\">    System.out.println(password);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<h4 id=\"使用requestparam前台参数名注入\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#使用requestparam前台参数名注入\"></a> 使用@RequestParam(“前台参数名”)注入<a href=\"spring&mybatis/Spring MVC#使用requestparam前台参数名注入\"></a></h4>\n<ul>\n<li>同名匹配原则</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/param\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> ModelAndView <span class=\"title\">getParam</span><span class=\"params\">(@RequestParam(<span class=\"string\">\"userName\"</span>)</span> String name, @<span class=\"title\">RequestParam</span><span class=\"params\">(<span class=\"string\">\"password\"</span>)</span> String pwd) </span>&#123;</span><br><span class=\"line\">    System.out.println(name);</span><br><span class=\"line\">    System.out.println(pwd);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>\n<p>该注解有三个变量：<code>value</code>、<code>required</code>、<code>defaultvalue</code></p>\n</li>\n<li>\n<p><code>value</code> ：指定 <code>name</code> 属性的名称是什么，<code>value</code> 属性都可以默认不写</p>\n<p><code>required</code> ：是否必须要有该参数，可以设置为【true】或者【false】</p>\n<p><code>defaultvalue</code> ：设置默认值</p>\n</li>\n</ul>\n<h4 id=\"使用模型传参\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#使用模型传参\"></a> 使用模型传参<a href=\"spring&mybatis/Spring MVC#使用模型传参\"></a></h4>\n<ul>\n<li><strong>要求： 前台参数名字必须和模型中的字段名一样</strong></li>\n</ul>\n<h5 id=\"user模型\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#user模型\"></a> User模型<a href=\"spring&mybatis/Spring MVC#user模型\"></a></h5>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> pojo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    String userName;</span><br><span class=\"line\">    String password;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* getter and setter */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/param\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> ModelAndView <span class=\"title\">getParam</span><span class=\"params\">(User user)</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(user.getUserName());</span><br><span class=\"line\">    System.out.println(user.getPassword());</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<h4 id=\"中文乱码解决\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#中文乱码解决\"></a> 中文乱码解决<a href=\"spring&mybatis/Spring MVC#中文乱码解决\"></a></h4>\n<ul>\n<li><strong>注意：</strong> 跟 Servlet 中的一样，该方法只对 POST 方法有效（因为是直接处理的 request）</li>\n</ul>\n<p>我们可以通过配置 Spring MVC 字符编码过滤器来完成，在 web.xml 中添加</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;filter&gt;</span><br><span class=\"line\">    &lt;filter-name&gt;CharacterEncodingFilter&lt;/filter-name&gt;</span><br><span class=\"line\">    &lt;filter-<span class=\"class\"><span class=\"keyword\">class</span>&gt;<span class=\"title\">org</span>.<span class=\"title\">springframework</span>.<span class=\"title\">web</span>.<span class=\"title\">filter</span>.<span class=\"title\">CharacterEncodingFilter</span>&lt;/<span class=\"title\">filter</span>-<span class=\"title\">class</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">init</span>-<span class=\"title\">param</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">        &lt;<span class=\"title\">param</span>-<span class=\"title\">name</span>&gt;<span class=\"title\">encoding</span>&lt;/<span class=\"title\">param</span>-<span class=\"title\">name</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">        &lt;!-- 设置编码格式 --&gt;</span></span><br><span class=\"line\"><span class=\"class\">        &lt;<span class=\"title\">param</span>-<span class=\"title\">value</span>&gt;<span class=\"title\">utf</span>-8&lt;/<span class=\"title\">param</span>-<span class=\"title\">value</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &lt;/<span class=\"title\">init</span>-<span class=\"title\">param</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">filter</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;<span class=\"title\">filter</span>-<span class=\"title\">mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">filter</span>-<span class=\"title\">name</span>&gt;<span class=\"title\">CharacterEncodingFilter</span>&lt;/<span class=\"title\">filter</span>-<span class=\"title\">name</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &lt;<span class=\"title\">url</span>-<span class=\"title\">pattern</span>&gt;/*&lt;/<span class=\"title\">url</span>-<span class=\"title\">pattern</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">filter</span>-<span class=\"title\">mapping</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n<h3 id=\"控制器回显数据\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#控制器回显数据\"></a> 控制器回显数据<a href=\"spring&mybatis/Spring MVC#控制器回显数据\"></a></h3>\n<ul>\n<li>在page下创建test2.jsp</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%@</span> <span class=\"attr\">page</span> <span class=\"attr\">language</span>=<span class=\"string\">\"java\"</span> <span class=\"attr\">contentType</span>=<span class=\"string\">\"text/html; charset=UTF-8\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">pageEncoding</span>=<span class=\"string\">\"UTF-8\"</span> <span class=\"attr\">import</span>=<span class=\"string\">\"java.util.*\"</span> <span class=\"attr\">isELIgnored</span>=<span class=\"string\">\"false\"</span> %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Spring MVC 数据回显<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>回显数据：$&#123;message&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n<h4 id=\"使用servlet原生api-2\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#使用servlet原生api-2\"></a> 使用Servlet原生API<a href=\"spring&mybatis/Spring MVC#使用servlet原生api-2\"></a></h4>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/value\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> ModelAndView <span class=\"title\">showData</span><span class=\"params\">(HttpServletRequest request,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                  HttpServletResponse response)</span> </span>&#123;</span><br><span class=\"line\">    request.setAttribute(<span class=\"string\">\"message\"</span>,<span class=\"string\">\"成功！\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ModelAndView(<span class=\"string\">\"test2\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<h4 id=\"使用modelandview\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#使用modelandview\"></a> 使用ModelAndView<a href=\"spring&mybatis/Spring MVC#使用modelandview\"></a></h4>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/value\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> ModelAndView <span class=\"title\">showData</span><span class=\"params\">(HttpServletRequest request,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                  HttpServletResponse response)</span> </span>&#123;</span><br><span class=\"line\">    ModelAndView mav = <span class=\"keyword\">new</span> ModelAndView(<span class=\"string\">\"test2\"</span>);</span><br><span class=\"line\">  mav.addObject(<span class=\"string\">\"message\"</span>,<span class=\"string\">\"成功！\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> mav;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<h4 id=\"使用model对象\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#使用model对象\"></a> 使用model对象<a href=\"spring&mybatis/Spring MVC#使用model对象\"></a></h4>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@ModelAttribute</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">model</span><span class=\"params\">(Model model)</span> </span>&#123;</span><br><span class=\"line\">    model.addAttribute(<span class=\"string\">\"message\"</span>, <span class=\"string\">\"注解成功\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/value\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">showData</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">\"test2\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<h3 id=\"客户端跳转\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#客户端跳转\"></a> 客户端跳转<a href=\"spring&mybatis/Spring MVC#客户端跳转\"></a></h3>\n<ul>\n<li>前面不管是地址 <code>/hello</code> 跳转到 index.jsp 还是 <code>/test</code> 跳转到 test.jsp，这些都是服务端的跳转，也就是 <code>request.getRequestDispatcher(&quot;地址&quot;).forward(request, response);</code></li>\n<li>那我们如何进行客户端跳转呢？我们继续在 HelloController 中编写</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/hello\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> ModelAndView <span class=\"title\">handleRequest</span><span class=\"params\">(javax.servlet.http.HttpServletRequest httpServletRequest, javax.servlet.http.HttpServletResponse httpServletResponse)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">    ModelAndView mav = <span class=\"keyword\">new</span> ModelAndView(<span class=\"string\">\"index\"</span>);</span><br><span class=\"line\">    mav.addObject(<span class=\"string\">\"message\"</span>, <span class=\"string\">\"Hello Spring MVC\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> mav;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/jump\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> ModelAndView <span class=\"title\">jump</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    ModelAndView mav = <span class=\"keyword\">new</span> ModelAndView(<span class=\"string\">\"redirect:/hello\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> mav;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//或者</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/jump\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">jump</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">\"redirect: ./hello\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>我们使用 <code>redirect:/hello</code> 就表示我们要跳转到 <code>/hello</code> 这个路径，我们重启服务器，在地址栏中输入：<code>localhost/jump</code> ，会自动跳转到 <code>/hello</code> 路径下</li>\n</ul>\n<h3 id=\"文件上传\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#文件上传\"></a> 文件上传<a href=\"spring&mybatis/Spring MVC#文件上传\"></a></h3>\n<ul>\n<li>需要先导入 <code>commons-io-1.3.2.jar</code> 和 <code>commons-fileupload-1.2.1.jar</code> 两个包</li>\n</ul>\n<h4 id=\"1-配置上传解析器\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#1-配置上传解析器\"></a> 1. 配置上传解析器<a href=\"spring&mybatis/Spring MVC#1-配置上传解析器\"></a></h4>\n<ul>\n<li>在 dispatcher-servlet.xml 中新增一句\n<ul>\n<li>开启对上传功能的支持</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;bean id=<span class=\"string\">\"multipartResolver\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"org.springframework.web.multipart.commons.CommonsMultipartResolver\"</span>/&gt;</span><br></pre></td></tr></table></div></figure>\n<h4 id=\"2-编写uploadjsp\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#2-编写uploadjsp\"></a> 2. 编写upload.jsp<a href=\"spring&mybatis/Spring MVC#2-编写uploadjsp\"></a></h4>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%@</span> <span class=\"attr\">page</span> <span class=\"attr\">contentType</span>=<span class=\"string\">\"text/html;charset=UTF-8\"</span> <span class=\"attr\">language</span>=<span class=\"string\">\"java\"</span> %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>测试文件上传<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"/upload\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span> <span class=\"attr\">enctype</span>=<span class=\"string\">\"multipart/form-data\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"picture\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"上 传\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n<h4 id=\"3-编写控制器\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#3-编写控制器\"></a> 3. 编写控制器<a href=\"spring&mybatis/Spring MVC#3-编写控制器\"></a></h4>\n<ul>\n<li>在 Package【controller】下新建【UploadController】类</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> controller;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Controller;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Controller</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UploadController</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/upload\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">upload</span><span class=\"params\">(@RequestParam(<span class=\"string\">\"picture\"</span>)</span> MultipartFile picture) <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        System.out.println(picture.getOriginalFilename());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/test2\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ModelAndView <span class=\"title\">upload</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ModelAndView(<span class=\"string\">\"upload\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<h4 id=\"4-测试\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#4-测试\"></a> 4. 测试<a href=\"spring&mybatis/Spring MVC#4-测试\"></a></h4>\n<h3 id=\"webxml\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#webxml\"></a> web.xml<a href=\"spring&mybatis/Spring MVC#webxml\"></a></h3>\n<h4 id=\"加载流程\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#加载流程\"></a> 加载流程<a href=\"spring&mybatis/Spring MVC#加载流程\"></a></h4>\n<p><img src=\"/Users/ng/Documents/spring&amp;mybatis/pictures/web_xml%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B.png\" alt=\"\" class=\"article-img\"></p>\n<h4 id=\"配置\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#配置\"></a> 配置<a href=\"spring&mybatis/Spring MVC#配置\"></a></h4>\n<p><img src=\"/Users/ng/Documents/spring&amp;mybatis/pictures/web_xml%E9%85%8D%E7%BD%AE.png\" alt=\"\" class=\"article-img\"></p>\n<h3 id=\"dispatcherservlet\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#dispatcherservlet\"></a> DispatcherServlet<a href=\"spring&mybatis/Spring MVC#dispatcherservlet\"></a></h3>\n<p><img src=\"/Users/ng/Documents/spring&amp;mybatis/pictures/SpringMVC%E6%B5%81%E7%A8%8B%E7%A4%BA%E4%BE%8B.jpg\" alt=\"\" class=\"article-img\"></p>\n<h3 id=\"特殊bean\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#特殊bean\"></a> 特殊bean<a href=\"spring&mybatis/Spring MVC#特殊bean\"></a></h3>\n<p><img src=\"/Users/ng/Documents/spring&amp;mybatis/pictures/SpringMVC%E7%89%B9%E6%AE%8Abean.png\" alt=\"\" class=\"article-img\"></p>\n<h3 id=\"applicationcontextxml配置文件标签\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#applicationcontextxml配置文件标签\"></a> applicationContext.xml配置文件标签<a href=\"spring&mybatis/Spring MVC#applicationcontextxml配置文件标签\"></a></h3>\n<p><img src=\"/Users/ng/Documents/spring&amp;mybatis/pictures/applicationContext_xml%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%A0%87%E7%AD%BE.png\" alt=\"\" class=\"article-img\"></p>\n<h3 id=\"异常处理\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#异常处理\"></a> 异常处理<a href=\"spring&mybatis/Spring MVC#异常处理\"></a></h3>\n<p><img src=\"/Users/ng/Documents/spring&amp;mybatis/pictures/SpringMVC%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86.png\" alt=\"\" class=\"article-img\"></p>\n<h3 id=\"数据处理\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#数据处理\"></a> 数据处理<a href=\"spring&mybatis/Spring MVC#数据处理\"></a></h3>\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th>数据类型</th>\n<th>处理所需注解</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>application/x-www-form-urlencoded</td>\n<td>Html表单默认传输编码类型，@RequestParam、@ModelAttribute可以处理，@RequestBody也能处理</td>\n</tr>\n<tr>\n<td>multipart/form-data</td>\n<td>是表单上传的非文本的内容，传递的是文件数据，设置该属性再配合post请求方式从而实现文件上传。需要使用解析器，不能直接处理（即使用@RequestBody不能处理这种格式的数据）</td>\n</tr>\n<tr>\n<td>其他格式</td>\n<td>其他格式包括application/json, application/xml等。这些格式的数据，必须使用@RequestBody来处理</td>\n</tr>\n</tbody>\n</table></div></div>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/test\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestController</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 普通请求</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * http://localhost:8089/test/test1</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping</span>(value = <span class=\"string\">\"/test1\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">test1</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"test1\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 简单get请求</span></span><br><span class=\"line\"><span class=\"comment\">     * 组合注解 <span class=\"doctag\">@GetMapping</span></span></span><br><span class=\"line\"><span class=\"comment\">     * 是<span class=\"doctag\">@RequestMapping</span>(method = RequestMethod.GET)的缩写</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * http://localhost:8089/test/test2/sun</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping</span>(value = <span class=\"string\">\"test2/&#123;name&#125;\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">test2</span><span class=\"params\">(@PathVariable String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// \\n不起作用了,那就直接用html中的标签吧</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"oh you are \"</span> + name + <span class=\"string\">\"&lt;br&gt; nice to meet you\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 简单get请求2</span></span><br><span class=\"line\"><span class=\"comment\">     * 注解 <span class=\"doctag\">@PathVariable</span> 映射URL绑定的占位符</span></span><br><span class=\"line\"><span class=\"comment\">     * 1）带占位符的URL是Spring3.0新增的功能，该功能在SpringMVC向REST目标挺进发展过程中具有里程碑的意义。</span></span><br><span class=\"line\"><span class=\"comment\">     * 2）通过<span class=\"doctag\">@PathVariable</span>可以将URL中占位符参数绑定到控制器处理方法的入参中：</span></span><br><span class=\"line\"><span class=\"comment\">     *    URL中的&#123;xxx&#125;占位符可以通过<span class=\"doctag\">@PathVariable</span>(\"xxx\")绑定到操作方法的入参中</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * http://localhost:8089/test/test3/admin&amp;admin</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping</span>(value = <span class=\"string\">\"/test3/&#123;name&#125;&amp;&#123;pwd&#125;\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">test3</span><span class=\"params\">(@PathVariable String name, @PathVariable String pwd)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (name.equals(<span class=\"string\">\"admin\"</span>) &amp;&amp; pwd.equals(<span class=\"string\">\"admin\"</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">\"hello welcome admin\"</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">\"oh sorry user name or password is wrong\"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * get请求</span></span><br><span class=\"line\"><span class=\"comment\">     * 注解 <span class=\"doctag\">@RequestParam</span>绑定请求参数值</span></span><br><span class=\"line\"><span class=\"comment\">     * 在处理方法入参使用<span class=\"doctag\">@RequestParam</span>可以把请求参数传递给请求方法，<span class=\"doctag\">@RequestParam</span>包含的属性值：</span></span><br><span class=\"line\"><span class=\"comment\">     * --- value ：参数名称</span></span><br><span class=\"line\"><span class=\"comment\">     * --- required ：是否必须，默认为true，表示请求参数中必须包含对应的参数，否则抛出异常。</span></span><br><span class=\"line\"><span class=\"comment\">     * --- defaultValue：当请求参数缺少或者有请求参数但值为空时，值采用该设置值</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * http://localhost:8089/test/test4?name=111&amp;pwd=111</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping</span>(value = <span class=\"string\">\"/test4\"</span>, method = RequestMethod.GET)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">test4</span><span class=\"params\">(@RequestParam(value = <span class=\"string\">\"name\"</span>, required = <span class=\"keyword\">true</span>)</span> String name,</span></span><br><span class=\"line\"><span class=\"function\">                             @<span class=\"title\">RequestParam</span><span class=\"params\">(value = <span class=\"string\">\"pwd\"</span>, required = <span class=\"keyword\">true</span>)</span> String pwd) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (name.equals(<span class=\"string\">\"admin\"</span>) &amp;&amp; pwd.equals(<span class=\"string\">\"admin\"</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> JSON.toJSONString(Result.success());</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> JSON.toJSONString(Result.error());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 简单post请求</span></span><br><span class=\"line\"><span class=\"comment\">     * 组合注解 <span class=\"doctag\">@PostMapping</span></span></span><br><span class=\"line\"><span class=\"comment\">     * 是<span class=\"doctag\">@RequestMapping</span>(method = RequestMethod.POST)的缩写。</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * http://localhost:8089/test/test5</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping</span>(value = <span class=\"string\">\"/test5\"</span>, method = RequestMethod.POST)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">test5</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"hello test5\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"test5\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * post请求</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * http://localhost:8089/test/test6?name=111&amp;pwd=111</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping</span>(value = <span class=\"string\">\"/test6\"</span>, method = RequestMethod.POST)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">test6</span><span class=\"params\">(@RequestParam(value = <span class=\"string\">\"name\"</span>, required = <span class=\"keyword\">true</span>)</span> String name,</span></span><br><span class=\"line\"><span class=\"function\">                              @<span class=\"title\">RequestParam</span><span class=\"params\">(value = <span class=\"string\">\"pwd\"</span>, required = <span class=\"keyword\">true</span>)</span> String pwd) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (name.equals(<span class=\"string\">\"admin\"</span>) &amp;&amp; pwd.equals(<span class=\"string\">\"admin\"</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> JSON.toJSONString(Result.success());</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> JSON.toJSONString(Result.error());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 参数为一个bean对象.spring会自动为我们关联映射</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * get post</span></span><br><span class=\"line\"><span class=\"comment\">     * http://localhost:8089/test/test7?id=1</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * post form-data和 x-www-form-urlencoded</span></span><br><span class=\"line\"><span class=\"comment\">     * http://localhost:8089/test/test7</span></span><br><span class=\"line\"><span class=\"comment\">     * id  1</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping</span>(value = <span class=\"string\">\"/test7\"</span>, method = &#123; RequestMethod.POST, RequestMethod.GET &#125;)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">test7</span><span class=\"params\">(BaseEntity entity)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != entity &amp;&amp; entity.getId() == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> JSON.toJSONString(Result.success());</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> JSON.toJSONString(Result.error());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 请求内容是一个json串,spring会自动把他和我们的参数bean对应起来</span></span><br><span class=\"line\"><span class=\"comment\">     * 不过要加<span class=\"doctag\">@RequestBody</span>注解</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * post row(application/json)</span></span><br><span class=\"line\"><span class=\"comment\">     * http://localhost:8089/test/test8</span></span><br><span class=\"line\"><span class=\"comment\">     * id   1</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping</span>(value = <span class=\"string\">\"/test8\"</span>, method = &#123; RequestMethod.POST, RequestMethod.GET &#125;)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">test8</span><span class=\"params\">(@RequestBody BaseEntity entity)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != entity &amp;&amp; entity.getId() == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> JSON.toJSONString(Result.success());</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> JSON.toJSONString(Result.error());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<h4 id=\"处理multipartform-data\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#处理multipartform-data\"></a> 处理multipart/form-data<a href=\"spring&mybatis/Spring MVC#处理multipartform-data\"></a></h4>\n<ul>\n<li>multipart格式的数据会将一个表单拆分为多个部分（part），每个部分对应一个输入域。在一般的表单输入域中，它所对应的部分中会放置文本型数据，但是如果上传文件的话，它所对应的部分可以是二进制</li>\n</ul>\n<p><img src=\"/Users/ng/Documents/spring&amp;mybatis/pictures/multipart_form-data%E7%A4%BA%E4%BE%8B.png\" alt=\"\" class=\"article-img\"></p>\n<ul>\n<li>配置一个multipart解析器，通过它来告诉DispatcherServlet该如何读取multipart请求</li>\n</ul>\n<h5 id=\"standardservletmultipartresolver\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#standardservletmultipartresolver\"></a> StandardServletMultipartResolver<a href=\"spring&mybatis/Spring MVC#standardservletmultipartresolver\"></a></h5>\n<ul>\n<li>applicationContext.xml中添加</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"multipartResolver\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.web.multipart.commons.StandardServletMultipartResolver\"</span>/&gt;</span></span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>配置类</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Bean</span>(name = <span class=\"string\">\"multipartResolver\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> StandardServletMultipartResolver <span class=\"title\">getStandardServletMultipartResolver</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">  \t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> StandardServletMultipartResolver();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>web.xml配置上传参数</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>dispatcherServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">param-name</span>&gt;</span>contextConfigLocation<span class=\"tag\">&lt;/<span class=\"name\">param-name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">param-value</span>&gt;</span>classpath:applicationContext.xml<span class=\"tag\">&lt;/<span class=\"name\">param-value</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">load-on-startup</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">load-on-startup</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">multipart-config</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--上传到/tmp/upload 目录--&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">location</span>&gt;</span>/tmp/upload<span class=\"tag\">&lt;/<span class=\"name\">location</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--文件大小为2M--&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">max-file-size</span>&gt;</span>2097152<span class=\"tag\">&lt;/<span class=\"name\">max-file-size</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--整个请求不超过4M--&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">max-request-size</span>&gt;</span>4194304<span class=\"tag\">&lt;/<span class=\"name\">max-request-size</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--所有文件都要写入磁盘--&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">file-size-threshold</span>&gt;</span>0<span class=\"tag\">&lt;/<span class=\"name\">file-size-threshold</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">multipart-config</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>dispatcherServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>配置类中配置上传参数</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">customizeRegistration</span><span class=\"params\">(ServletRegistration.Dynamic registration)</span> </span>&#123;</span><br><span class=\"line\">  \t<span class=\"comment\">//上传到/tmp/upload 目录，文件大小为2M，整个请求不超过4M，而且所有文件都要写入磁盘</span></span><br><span class=\"line\">  \tregistration.setMultipartConfig(<span class=\"keyword\">new</span> MultipartConfigElement(<span class=\"string\">\"E:\\\\upload_ftp\"</span>,<span class=\"number\">2097152</span>,<span class=\"number\">4194304</span>,<span class=\"number\">0</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<h5 id=\"commonsmultipartresolver\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#commonsmultipartresolver\"></a> CommonsMultipartResolver<a href=\"spring&mybatis/Spring MVC#commonsmultipartresolver\"></a></h5>\n<ul>\n<li>在applicationContext.xml中设置</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;bean id=<span class=\"string\">\"multipartResolver\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"org.springframework.web.multipart.commons.CommonsMultipartResolver\"</span>&gt;</span><br><span class=\"line\">       &lt;!--设置上传目录/tmp/upload;最大的文件容量设置为<span class=\"number\">2</span>M;最大的内存大小设置为<span class=\"number\">0</span>，表示所有文件都会写入磁盘中;无法设定multipart请求整体的最大容量--&gt;</span><br><span class=\"line\">        &lt;property name=<span class=\"string\">\"uploadTempDir\"</span> value=<span class=\"string\">\"/tmp/upload\"</span>/&gt;</span><br><span class=\"line\">        &lt;property name=<span class=\"string\">\"maxUploadSize\"</span> value=<span class=\"string\">\"2097152\"</span>/&gt;</span><br><span class=\"line\">        &lt;property name=<span class=\"string\">\"maxInMemorySize\"</span> value=<span class=\"string\">\"0\"</span>/&gt;</span><br><span class=\"line\">    &lt;/bean&gt;</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>CommonsMultipartResolver 相比较 StandardServletMultipartResolver 来说 就是无法设定multipart请求整体的最大容量。</li>\n<li>CommonsMultipartResolver不会强制要求设置临时文件路径。默认情况下，这个路径就是Servlet容器的临时目录。 StandardServletMultipartResolver 必须设置临时文件路径才能正常执行。（以上所述上传目录均为临时文件路径）</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"/picture\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span> <span class=\"attr\">enctype</span>=<span class=\"string\">\"multipart/form-data\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"picture\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(value = <span class=\"string\">\"/picture\"</span>,method = RequestMethod.POST)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getHome</span><span class=\"params\">(@RequestPart(<span class=\"string\">\"picture\"</span>)</span> MultipartFile picture) <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">\t\tString name = picture.getName();</span><br><span class=\"line\">\t\t<span class=\"keyword\">byte</span>[] bytes = picture.getBytes();</span><br><span class=\"line\">  \tpicture.transferTo(<span class=\"keyword\">new</span> File(<span class=\"string\">\"/\"</span>+picture.getOriginalFilename())); </span><br><span class=\"line\">  \t<span class=\"comment\">//这里保存到文件系统的时候要用相对路径，比如这里配置的是 /。以配置的上传目录为基准。即文件路径E:/upload_ftp/ 是保存的目录</span></span><br><span class=\"line\">  \t<span class=\"keyword\">return</span> <span class=\"string\">\"home\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>@RequestPart(“picture”) ：当注册表单提交的时候，picture属性将会给定一个byte数组，这个数组中包含了请求中对应part的数据（通过@RequestPart指定）。如果用户提交表单的时候没有选择文件，那么这个数组会是空（而不是null）\n<ul>\n<li>甚至可以用byte[]数组接收Multipart请求而不用 MultipartFile</li>\n</ul>\n</li>\n<li>用MultipartFile接收为我们提供了很多的方法以便进行接下来的工作</li>\n</ul>\n<h4 id=\"下载文件\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Spring MVC#下载文件\"></a> 下载文件<a href=\"spring&mybatis/Spring MVC#下载文件\"></a></h4>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"download/&#123;fileName:.+&#125;\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">downloadZipResource</span><span class=\"params\">(HttpServletRequest request, </span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                     HttpServletResponse response, </span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                     @PathVariable(<span class=\"string\">\"fileName\"</span>)</span> String fileName) </span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        ServletContext context = request.getSession().getServletContext();</span><br><span class=\"line\">        String dataDirectory  = context.getRealPath(<span class=\"string\">\"/downloads\"</span>) + <span class=\"string\">\"/\"</span> + fileName;</span><br><span class=\"line\">        File file = <span class=\"keyword\">new</span> File(dataDirectory);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (file.isFile()) </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            String mimeType = context.getMimeType(dataDirectory);   <span class=\"comment\">//直接根据文件的路径名来获取它的MineType，这样就可以灵活的根据请求的文件类型来返回输出流了</span></span><br><span class=\"line\">            response.setContentType(mimeType);</span><br><span class=\"line\">            response.addHeader(<span class=\"string\">\"Content-Disposition\"</span>, <span class=\"string\">\"attachment; filename=\"</span>+fileName);</span><br><span class=\"line\">            <span class=\"keyword\">try</span> </span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                OutputStream os = response.getOutputStream();;</span><br><span class=\"line\">                IOUtils.copy(<span class=\"keyword\">new</span> FileInputStream(file), os);</span><br><span class=\"line\">                os.flush();</span><br><span class=\"line\">            &#125; </span><br><span class=\"line\">            <span class=\"keyword\">catch</span> (IOException ex) &#123;</span><br><span class=\"line\">                ex.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></div></figure>\n","prev":{"title":"spring&mybatis/Spring IoC","link":"spring&mybatis/Spring IoC"},"next":{"title":"spring&mybatis/Spring基础","link":"spring&mybatis/Spring基础"},"plink":"ilucia.github.io/spring&mybatis/Spring MVC/","toc":[{"title":"<a class=\"markdownIt-Anchor\"></a> Spring MVC","id":"spring-mvc","index":"1","children":[{"title":"<a class=\"markdownIt-Anchor\"></a> Spring ioc","id":"spring-ioc","index":"1.1"},{"title":"<a class=\"markdownIt-Anchor\"></a> 原理","id":"原理","index":"1.2","children":[{"title":"<a class=\"markdownIt-Anchor\"></a> 1. DispatcherServlet","id":"1-dispatcherservlet","index":"1.2.1"},{"title":"<a class=\"markdownIt-Anchor\"></a> 2. HandlerMapping","id":"2-handlermapping","index":"1.2.2"},{"title":"<a class=\"markdownIt-Anchor\"></a> 3. 控制器","id":"3-控制器","index":"1.2.3"},{"title":"<a class=\"markdownIt-Anchor\"></a> 4. 返回DispatcherServlet","id":"4-返回dispatcherservlet","index":"1.2.4"},{"title":"<a class=\"markdownIt-Anchor\"></a> 5. 视图解析器","id":"5-视图解析器","index":"1.2.5"},{"title":"<a class=\"markdownIt-Anchor\"></a> 6. 视图","id":"6-视图","index":"1.2.6"}]},{"title":"<a class=\"markdownIt-Anchor\"></a> 使用注解配置SpringMVC","id":"使用注解配置springmvc","index":"1.3","children":[{"title":"<a class=\"markdownIt-Anchor\"></a> 完整的命名空间","id":"完整的命名空间","index":"1.3.1"},{"title":"<a class=\"markdownIt-Anchor\"></a> 主要注解","id":"主要注解","index":"1.3.2"}]},{"title":"<a class=\"markdownIt-Anchor\"></a> 配置视图解析器","id":"配置视图解析器","index":"1.4","children":[{"title":"<a class=\"markdownIt-Anchor\"></a> 解决方案","id":"解决方案","index":"1.4.1"}]},{"title":"<a class=\"markdownIt-Anchor\"></a> 控制器接收请求数据","id":"控制器接收请求数据","index":"1.5","children":[{"title":"<a class=\"markdownIt-Anchor\"></a> 使用Servlet原生API","id":"使用servlet原生api","index":"1.5.1"},{"title":"<a class=\"markdownIt-Anchor\"></a> 使用@RequestParam(“前台参数名”)注入","id":"使用requestparam前台参数名注入","index":"1.5.2"},{"title":"<a class=\"markdownIt-Anchor\"></a> 使用模型传参","id":"使用模型传参","index":"1.5.3"},{"title":"<a class=\"markdownIt-Anchor\"></a> 中文乱码解决","id":"中文乱码解决","index":"1.5.4"}]},{"title":"<a class=\"markdownIt-Anchor\"></a> 控制器回显数据","id":"控制器回显数据","index":"1.6","children":[{"title":"<a class=\"markdownIt-Anchor\"></a> 使用Servlet原生API","id":"使用servlet原生api-2","index":"1.6.1"},{"title":"<a class=\"markdownIt-Anchor\"></a> 使用ModelAndView","id":"使用modelandview","index":"1.6.2"},{"title":"<a class=\"markdownIt-Anchor\"></a> 使用model对象","id":"使用model对象","index":"1.6.3"}]},{"title":"<a class=\"markdownIt-Anchor\"></a> 客户端跳转","id":"客户端跳转","index":"1.7"},{"title":"<a class=\"markdownIt-Anchor\"></a> 文件上传","id":"文件上传","index":"1.8","children":[{"title":"<a class=\"markdownIt-Anchor\"></a> 1. 配置上传解析器","id":"1-配置上传解析器","index":"1.8.1"},{"title":"<a class=\"markdownIt-Anchor\"></a> 2. 编写upload.jsp","id":"2-编写uploadjsp","index":"1.8.2"},{"title":"<a class=\"markdownIt-Anchor\"></a> 3. 编写控制器","id":"3-编写控制器","index":"1.8.3"},{"title":"<a class=\"markdownIt-Anchor\"></a> 4. 测试","id":"4-测试","index":"1.8.4"}]},{"title":"<a class=\"markdownIt-Anchor\"></a> web.xml","id":"webxml","index":"1.9","children":[{"title":"<a class=\"markdownIt-Anchor\"></a> 加载流程","id":"加载流程","index":"1.9.1"},{"title":"<a class=\"markdownIt-Anchor\"></a> 配置","id":"配置","index":"1.9.2"}]},{"title":"<a class=\"markdownIt-Anchor\"></a> DispatcherServlet","id":"dispatcherservlet","index":"1.10"},{"title":"<a class=\"markdownIt-Anchor\"></a> 特殊bean","id":"特殊bean","index":"1.11"},{"title":"<a class=\"markdownIt-Anchor\"></a> applicationContext.xml配置文件标签","id":"applicationcontextxml配置文件标签","index":"1.12"},{"title":"<a class=\"markdownIt-Anchor\"></a> 异常处理","id":"异常处理","index":"1.13"},{"title":"<a class=\"markdownIt-Anchor\"></a> 数据处理","id":"数据处理","index":"1.14","children":[{"title":"<a class=\"markdownIt-Anchor\"></a> 处理multipart/form-data","id":"处理multipartform-data","index":"1.14.1"},{"title":"<a class=\"markdownIt-Anchor\"></a> 下载文件","id":"下载文件","index":"1.14.2"}]}]}],"copyright":{"author":"Ilucia Niu","license":"<a rel=\"license\" href=\"http://creativecommons.org/licenses/by/4.0/\">知识共享署名 4.0 国际许可协议</a>","published":"2022年4月27日","updated":"2022年4月27日"}}