{"title":"Win32 API 银行家算法的实现","date":"2019-05-26T00:00:00.000Z","link":"Others/BankersAlgorithm","tags":["Banker's Algorithms","thread","windows API"],"categories":["course"],"updated":"2022-04-27T15:24:01.559Z","content":"<blockquote>\n<p>Ps:就是拿自己写的报告</p>\n</blockquote>\n<p>一、基本信息</p>\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th>实验题目</th>\n<th>完成人姓名</th>\n<th>学号</th>\n<th>报告日期</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>银行家算法的实现</td>\n<td>Hanyuu</td>\n<td>None</td>\n<td>2019/0525</td>\n</tr>\n</tbody>\n</table></div></div>\n<h2 id=\"二-实验目的\"><a class=\"markdownIt-Anchor\" href=\"Others/BankersAlgorithm#二-实验目的\"></a> 二、实验目的<a href=\"Others/BankersAlgorithm#二-实验目的\"></a></h2>\n<p>通过实验，加深对多实例资源分配系统中死锁避免方法——银行家算法的理解，掌握 Windows 环境下银行家算法的实现方法，同时巩固利用 Windows API进行共享数据互斥访问和多线程编程的方法。</p>\n<h2 id=\"三-实验内容\"><a class=\"markdownIt-Anchor\" href=\"Others/BankersAlgorithm#三-实验内容\"></a> 三、实验内容<a href=\"Others/BankersAlgorithm#三-实验内容\"></a></h2>\n<ol>\n<li>在 Windows 操作系统上，利用 Win32 API 编写多线程应用程序实现银行家算法。</li>\n<li>创建 n 个线程来申请或释放资源，只有保证系统安全，才会批准资源申请。</li>\n<li>通过 Win32 API 提供的信号量机制，实现共享数据的并发访问</li>\n</ol>\n<h2 id=\"四-实验步骤主要数据结构和说明\"><a class=\"markdownIt-Anchor\" href=\"Others/BankersAlgorithm#四-实验步骤主要数据结构和说明\"></a> 四、实验步骤，主要数据结构和说明<a href=\"Others/BankersAlgorithm#四-实验步骤主要数据结构和说明\"></a></h2>\n<h3 id=\"设计思路\"><a class=\"markdownIt-Anchor\" href=\"Others/BankersAlgorithm#设计思路\"></a> 设计思路<a href=\"Others/BankersAlgorithm#设计思路\"></a></h3>\n<h4 id=\"设计\"><a class=\"markdownIt-Anchor\" href=\"Others/BankersAlgorithm#设计\"></a> 设计<a href=\"Others/BankersAlgorithm#设计\"></a></h4>\n<p><img src=\"BankersAlgorithm/1558867168019.png\" alt=\"\" class=\"article-img\"></p>\n<p><img src=\"/Others/BankersAlgorithm/1558867168019.png\" alt=\"\" class=\"article-img\"></p>\n<p>系统的各种资源类型被收纳在ResourceRow中，每个程序都有自己的allocation，max，need的resourceRow对象以表示其对应资源的数量。Container为每个注册的进程分配一个全局唯一的pid。启动进程通过调用start函数调起running工作线程。Container保持对资源的调配，所有线程需要资源都要向container发起请求，使用完毕后要向container声明释放资源。</p>\n<h3 id=\"流程图\"><a class=\"markdownIt-Anchor\" href=\"Others/BankersAlgorithm#流程图\"></a> 流程图<a href=\"Others/BankersAlgorithm#流程图\"></a></h3>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Process-&gt;Container:Register process</span><br><span class=\"line\">note left of Process:Initialize the container</span><br><span class=\"line\">Process-&gt;Container:Register max,allocated</span><br><span class=\"line\">Note left of Process:Request some resources</span><br><span class=\"line\">Process-&gt;Container:Request some resources</span><br><span class=\"line\">Container-&gt;ResourceCols:Check if the resource remained\\n is enough to support all process</span><br><span class=\"line\">ResourceCols-&gt;Container:Return the results</span><br><span class=\"line\">Container-&gt;ResourceCols:Modify the resource list</span><br><span class=\"line\">Container-&gt;Process:Return the results of \\nthe request(Permit/Forbid)</span><br><span class=\"line\">Note left of Process:Relsase some resources</span><br><span class=\"line\">Process-&gt;Container:Testify the release of the resource</span><br><span class=\"line\">Container-&gt;ResourceCols:Modify the resource list</span><br></pre></td></tr></table></div></figure>\n<p>五、程序运行的结果</p>\n<p><img src=\"BankersAlgorithm/1558867625868.png\" alt=\"\" class=\"article-img\"></p>\n<p><img src=\"/Others/BankersAlgorithm/1558867625868.png\" alt=\"\" class=\"article-img\"></p>\n<h3 id=\"六-实验体会\"><a class=\"markdownIt-Anchor\" href=\"Others/BankersAlgorithm#六-实验体会\"></a> 六、实验体会<a href=\"Others/BankersAlgorithm#六-实验体会\"></a></h3>\n<p>构建一个相对完整的运行体系比纯粹实现一个单独的功能相对要复杂不少。但是拥有良好的可扩展性和易于修改的特性。</p>\n<h2 id=\"七-源代码\"><a class=\"markdownIt-Anchor\" href=\"Others/BankersAlgorithm#七-源代码\"></a> 七、源代码<a href=\"Others/BankersAlgorithm#七-源代码\"></a></h2>\n<p>ProcessRow.h</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">pragma</span> once</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;sstream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">unsigned</span> ROW_COUNT = <span class=\"number\">4</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">unsigned</span> MAX_PROCESS = <span class=\"number\">512</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">ResourceRow</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"keyword\">unsigned</span> res[ROW_COUNT];</span><br><span class=\"line\">\tResourceRow()</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">unsigned</span> i = <span class=\"number\">0</span>; i &lt; ROW_COUNT; ++i)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tres[i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tResourceRow(<span class=\"keyword\">unsigned</span>* input)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; ROW_COUNT; ++i)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tres[i] = input[i];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">std</span>::<span class=\"function\"><span class=\"built_in\">string</span> <span class=\"title\">str</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">std</span>::<span class=\"built_in\">stringstream</span> res;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">unsigned</span> i = <span class=\"number\">0</span>; i &lt; ROW_COUNT; ++i)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tres &lt;&lt; <span class=\"keyword\">this</span>-&gt;res[i] &lt;&lt; <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> res.str();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span>&gt;=(<span class=\"keyword\">const</span> ResourceRow&amp; a, <span class=\"keyword\">const</span> ResourceRow&amp; b);</span><br></pre></td></tr></table></div></figure>\n<p>ProcessRow.cpp</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">\"resourceRow.h\"</span></span></span><br><span class=\"line\"><span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span>&gt;=(<span class=\"keyword\">const</span> ResourceRow&amp; a, <span class=\"keyword\">const</span> ResourceRow&amp; b)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; ROW_COUNT; ++i)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (a.res[i] &lt; b.res[i])</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<p>ProcessCol.h</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">pragma</span> once</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;process.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;Windows.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">\"resourceRow.h\"</span></span></span><br><span class=\"line\"><span class=\"comment\">//#include \"Container.h\"</span></span><br><span class=\"line\"><span class=\"comment\">//#include \"banker.h\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//extern const unsigned ROW_COUNT = 4;</span></span><br><span class=\"line\"><span class=\"comment\">//extern const unsigned MAX_PROCESS = 512;</span></span><br><span class=\"line\"><span class=\"comment\">//extern HANDLE mutex;</span></span><br><span class=\"line\"><span class=\"comment\">//extern HANDLE Rmutex;</span></span><br><span class=\"line\"><span class=\"comment\">//extern class Container;</span></span><br><span class=\"line\"><span class=\"comment\">//extern Container* container;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProcessCol</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"keyword\">unsigned</span> pid;</span><br><span class=\"line\">\tResourceRow allocation;</span><br><span class=\"line\">\tResourceRow max;</span><br><span class=\"line\">\tResourceRow need;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">static</span> DWORD WINAPI <span class=\"title\">running</span><span class=\"params\">(LPVOID lpThreadParemeter)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">HANDLE <span class=\"title\">start</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\tProcessCol(<span class=\"keyword\">unsigned</span> pid);</span><br><span class=\"line\">\tProcessCol();</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></div></figure>\n<p>ProcessCol.cpp</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">pragma</span> once</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;process.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;Windows.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">\"resourceRow.h\"</span></span></span><br><span class=\"line\"><span class=\"comment\">//#include \"Container.h\"</span></span><br><span class=\"line\"><span class=\"comment\">//#include \"banker.h\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//extern const unsigned ROW_COUNT = 4;</span></span><br><span class=\"line\"><span class=\"comment\">//extern const unsigned MAX_PROCESS = 512;</span></span><br><span class=\"line\"><span class=\"comment\">//extern HANDLE mutex;</span></span><br><span class=\"line\"><span class=\"comment\">//extern HANDLE Rmutex;</span></span><br><span class=\"line\"><span class=\"comment\">//extern class Container;</span></span><br><span class=\"line\"><span class=\"comment\">//extern Container* container;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProcessCol</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"keyword\">unsigned</span> pid;</span><br><span class=\"line\">\tResourceRow allocation;</span><br><span class=\"line\">\tResourceRow max;</span><br><span class=\"line\">\tResourceRow need;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">static</span> DWORD WINAPI <span class=\"title\">running</span><span class=\"params\">(LPVOID lpThreadParemeter)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">HANDLE <span class=\"title\">start</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\tProcessCol(<span class=\"keyword\">unsigned</span> pid);</span><br><span class=\"line\">\tProcessCol();</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">pragma</span> once</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;process.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;Windows.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">\"resourceRow.h\"</span></span></span><br><span class=\"line\"><span class=\"comment\">//#include \"Container.h\"</span></span><br><span class=\"line\"><span class=\"comment\">//#include \"banker.h\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//extern const unsigned ROW_COUNT = 4;</span></span><br><span class=\"line\"><span class=\"comment\">//extern const unsigned MAX_PROCESS = 512;</span></span><br><span class=\"line\"><span class=\"comment\">//extern HANDLE mutex;</span></span><br><span class=\"line\"><span class=\"comment\">//extern HANDLE Rmutex;</span></span><br><span class=\"line\"><span class=\"comment\">//extern class Container;</span></span><br><span class=\"line\"><span class=\"comment\">//extern Container* container;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProcessCol</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"keyword\">unsigned</span> pid;</span><br><span class=\"line\">\tResourceRow allocation;</span><br><span class=\"line\">\tResourceRow max;</span><br><span class=\"line\">\tResourceRow need;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">static</span> DWORD WINAPI <span class=\"title\">running</span><span class=\"params\">(LPVOID lpThreadParemeter)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">HANDLE <span class=\"title\">start</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\tProcessCol(<span class=\"keyword\">unsigned</span> pid);</span><br><span class=\"line\">\tProcessCol();</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">pragma</span> once</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;process.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;Windows.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">\"resourceRow.h\"</span></span></span><br><span class=\"line\"><span class=\"comment\">//#include \"Container.h\"</span></span><br><span class=\"line\"><span class=\"comment\">//#include \"banker.h\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//extern const unsigned ROW_COUNT = 4;</span></span><br><span class=\"line\"><span class=\"comment\">//extern const unsigned MAX_PROCESS = 512;</span></span><br><span class=\"line\"><span class=\"comment\">//extern HANDLE mutex;</span></span><br><span class=\"line\"><span class=\"comment\">//extern HANDLE Rmutex;</span></span><br><span class=\"line\"><span class=\"comment\">//extern class Container;</span></span><br><span class=\"line\"><span class=\"comment\">//extern Container* container;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProcessCol</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"keyword\">unsigned</span> pid;</span><br><span class=\"line\">\tResourceRow allocation;</span><br><span class=\"line\">\tResourceRow max;</span><br><span class=\"line\">\tResourceRow need;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">static</span> DWORD WINAPI <span class=\"title\">running</span><span class=\"params\">(LPVOID lpThreadParemeter)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">HANDLE <span class=\"title\">start</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\tProcessCol(<span class=\"keyword\">unsigned</span> pid);</span><br><span class=\"line\">\tProcessCol();</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">pragma</span> once</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;process.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;Windows.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">\"resourceRow.h\"</span></span></span><br><span class=\"line\"><span class=\"comment\">//#include \"Container.h\"</span></span><br><span class=\"line\"><span class=\"comment\">//#include \"banker.h\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//extern const unsigned ROW_COUNT = 4;</span></span><br><span class=\"line\"><span class=\"comment\">//extern const unsigned MAX_PROCESS = 512;</span></span><br><span class=\"line\"><span class=\"comment\">//extern HANDLE mutex;</span></span><br><span class=\"line\"><span class=\"comment\">//extern HANDLE Rmutex;</span></span><br><span class=\"line\"><span class=\"comment\">//extern class Container;</span></span><br><span class=\"line\"><span class=\"comment\">//extern Container* container;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProcessCol</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"keyword\">unsigned</span> pid;</span><br><span class=\"line\">\tResourceRow allocation;</span><br><span class=\"line\">\tResourceRow max;</span><br><span class=\"line\">\tResourceRow need;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">static</span> DWORD WINAPI <span class=\"title\">running</span><span class=\"params\">(LPVOID lpThreadParemeter)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">HANDLE <span class=\"title\">start</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\tProcessCol(<span class=\"keyword\">unsigned</span> pid);</span><br><span class=\"line\">\tProcessCol();</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></div></figure>\n<p>Container.h</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">pragma</span> once</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">\"processCol.h\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Container</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\tProcessCol <span class=\"built_in\">list</span>[MAX_PROCESS];</span><br><span class=\"line\">\t<span class=\"keyword\">unsigned</span> processCount;</span><br><span class=\"line\">\tResourceRow avilable;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\tContainer();</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">pushProcess</span><span class=\"params\">(ProcessCol* process)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">release</span><span class=\"params\">(<span class=\"keyword\">unsigned</span> pid)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">requests</span><span class=\"params\">(<span class=\"keyword\">unsigned</span> pid, ResourceRow request)</span></span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></div></figure>\n<p>Container.cpp</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">pragma</span> once</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">\"Container.h\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">Container* container;</span><br><span class=\"line\"><span class=\"keyword\">extern</span> HANDLE mutex;</span><br><span class=\"line\"><span class=\"keyword\">extern</span> HANDLE Rmutex;</span><br><span class=\"line\"><span class=\"keyword\">void</span> Container::print()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"[avilable]\"</span> &lt;&lt; avilable.str() &lt;&lt; <span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">unsigned</span> i = <span class=\"number\">0</span>; i &lt; processCount; ++i)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">list</span>[i].pid &lt;&lt; <span class=\"string\">\"    \"</span> &lt;&lt; <span class=\"built_in\">list</span>[i].allocation.str() &lt;&lt; <span class=\"string\">\"    \"</span> &lt;&lt; <span class=\"built_in\">list</span>[i].max.str() &lt;&lt; <span class=\"string\">\"    \"</span> &lt;&lt; <span class=\"built_in\">list</span>[i].need.str() &lt;&lt; <span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Container::Container()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tprocessCount = <span class=\"number\">0</span>;</span><br><span class=\"line\">\tmutex = CreateSemaphore(<span class=\"literal\">nullptr</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"literal\">nullptr</span>);</span><br><span class=\"line\">\tRmutex = CreateSemaphore(<span class=\"literal\">nullptr</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"literal\">nullptr</span>);</span><br><span class=\"line\">\t<span class=\"comment\">//for (unsigned i = 0; i &lt; MAX_PROCESS; ++i)</span></span><br><span class=\"line\">\t<span class=\"comment\">//&#123;</span></span><br><span class=\"line\">\t<span class=\"comment\">//\tlist[i] = nullptr;</span></span><br><span class=\"line\">\t<span class=\"comment\">//&#125;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">bool</span> Container::pushProcess(ProcessCol* process)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (processCount &gt;= MAX_PROCESS - <span class=\"number\">1</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tprocess-&gt;pid = processCount;</span><br><span class=\"line\">\t<span class=\"built_in\">list</span>[processCount] = *process;</span><br><span class=\"line\">\tprocessCount += <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> Container::release(<span class=\"keyword\">unsigned</span> pid)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tWaitForSingleObject(mutex, INFINITE);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">unsigned</span> i = <span class=\"number\">0</span>; i &lt; ROW_COUNT; ++i)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tavilable.res[i] += <span class=\"built_in\">list</span>[pid].allocation.res[i];</span><br><span class=\"line\">\t\t<span class=\"built_in\">list</span>[pid].allocation.res[i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">list</span>[pid].need.res[i] = <span class=\"built_in\">list</span>[pid].max.res[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"pid: \"</span> &lt;&lt; pid &lt;&lt; <span class=\"string\">\" 已释放\"</span> &lt;&lt; <span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\tcontainer-&gt;print();</span><br><span class=\"line\">\tReleaseSemaphore(mutex, <span class=\"number\">1</span>, <span class=\"literal\">nullptr</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> Container::requests(<span class=\"keyword\">unsigned</span> pid, ResourceRow request)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tWaitForSingleObject(mutex, INFINITE);</span><br><span class=\"line\">\tResourceRow newAvilable;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; ROW_COUNT; ++i)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tnewAvilable.res[i] = avilable.res[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">unsigned</span> count = <span class=\"keyword\">this</span>-&gt;processCount;</span><br><span class=\"line\">\t<span class=\"keyword\">bool</span>* flag = <span class=\"keyword\">new</span> <span class=\"keyword\">bool</span>[count];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">unsigned</span> i = <span class=\"number\">0</span>; i &lt; count; ++i)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tflag[i] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (count &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">bool</span> key = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">unsigned</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"keyword\">this</span>-&gt;processCount; ++i)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (flag[i] == <span class=\"literal\">false</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (newAvilable.res &gt;= <span class=\"built_in\">list</span>[i].need)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">unsigned</span> j = <span class=\"number\">0</span>; j &lt; ROW_COUNT; ++j)</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tnewAvilable.res[i] += <span class=\"built_in\">list</span>[i].allocation.res[i];</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\tflag[i] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t\t\tkey = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t\t\tcount -= <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (count == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"pid: \"</span> &lt;&lt; pid &lt;&lt; <span class=\"string\">\" 请求成功\"</span> &lt;&lt; <span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">unsigned</span> i = <span class=\"number\">0</span>; i &lt; ROW_COUNT; ++i)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">list</span>[pid].allocation.res[i] += request.res[i];</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">list</span>[pid].need.res[i] -= request.res[i];</span><br><span class=\"line\">\t\t\t\tavilable.res[i] -= request.res[i];</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tcontainer-&gt;print();</span><br><span class=\"line\">\t\t\tReleaseSemaphore(mutex, <span class=\"number\">1</span>, <span class=\"literal\">nullptr</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (key == <span class=\"literal\">false</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"pid: \"</span> &lt;&lt; pid &lt;&lt; <span class=\"string\">\"请求失败\"</span> &lt;&lt; <span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t\tcontainer-&gt;print();</span><br><span class=\"line\">\t\t\tReleaseSemaphore(mutex, <span class=\"number\">1</span>, <span class=\"literal\">nullptr</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; ROW_COUNT; ++i)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tavilable.res[i] -= request.res[i];</span><br><span class=\"line\">\t\t<span class=\"built_in\">list</span>[pid].allocation.res[i] += request.res[i];</span><br><span class=\"line\">\t\t<span class=\"built_in\">list</span>[pid].need.res[i] = <span class=\"built_in\">list</span>[pid].max.res[i] - <span class=\"built_in\">list</span>[pid].allocation.res[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//ReleaseSemaphore(mutex, 1, nullptr);</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<p>Banker.h</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">pragma</span> once</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;Windows.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;process.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sstream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;time.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">\"Container.h\"</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">\"processCol.h\"</span></span></span><br></pre></td></tr></table></div></figure>\n<p>Banker.cpp</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">\"banker.h\"</span></span></span><br><span class=\"line\"><span class=\"keyword\">extern</span> Container* container;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tsrand((<span class=\"keyword\">int</span>)time(<span class=\"number\">0</span>));</span><br><span class=\"line\">\tcontainer = <span class=\"keyword\">new</span> Container();</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">unsigned</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; ++i)</span><br><span class=\"line\">\t\tcontainer-&gt;pushProcess(<span class=\"keyword\">new</span> ProcessCol());</span><br><span class=\"line\">\tcontainer-&gt;avilable.res[<span class=\"number\">0</span>] = <span class=\"number\">10</span>;</span><br><span class=\"line\">\tcontainer-&gt;avilable.res[<span class=\"number\">1</span>] = <span class=\"number\">10</span>;</span><br><span class=\"line\">\tcontainer-&gt;avilable.res[<span class=\"number\">2</span>] = <span class=\"number\">20</span>;</span><br><span class=\"line\">\tcontainer-&gt;avilable.res[<span class=\"number\">3</span>] = <span class=\"number\">9</span>;</span><br><span class=\"line\">\tHANDLE* hdl = <span class=\"keyword\">new</span> HANDLE[container-&gt;processCount];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">unsigned</span> i = <span class=\"number\">0</span>; i &lt; container-&gt;processCount; ++i)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\thdl[i] = container-&gt;<span class=\"built_in\">list</span>[i].start();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">unsigned</span> i = <span class=\"number\">0</span>; i &lt; container-&gt;processCount; ++i)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tWaitForSingleObject(hdl[i],INFINITE);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tSleep(<span class=\"number\">40000</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n","prev":{"title":"高级数据结构复习","link":"Review/AdvancedDataStructures"},"next":{"title":"生产者消费者问题解决（windows API和Pthread双解决方案）","link":"Others/boundedBuffer"},"plink":"ilucia.github.io/Others/BankersAlgorithm/","toc":[{"title":"<a class=\"markdownIt-Anchor\"></a> 二、实验目的","id":"二-实验目的","index":"1"},{"title":"<a class=\"markdownIt-Anchor\"></a> 三、实验内容","id":"三-实验内容","index":"2"},{"title":"<a class=\"markdownIt-Anchor\"></a> 四、实验步骤，主要数据结构和说明","id":"四-实验步骤主要数据结构和说明","index":"3","children":[{"title":"<a class=\"markdownIt-Anchor\"></a> 设计思路","id":"设计思路","index":"3.1","children":[{"title":"<a class=\"markdownIt-Anchor\"></a> 设计","id":"设计","index":"3.1.1"}]},{"title":"<a class=\"markdownIt-Anchor\"></a> 流程图","id":"流程图","index":"3.2"},{"title":"<a class=\"markdownIt-Anchor\"></a> 六、实验体会","id":"六-实验体会","index":"3.3"}]},{"title":"<a class=\"markdownIt-Anchor\"></a> 七、源代码","id":"七-源代码","index":"4"}],"copyright":{"author":"Ilucia Niu","license":"<a rel=\"license\" href=\"http://creativecommons.org/licenses/by/4.0/\">知识共享署名 4.0 国际许可协议</a>","published":"2019年5月26日","updated":"2022年4月27日"}}