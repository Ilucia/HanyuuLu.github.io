{"title":"Tensorflow参数参阅","date":"2019-01-30T10:49:28.000Z","link":"Tensorflow/TensorflowRef","updated":"2022-04-27T15:24:01.715Z","content":"<h2 id=\"tensorflow变量类型\"><a class=\"markdownIt-Anchor\" href=\"Tensorflow/TensorflowRef#tensorflow变量类型\"></a> Tensorflow变量类型<a href=\"Tensorflow/TensorflowRef#tensorflow变量类型\"></a></h2>\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Useage</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://www.tensorflow.org/api_docs/python/tf/Variable?hl=zh-CN\" target=\"_blank\" rel=\"noopener\">tf.Variable</a></td>\n<td>Tensor变量</td>\n</tr>\n<tr>\n<td><a href=\"https://www.tensorflow.org/api_docs/python/tf/constant?hl=zh-CN\" target=\"_blank\" rel=\"noopener\">tf.constant</a></td>\n<td>Tensor常量</td>\n</tr>\n<tr>\n<td><a href=\"https://www.tensorflow.org/api_docs/python/tf/placeholder?hl=zh-CN\" target=\"_blank\" rel=\"noopener\">tf.placeholder</a></td>\n<td>Tensor占位符</td>\n</tr>\n<tr>\n<td><a href=\"https://www.tensorflow.org/api_docs/python/tf/SparseTensor?hl=zh-CN\" target=\"_blank\" rel=\"noopener\">tf.SparseTensor</a></td>\n<td>Tensor稀疏张量</td>\n</tr>\n</tbody>\n</table></div></div>\n<h2 id=\"设备管理\"><a class=\"markdownIt-Anchor\" href=\"Tensorflow/TensorflowRef#设备管理\"></a> 设备管理<a href=\"Tensorflow/TensorflowRef#设备管理\"></a></h2>\n<h3 id=\"查看设备列表\"><a class=\"markdownIt-Anchor\" href=\"Tensorflow/TensorflowRef#查看设备列表\"></a> 查看设备列表<a href=\"Tensorflow/TensorflowRef#查看设备列表\"></a></h3>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">from</span> tensorflow.python.client <span class=\"keyword\">import</span> device_lib</span><br><span class=\"line\">os.environ[<span class=\"string\">\"TF_CPP_MIN_LOG_LEVEL\"</span>] = <span class=\"string\">\"99\"</span></span><br><span class=\"line\">print(device_lib.list_local_devices())</span><br></pre></td></tr></table></div></figure>\n<p>样例输出：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[name: <span class=\"string\">\"/device:CPU:0\"</span></span><br><span class=\"line\">device_type: <span class=\"string\">\"CPU\"</span></span><br><span class=\"line\">memory_limit: <span class=\"number\">268435456</span></span><br><span class=\"line\">locality &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">incarnation: <span class=\"number\">16586473374130916263</span></span><br><span class=\"line\">, name: <span class=\"string\">\"/device:GPU:0\"</span></span><br><span class=\"line\">device_type: <span class=\"string\">\"GPU\"</span></span><br><span class=\"line\">memory_limit: <span class=\"number\">1418693427</span></span><br><span class=\"line\">locality &#123;</span><br><span class=\"line\">  bus_id: <span class=\"number\">1</span></span><br><span class=\"line\">  links &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">incarnation: <span class=\"number\">9802250829700710596</span></span><br><span class=\"line\">physical_device_desc: <span class=\"string\">\"device: 0, name: GeForce GTX 1050 Ti, pci bus id: 0000:01:00.0, compute capability: 6.1\"</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></div></figure>\n<h3 id=\"指定某设备进行计算\"><a class=\"markdownIt-Anchor\" href=\"Tensorflow/TensorflowRef#指定某设备进行计算\"></a> 指定某设备进行计算<a href=\"Tensorflow/TensorflowRef#指定某设备进行计算\"></a></h3>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> tensorflow <span class=\"keyword\">as</span> tf</span><br><span class=\"line\"><span class=\"comment\">#选择设备 CPU-&gt;CPU:0</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> tf.device(<span class=\"string\">'/gpu:1'</span>):</span><br><span class=\"line\">    <span class=\"comment\"># '/gpu:0'</span></span><br><span class=\"line\">    <span class=\"comment\"># '/cpu:0'</span></span><br><span class=\"line\">    v1 = tf.constant([<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>], shape=[<span class=\"number\">3</span>], name=<span class=\"string\">'v1'</span>)</span><br><span class=\"line\">    v2 = tf.constant([<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>], shape=[<span class=\"number\">3</span>], name=<span class=\"string\">'v2'</span>)</span><br><span class=\"line\">    sumV12 = v1 + v2</span><br><span class=\"line\">    <span class=\"comment\">#config=tf.ConfigProto(log_device_placement=True)打印执行操作所用的设备</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> tf.Session(config=tf.ConfigProto(log_device_placement=<span class=\"keyword\">True</span>)) <span class=\"keyword\">as</span> sess:</span><br><span class=\"line\">        <span class=\"keyword\">print</span> sess.run(sumV12)</span><br></pre></td></tr></table></div></figure>\n<h3 id=\"使用gpu计算要求\"><a class=\"markdownIt-Anchor\" href=\"Tensorflow/TensorflowRef#使用gpu计算要求\"></a> 使用GPU计算要求<a href=\"Tensorflow/TensorflowRef#使用gpu计算要求\"></a></h3>\n<p>若要使用Tensorflow-gpu，请检查您是否有<strong>算力大于3的NVIDIA显卡</strong>。</p>\n<ul>\n<li>查询显卡算力<a href=\"https://developer.nvidia.com/cuda-gpus#collapseOne\" target=\"_blank\" rel=\"noopener\">地址</a></li>\n<li>若要使用CUDA加速计算，请确保您已安装<a href=\"https://developer.nvidia.com/cuda-downloads\" target=\"_blank\" rel=\"noopener\">CUDA Toolkit</a>,并且按需下载并配置您需要的<a href=\"https://developer.nvidia.com/deep-learning-software\" target=\"_blank\" rel=\"noopener\">Deep learning frameworks</a>,目前，我们用到的frameworks有<a href=\"https://developer.nvidia.com/cudnn\" target=\"_blank\" rel=\"noopener\">cuDNN</a>,请确保您的framework和CUDA版本配套，否则<strong>无法使用</strong>。</li>\n</ul>\n<h2 id=\"使用交互式环境\"><a class=\"markdownIt-Anchor\" href=\"Tensorflow/TensorflowRef#使用交互式环境\"></a> 使用交互式环境<a href=\"Tensorflow/TensorflowRef#使用交互式环境\"></a></h2>\n<h2 id=\"查看tensor详细情况\"><a class=\"markdownIt-Anchor\" href=\"Tensorflow/TensorflowRef#查看tensor详细情况\"></a> 查看Tensor详细情况<a href=\"Tensorflow/TensorflowRef#查看tensor详细情况\"></a></h2>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"comment\">#使用CPU进行计算</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> tf.device(<span class=\"string\">\"/cpu:0\"</span>):</span><br><span class=\"line\">        a = tf.constant([<span class=\"number\">1.0</span>,<span class=\"number\">2.0</span>,<span class=\"number\">3.0</span>,<span class=\"number\">4.0</span>,<span class=\"number\">5.0</span>,<span class=\"number\">6.0</span>],shape=[<span class=\"number\">2</span>,<span class=\"number\">3</span>])</span><br><span class=\"line\">        b = tf.constant([<span class=\"number\">1.0</span>,<span class=\"number\">2.0</span>,<span class=\"number\">3.0</span>,<span class=\"number\">4.0</span>,<span class=\"number\">5.0</span>,<span class=\"number\">6.0</span>],shape=[<span class=\"number\">3</span>,<span class=\"number\">2</span>])</span><br><span class=\"line\">        c = tf.matmul(a,b)</span><br><span class=\"line\">        <span class=\"comment\">#查看计算时硬件的使用情况</span></span><br><span class=\"line\">        sess = tf.Session(config=tf.ConfigProto(log_device_placement=<span class=\"keyword\">True</span>))</span><br><span class=\"line\">        print(sess.run(c))</span><br><span class=\"line\"><span class=\"comment\">#设置运行时候的参数</span></span><br><span class=\"line\">        options = tf.RunOptions(output_partition_graphs=<span class=\"keyword\">True</span>)</span><br><span class=\"line\">        metadata = tf.RunMetadata()</span><br><span class=\"line\">        c_val = sess.run(c,options=options,run_metadata=metadata)</span><br><span class=\"line\">        print(metadata.partition_graphs)</span><br><span class=\"line\">        <span class=\"comment\">#关闭session</span></span><br><span class=\"line\">        sess.close()</span><br></pre></td></tr></table></div></figure>\n<h2 id=\"importerror-no-module-named-input_data\"><a class=\"markdownIt-Anchor\" href=\"Tensorflow/TensorflowRef#importerror-no-module-named-input_data\"></a> ImportError: No module named input_data<a href=\"Tensorflow/TensorflowRef#importerror-no-module-named-input_data\"></a></h2>\n<pre><code>由于版本更新，Tensorflow已经不建议再使用input_data.如果需要继续使用，请查看[input_data.py](../Example/input_data.py)\n</code></pre>\n<h2 id=\"tensorflow结构\"><a class=\"markdownIt-Anchor\" href=\"Tensorflow/TensorflowRef#tensorflow结构\"></a> TensorFlow结构<a href=\"Tensorflow/TensorflowRef#tensorflow结构\"></a></h2>\n<ul>\n<li>使用图 (graph) 来表示计算任务.</li>\n<li>在被称之为 会话 (Session) 的上下文 (context) 中执行图.</li>\n<li>使用 tensor 表示数据.</li>\n<li>通过 变量 (Variable) 维护状态.</li>\n<li>使用 feed 和 fetch 可以为任意的操作(arbitrary operation) 赋值或者从其中获取数据.</li>\n</ul>\n<h2 id=\"基本操作符\"><a class=\"markdownIt-Anchor\" href=\"Tensorflow/TensorflowRef#基本操作符\"></a> 基本操作符<a href=\"Tensorflow/TensorflowRef#基本操作符\"></a></h2>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> tensorflow <span class=\"keyword\">as</span> tf</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>常量</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> tensorflow <span class=\"keyword\">as</span> tf</span><br><span class=\"line\">node0 = tf.constant(<span class=\"number\">3.0</span>,dtype=tf.float32)</span><br><span class=\"line\">node1 = tf.constant(<span class=\"number\">3.0</span>,dtype)<span class=\"comment\"># also tf.float32 implicitly</span></span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>会话</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sess = tf.Session()</span><br><span class=\"line\">print(sess.run([node0,node1]))</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>相加计算</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node2 = tf.add(node0, node1)</span><br><span class=\"line\">print(<span class=\"string\">'node2'</span>, sess.run(node2))</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>矩阵乘法</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node2 = tf.matmul(node0,node1)</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>Placeholder占位符</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = tf.placeholder(tf.float32)</span><br><span class=\"line\">b = tf.placeholder(tf.float32)</span><br><span class=\"line\">adder_node = a + b  <span class=\"comment\"># + provides a shortcut for tf.add(a, b)</span></span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>feed_dict</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(sess.run(adder_node, &#123;a:<span class=\"number\">3</span>, b:<span class=\"number\">4.5</span>&#125;))</span><br><span class=\"line\">print(sess.run(adder_node, &#123;a: [<span class=\"number\">1</span>,<span class=\"number\">3</span>], b: [<span class=\"number\">2</span>,<span class=\"number\">4</span>]&#125;))</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>变量</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">W = tf.Variable([<span class=\"number\">.3</span>], dtype=tf.float32)</span><br><span class=\"line\">b = tf.Variable([<span class=\"number\">-.3</span>], dtype=tf.float32)</span><br><span class=\"line\">x = tf.placeholder(tf.float32)</span><br><span class=\"line\">linear_model = W*x + b</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>初始化变量</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">init = tf.global_variables_initializer()\\</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>求值</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(sess.run(linear_model, &#123;x: [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]&#125;))</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>结束会话</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sess.close()</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>降维求和<br>\n··· py<br>\nloss = tf.reduce_sum()</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* 损失函数</span><br><span class=\"line\">``` py</span><br><span class=\"line\">y = tf.placeholder(tf.float32)</span><br><span class=\"line\">squared_deltas = tf.square(linear_model - y)    #损失函数(y(hat)-y)^2</span><br><span class=\"line\">loss = tf.reduce_sum(squared_deltas)            #减小Loss</span><br><span class=\"line\">print(sess.run(loss, &#123;x: [1,2,3,4], y: [0, -1, -2, -3]&#125;))</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>梯度下降</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">optimizer = tf.train.GradientDescentOptimizer(<span class=\"number\">0.01</span>) <span class=\"comment\">#梯度下降法</span></span><br><span class=\"line\">train = optimizer.minimize(loss)                    <span class=\"comment\">#设定损失函数目标</span></span><br><span class=\"line\">sess.run(init)<span class=\"comment\"># reset values to incorrect defaults. #初始化变量</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1000</span>):</span><br><span class=\"line\">   sess.run(train, &#123;x: [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>], y: [<span class=\"number\">0</span>, <span class=\"number\">-1</span>, <span class=\"number\">-2</span>, <span class=\"number\">-3</span>]&#125;)<span class=\"comment\">#迭代优化</span></span><br><span class=\"line\">   <span class=\"comment\">#print(sess.run([W, b]))</span></span><br><span class=\"line\">print(sess.run([W, b]))                             <span class=\"comment\">#现实更新后的W,b的值</span></span><br></pre></td></tr></table></div></figure>\n<blockquote>\n<ul>\n<li>tf.argmax</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;tf.argmax(input, axis=<span class=\"keyword\">None</span>, name=<span class=\"keyword\">None</span>, dimension=<span class=\"keyword\">None</span>)</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></div></figure>\n</blockquote>\n<blockquote>\n<p>此函数是对矩阵按行或列计算最大值</p>\n<h3 id=\"参数\"><a class=\"markdownIt-Anchor\" href=\"Tensorflow/TensorflowRef#参数\"></a> 参数</h3>\n<ul>\n<li>input：输入Tensor</li>\n<li>axis：0表示按列，1表示按行</li>\n<li>name：名称</li>\n<li>dimension：和axis功能一样，默认axis取值优先。新加的字段<br>\n返回：Tensor  一般是行或列的最大值下标向量</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>tf.cast</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;   a = tf.Variable([<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>])</span><br><span class=\"line\">&gt;   b = tf.cast(a,dtype=tf.bool)</span><br><span class=\"line\">&gt;   sess = tf.Session()</span><br><span class=\"line\">&gt;   sess.run(tf.initialize_all_variables())</span><br><span class=\"line\">&gt;   print(sess.run(b))</span><br><span class=\"line\">&gt;   [ <span class=\"keyword\">True</span> <span class=\"keyword\">False</span> <span class=\"keyword\">False</span> <span class=\"keyword\">True</span> <span class=\"keyword\">True</span>]</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></div></figure>\n</blockquote>\n<blockquote>\n<p>cast(x, dtype, name=None)<br>\n将x的数据格式转化成dtype.例如，原来x的数据格式是bool，<br>\n那么将其转化成float以后，就能够将其转化成0和1的序列。反之也可以</p>\n</blockquote>\n","prev":{"title":"Tensorflow入坑试水","link":"Tensorflow/TensorflowLeadin"},"next":{"title":"工具链和工具索引","link":"Link"},"plink":"ilucia.github.io/Tensorflow/TensorflowRef/","toc":[{"title":"<a class=\"markdownIt-Anchor\"></a> Tensorflow变量类型","id":"tensorflow变量类型","index":"1"},{"title":"<a class=\"markdownIt-Anchor\"></a> 设备管理","id":"设备管理","index":"2","children":[{"title":"<a class=\"markdownIt-Anchor\"></a> 查看设备列表","id":"查看设备列表","index":"2.1"},{"title":"<a class=\"markdownIt-Anchor\"></a> 指定某设备进行计算","id":"指定某设备进行计算","index":"2.2"},{"title":"<a class=\"markdownIt-Anchor\"></a> 使用GPU计算要求","id":"使用gpu计算要求","index":"2.3"}]},{"title":"<a class=\"markdownIt-Anchor\"></a> 使用交互式环境","id":"使用交互式环境","index":"3"},{"title":"<a class=\"markdownIt-Anchor\"></a> 查看Tensor详细情况","id":"查看tensor详细情况","index":"4"},{"title":"<a class=\"markdownIt-Anchor\"></a> ImportError: No module named input_data","id":"importerror-no-module-named-input_data","index":"5"},{"title":"<a class=\"markdownIt-Anchor\"></a> TensorFlow结构","id":"tensorflow结构","index":"6"},{"title":"<a class=\"markdownIt-Anchor\"></a> 基本操作符","id":"基本操作符","index":"7","children":[{"title":"","id":"参数","index":"7.1"}]}],"copyright":{"author":"Ilucia Niu","license":"<a rel=\"license\" href=\"http://creativecommons.org/licenses/by/4.0/\">知识共享署名 4.0 国际许可协议</a>","published":"2019年1月30日","updated":"2022年4月27日"}}