{"title":"spring&mybatis/Dubbo","date":"2022-04-27T15:24:01.747Z","link":"spring&mybatis/Dubbo","updated":"2022-04-27T15:24:01.747Z","content":"<h1 id=\"dubbo\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#dubbo\"></a> Dubbo<a href=\"spring&mybatis/Dubbo#dubbo\"></a></h1>\n<h3 id=\"作用\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#作用\"></a> <strong>作用</strong><a href=\"spring&mybatis/Dubbo#作用\"></a></h3>\n<p><img src=\"/Users/ng/Documents/spring&amp;mybatis/pictures/Dubbo%E6%9C%8D%E5%8A%A1%E6%B2%BB%E7%90%86.jpeg\" alt=\"\" class=\"article-img\"></p>\n<h3 id=\"架构\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#架构\"></a> <strong>架构</strong><a href=\"spring&mybatis/Dubbo#架构\"></a></h3>\n<p><img src=\"/Users/ng/Documents/spring&amp;mybatis/pictures/dubbo-architecture.jpg\" alt=\"\" class=\"article-img\"></p>\n<h4 id=\"节点角色说明\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#节点角色说明\"></a> 节点角色说明<a href=\"spring&mybatis/Dubbo#节点角色说明\"></a></h4>\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th>节点</th>\n<th>角色说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Provider</td>\n<td>暴露服务的服务提供方</td>\n</tr>\n<tr>\n<td>Consumer</td>\n<td>调用远程服务的服务消费方</td>\n</tr>\n<tr>\n<td>Registry</td>\n<td>服务注册与发现的注册中心</td>\n</tr>\n<tr>\n<td>Monitor</td>\n<td>统计服务的调用次数和调用时间的监控中心</td>\n</tr>\n<tr>\n<td>Container</td>\n<td>服务运行容器</td>\n</tr>\n</tbody>\n</table></div></div>\n<p>看了这几个概念后似乎发现，其实 Dubbo 的架构也是很简单的（其实现细节是复杂的），为什么这么说呢，有没有发现，其实很像<strong>生产者-消费者</strong>模型。只是在这种模型上，加上了<strong>注册中心和监控中心</strong>，用于管理提供方提供的<strong>url</strong>，以及管理整个过程。</p>\n<p>那么，整个发布-订阅的过程就非常的简单了。</p>\n<ul>\n<li>启动容器，加载，<strong>运行服务提供者</strong>。</li>\n<li>服务提供者在启动时，在注册中心<strong>发布注册</strong>自己提供的<strong>服务</strong>。</li>\n<li>服务消费者在启动时，在注册中心<strong>订阅</strong>自己所需的<strong>服务</strong>。</li>\n</ul>\n<p>如果考虑<strong>失败或变更</strong>的情况，就需要考虑下面的过程。</p>\n<ul>\n<li>注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者。</li>\n<li>服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用。</li>\n<li>服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心。</li>\n</ul>\n<h2 id=\"dubbo项目构建\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#dubbo项目构建\"></a> Dubbo项目构建<a href=\"spring&mybatis/Dubbo#dubbo项目构建\"></a></h2>\n<h3 id=\"基础\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#基础\"></a> <strong>基础</strong><a href=\"spring&mybatis/Dubbo#基础\"></a></h3>\n<h4 id=\"服务端\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#服务端\"></a> 服务端<a href=\"spring&mybatis/Dubbo#服务端\"></a></h4>\n<p>首先，我们先把服务端的接口写好，因为其实 dubbo 的作用简单来说就是给消费端提供接口。</p>\n<h5 id=\"接口定义\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#接口定义\"></a> 接口定义<a href=\"spring&mybatis/Dubbo#接口定义\"></a></h5>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * xml方式服务提供者接口</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">ProviderService</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">SayHello</span><span class=\"params\">(String word)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<p>这个接口非常简单，只是包含一个 SayHello 的方法。</p>\n<p>接着，定义它的实现类。</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * xml方式服务提供者实现类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProviderServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">ProviderService</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">SayHello</span><span class=\"params\">(String word)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> word;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<p>这样我们就把我们的接口写好了，那么我们应该怎么将我们的服务暴露出去呢？</p>\n<h4 id=\"导入-maven-依赖\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#导入-maven-依赖\"></a> 导入 maven 依赖<a href=\"spring&mybatis/Dubbo#导入-maven-依赖\"></a></h4>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.ouyangsihai<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>dubbo-provider<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.8.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/com.alibaba/dubbo --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>dubbo<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.6.6<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.zookeeper<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>zookeeper<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.4.10<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.101tec<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>zkclient<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>io.netty<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>netty-all<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.1.32.Final<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.curator<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>curator-framework<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.8.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.curator<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>curator-recipes<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.8.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n<p>这里使用的 dubbo 的版本是 <code>2.6.6</code> ，需要注意的是，如果你只导入 dubbo 的包的时候是<strong>会报错</strong>的，<strong>找不到 netty 和 curator 的依赖</strong>，所以，在这里我们需要把这两个的依赖加上，就不会报错了。</p>\n<p>另外，这里我们使用 zookeeper 作为注册中心。</p>\n<p>到目前为止，dubbo 需要的环境就已经可以了，下面，我们就把上面刚刚定义的接口暴露出去。</p>\n<h5 id=\"暴露接口xml-配置方法\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#暴露接口xml-配置方法\"></a> 暴露接口（xml 配置方法）<a href=\"spring&mybatis/Dubbo#暴露接口xml-配置方法\"></a></h5>\n<p>首先，我们在我们项目的 resource 目录下<strong>创建 META-INF.spring 包</strong>，然后再创建 <strong>provider.xml</strong> 文件，名字可以任取哦，如下图。</p>\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81ODI0MDE2LTJjNDdmODRjOTYwZmQwMWYucG5n\" alt=\"img\" class=\"article-img\"></p>\n<p>​</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:dubbo</span>=<span class=\"string\">\"http://code.alibabatech.com/schema/dubbo\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans.xsd        http://code.alibabatech.com/schema/dubbo        http://code.alibabatech.com/schema/dubbo/dubbo.xsd\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--当前项目在整个分布式架构里面的唯一名称，计算依赖关系的标签--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:application</span> <span class=\"attr\">name</span>=<span class=\"string\">\"provider\"</span> <span class=\"attr\">owner</span>=<span class=\"string\">\"sihai\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dubbo:parameter</span> <span class=\"attr\">key</span>=<span class=\"string\">\"qos.enable\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dubbo:parameter</span> <span class=\"attr\">key</span>=<span class=\"string\">\"qos.accept.foreign.ip\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dubbo:parameter</span> <span class=\"attr\">key</span>=<span class=\"string\">\"qos.port\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"55555\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dubbo:application</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:monitor</span> <span class=\"attr\">protocol</span>=<span class=\"string\">\"registry\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--dubbo这个服务所要暴露的服务地址所对应的注册中心--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--&lt;dubbo:registry address=\"N/A\"/&gt;--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:registry</span> <span class=\"attr\">address</span>=<span class=\"string\">\"N/A\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--当前服务发布所依赖的协议；webserovice、Thrift、Hessain、http--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:protocol</span> <span class=\"attr\">name</span>=<span class=\"string\">\"dubbo\"</span> <span class=\"attr\">port</span>=<span class=\"string\">\"20880\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--服务发布的配置，需要暴露的服务接口--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:service</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">interface</span>=<span class=\"string\">\"com.sihai.dubbo.provider.service.ProviderService\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">ref</span>=<span class=\"string\">\"providerService\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--Bean bean定义--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"providerService\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.sihai.dubbo.provider.service.ProviderServiceImpl\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n<p>① 上面的文件其实就是类似 spring 的配置文件，而且，dubbo 底层就是 spring。<br>\n② <strong>节点：dubbo:application</strong><br>\n就是整个项目在分布式架构中的唯一名称，可以在 <code>name</code> 属性中配置，另外还可以配置 <code>owner</code> 字段，表示属于谁。<br>\n下面的参数是可以不配置的，这里配置是因为出现了端口的冲突，所以配置。<br>\n③ <strong>节点：dubbo:monitor</strong><br>\n监控中心配置， 用于配置连接监控中心相关信息，可以不配置，不是必须的参数。<br>\n④ <strong>节点：dubbo:registry</strong><br>\n配置注册中心的信息，比如，这里我们可以配置 zookeeper 作为我们的注册中心。<code>address</code> 是注册中心的地址，这里我们配置的是 <code>N/A</code> 表示由 dubbo 自动分配地址。或者说是一种直连的方式，不通过注册中心。<br>\n⑤ <strong>节点：dubbo:protocol</strong><br>\n服务发布的时候 dubbo 依赖什么协议，可以配置 dubbo、webserovice、Thrift、Hessain、http等协议。<br>\n⑥ <strong>节点：dubbo:service</strong><br>\n这个节点就是我们的重点了，当我们服务发布的时候，我们就是通过这个配置将我们的服务发布出去的。<code>interface</code> 是接口的包路径，<code>ref</code> 是第 ⑦ 点配置的接口的 bean。<br>\n⑦ 最后，我们需要像配置 spring 的接口一样，配置接口的 bean。</p>\n<p>到这一步，关于服务端的配置就完成了，下面我们通过 <code>main 方法</code>将接口发布出去。</p>\n<h5 id=\"发布接口\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#发布接口\"></a> 发布接口<a href=\"spring&mybatis/Dubbo#发布接口\"></a></h5>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sihai.dubbo.provider;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.dubbo.config.ApplicationConfig;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.dubbo.config.ProtocolConfig;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.dubbo.config.RegistryConfig;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.dubbo.config.ServiceConfig;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.dubbo.container.Main;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sihai.dubbo.provider.service.ProviderService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sihai.dubbo.provider.service.ProviderServiceImpl;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * xml方式启动</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> </span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">( String[] args )</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//加载xml配置文件启动</span></span><br><span class=\"line\">        ClassPathXmlApplicationContext context = <span class=\"keyword\">new</span> ClassPathXmlApplicationContext(<span class=\"string\">\"META-INF/spring/provider.xml\"</span>);</span><br><span class=\"line\">        context.start();</span><br><span class=\"line\">        System.in.read(); <span class=\"comment\">// 按任意键退出</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<p>发布接口非常简单，因为 dubbo 底层就是依赖 spring 的，所以，我们只需要通过 <code>ClassPathXmlApplicationContext</code> 拿到我们刚刚配置好的 xml ，然后调用 <code>context.start()</code> 方法就启动了。</p>\n<p>看到下面的截图，就算是启动成功了，接口也就发布出去了。<br>\n<img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81ODI0MDE2LWJjZWQ1NTdkNWVjMjNjMjEucG5n\" alt=\"img\"></p>\n<p>你以为到这里就结束了了，并不是的，我们拿到 <strong>dubbo 暴露出去的 url</strong>分析分析。</p>\n<h5 id=\"dubbo-暴露的-url\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#dubbo-暴露的-url\"></a> <strong>dubbo 暴露的 url</strong><a href=\"spring&mybatis/Dubbo#dubbo-暴露的-url\"></a></h5>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dubbo://192.168.234.1:20880/com.sihai.dubbo.provider.service.ProviderService?anyhost=true&amp;application=provider&amp;bean.name=com.sihai.dubbo.provider.service.ProviderService&amp;bind.ip=192.168.234.1&amp;bind.port=20880&amp;dubbo=2.0.2&amp;generic=false&amp;interface=com.sihai.dubbo.provider.service.ProviderService&amp;methods=SayHello&amp;owner=sihai&amp;pid=8412&amp;qos.accept.foreign.ip=false&amp;qos.enable=true&amp;qos.port=55555&amp;side=provider&amp;timestamp=1562077289380</span><br></pre></td></tr></table></div></figure>\n<h5 id=\"分析\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#分析\"></a> <strong>分析</strong><a href=\"spring&mybatis/Dubbo#分析\"></a></h5>\n<p>① 首先，在形式上我们发现，其实这么牛逼的 dubbo 也是用<strong>类似于 http 的协议</strong>发布自己的服务的，只是这里我们用的是 <strong>dubbo 协议</strong>。<br>\n② <code>dubbo://192.168.234.1:20880/com.sihai.dubbo.provider.service.ProviderService</code><br>\n上面这段链接就是 <code>?</code> 之前的链接，构成：<strong>协议://ip:端口/接口</strong>。发现是不是也没有什么神秘的。<br>\n③ <code>anyhost=true&amp;application=provider&amp;bean.name=com.sihai.dubbo.provider.service.ProviderService&amp;bind.ip=192.168.234.1&amp;bind.port=20880&amp;dubbo=2.0.2&amp;generic=false&amp;interface=com.sihai.dubbo.provider.service.ProviderService&amp;methods=SayHello&amp;owner=sihai&amp;pid=8412&amp;qos.accept.foreign.ip=false&amp;qos.enable=true&amp;qos.port=55555&amp;side=provider&amp;timestamp=1562077289380</code><br>\n<code>?</code> 之后的字符串，分析后你发现，这些都是刚刚在 <code>provider.xml</code> 中配置的字段，然后通过 <code>&amp;</code> 拼接而成的，闻到了 <code>http</code> 的香味了吗？</p>\n<p>终于，dubbo 服务端入门了。下面我们看看拿到了 url 后，怎么消费呢？</p>\n<h4 id=\"消费端\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#消费端\"></a> 消费端<a href=\"spring&mybatis/Dubbo#消费端\"></a></h4>\n<p>上面提到，我们在服务端提供的只是点对点的方式提供服务，并没有使用注册中心，所以，下面的配置也是会有一些不一样的。</p>\n<h5 id=\"消费端环境配置\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#消费端环境配置\"></a> 消费端环境配置<a href=\"spring&mybatis/Dubbo#消费端环境配置\"></a></h5>\n<p>首先，我们在消费端的 resource 下建立配置文件 <code>consumer.xml</code>。<br>\n<img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81ODI0MDE2LTQ4ODcxZjFiYzkxNGJhODMucG5n\" alt=\"img\"></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:dubbo</span>=<span class=\"string\">\"http://code.alibabatech.com/schema/dubbo\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans.xsd        http://code.alibabatech.com/schema/dubbo        http://code.alibabatech.com/schema/dubbo/dubbo.xsd\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--当前项目在整个分布式架构里面的唯一名称，计算依赖关系的标签--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:application</span> <span class=\"attr\">name</span>=<span class=\"string\">\"consumer\"</span> <span class=\"attr\">owner</span>=<span class=\"string\">\"sihai\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--dubbo这个服务所要暴露的服务地址所对应的注册中心--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--点对点的方式--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:registry</span> <span class=\"attr\">address</span>=<span class=\"string\">\"N/A\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--&lt;dubbo:registry address=\"zookeeper://localhost:2181\" check=\"false\"/&gt;--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--生成一个远程服务的调用代理--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--点对点方式--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:reference</span> <span class=\"attr\">id</span>=<span class=\"string\">\"providerService\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                     <span class=\"attr\">interface</span>=<span class=\"string\">\"com.sihai.dubbo.provider.service.ProviderService\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                     <span class=\"attr\">url</span>=<span class=\"string\">\"dubbo://192.168.234.1:20880/com.sihai.dubbo.provider.service.ProviderService\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--&lt;dubbo:reference id=\"providerService\"</span></span><br><span class=\"line\"><span class=\"comment\">                     interface=\"com.sihai.dubbo.provider.service.ProviderService\"/&gt;--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n<p><strong>分析</strong></p>\n<p>① 发现这里的 <code>dubbo:application</code> 和 <code>dubbo:registry</code> 是一致的。<br>\n② <code>dubbo:reference</code> ：我们这里采用<strong>点对点</strong>的方式，所以，需要配置在服务端暴露的 url 。</p>\n<h5 id=\"maven-依赖\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#maven-依赖\"></a> maven 依赖<a href=\"spring&mybatis/Dubbo#maven-依赖\"></a></h5>\n<p>和服务端一样</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.ouyangsihai<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>dubbo-consumer<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.ouyangsihai<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>dubbo-provider<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.8.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/com.alibaba/dubbo --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>dubbo<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.6.6<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.zookeeper<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>zookeeper<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.4.10<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.101tec<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>zkclient<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>io.netty<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>netty-all<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.1.32.Final<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.curator<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>curator-framework<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.8.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.curator<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>curator-recipes<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.8.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n<h5 id=\"调用服务\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#调用服务\"></a> 调用服务<a href=\"spring&mybatis/Dubbo#调用服务\"></a></h5>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sihai.dubbo.consumer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.dubbo.config.ApplicationConfig;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.dubbo.config.ReferenceConfig;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.dubbo.config.RegistryConfig;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sihai.dubbo.provider.service.ProviderService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * xml的方式调用</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> </span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">( String[] args )</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        ClassPathXmlApplicationContext context=<span class=\"keyword\">new</span> ClassPathXmlApplicationContext(<span class=\"string\">\"consumer.xml\"</span>);</span><br><span class=\"line\">        context.start();</span><br><span class=\"line\">        ProviderService providerService = (ProviderService) context.getBean(<span class=\"string\">\"providerService\"</span>);</span><br><span class=\"line\">        String str = providerService.SayHello(<span class=\"string\">\"hello\"</span>);</span><br><span class=\"line\">        System.out.println(str);</span><br><span class=\"line\">        System.in.read();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<p>这里和服务端的发布如出一辙。</p>\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81ODI0MDE2LWE1ZjdhNjgxMjNmNjFlZWQucG5n\" alt=\"img\"><br>\n如此，我们就成功调用接口了。</p>\n<h3 id=\"加入-zookeeper-作为注册中心\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#加入-zookeeper-作为注册中心\"></a> 加入 zookeeper 作为注册中心<a href=\"spring&mybatis/Dubbo#加入-zookeeper-作为注册中心\"></a></h3>\n<p>在前面的案例中，我们没有使用任何的注册中心，而是用一种直连的方式进行的。但是，实际上很多时候，我们都是使用 dubbo + zookeeper 的方式，使用 zookeeper 作为注册中心，这里，我们就介绍一下 zookeeper 作为注册中心的使用方法。</p>\n<p>这里，我们在前面的入门实例中进行改造。</p>\n<h4 id=\"服务端-2\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#服务端-2\"></a> 服务端<a href=\"spring&mybatis/Dubbo#服务端-2\"></a></h4>\n<p>在服务端中，我们只需要修改 provider.xml 即可。</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:dubbo</span>=<span class=\"string\">\"http://code.alibabatech.com/schema/dubbo\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans.xsd        http://code.alibabatech.com/schema/dubbo        http://code.alibabatech.com/schema/dubbo/dubbo.xsd\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--当前项目在整个分布式架构里面的唯一名称，计算依赖关系的标签--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:application</span> <span class=\"attr\">name</span>=<span class=\"string\">\"provider\"</span> <span class=\"attr\">owner</span>=<span class=\"string\">\"sihai\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dubbo:parameter</span> <span class=\"attr\">key</span>=<span class=\"string\">\"qos.enable\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dubbo:parameter</span> <span class=\"attr\">key</span>=<span class=\"string\">\"qos.accept.foreign.ip\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dubbo:parameter</span> <span class=\"attr\">key</span>=<span class=\"string\">\"qos.port\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"55555\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dubbo:application</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:monitor</span> <span class=\"attr\">protocol</span>=<span class=\"string\">\"registry\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--dubbo这个服务所要暴露的服务地址所对应的注册中心--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--&lt;dubbo:registry address=\"N/A\"/&gt;--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:registry</span> <span class=\"attr\">address</span>=<span class=\"string\">\"zookeeper://localhost:2181\"</span> <span class=\"attr\">check</span>=<span class=\"string\">\"false\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--当前服务发布所依赖的协议；webserovice、Thrift、Hessain、http--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:protocol</span> <span class=\"attr\">name</span>=<span class=\"string\">\"dubbo\"</span> <span class=\"attr\">port</span>=<span class=\"string\">\"20880\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--服务发布的配置，需要暴露的服务接口--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:service</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">interface</span>=<span class=\"string\">\"com.sihai.dubbo.provider.service.ProviderService\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">ref</span>=<span class=\"string\">\"providerService\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--Bean bean定义--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"providerService\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.sihai.dubbo.provider.service.ProviderServiceImpl\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n<p>重点关注这句话</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dubbo:registry</span> <span class=\"attr\">address</span>=<span class=\"string\">\"zookeeper://localhost:2181\"</span> /&gt;</span></span><br></pre></td></tr></table></div></figure>\n<p>在 address 中，使用我们的 zookeeper 的地址。</p>\n<p>如果是 <strong>zookeeper 集群</strong>的话，使用下面的方式。</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dubbo:registry</span> <span class=\"attr\">protocol</span>=<span class=\"string\">\"zookeeper\"</span> <span class=\"attr\">address</span>=<span class=\"string\">\"192.168.11.129:2181,192.168.11.137:2181,192.168.11.138:2181\"</span>/&gt;</span></span><br></pre></td></tr></table></div></figure>\n<p>服务端的配置就好了，其他的跟 <strong>入门案例</strong> 一样。</p>\n<h4 id=\"消费端-2\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#消费端-2\"></a> 消费端<a href=\"spring&mybatis/Dubbo#消费端-2\"></a></h4>\n<p>跟服务端一样，在消费端，我们也只需要修改 <code>consumer.xml</code> 即可。</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:dubbo</span>=<span class=\"string\">\"http://code.alibabatech.com/schema/dubbo\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans.xsd        http://code.alibabatech.com/schema/dubbo        http://code.alibabatech.com/schema/dubbo/dubbo.xsd\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--当前项目在整个分布式架构里面的唯一名称，计算依赖关系的标签--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:application</span> <span class=\"attr\">name</span>=<span class=\"string\">\"consumer\"</span> <span class=\"attr\">owner</span>=<span class=\"string\">\"sihai\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--dubbo这个服务所要暴露的服务地址所对应的注册中心--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--点对点的方式--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--&lt;dubbo:registry address=\"N/A\" /&gt;--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:registry</span> <span class=\"attr\">address</span>=<span class=\"string\">\"zookeeper://localhost:2181\"</span> <span class=\"attr\">check</span>=<span class=\"string\">\"false\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--生成一个远程服务的调用代理--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--点对点方式--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--&lt;dubbo:reference id=\"providerService\"</span></span><br><span class=\"line\"><span class=\"comment\">                     interface=\"com.sihai.dubbo.provider.service.ProviderService\"</span></span><br><span class=\"line\"><span class=\"comment\">                     url=\"dubbo://192.168.234.1:20880/com.sihai.dubbo.provider.service.ProviderService\"/&gt;--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:reference</span> <span class=\"attr\">id</span>=<span class=\"string\">\"providerService\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                     <span class=\"attr\">interface</span>=<span class=\"string\">\"com.sihai.dubbo.provider.service.ProviderService\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n<p>① 注册中心配置跟服务端一样。</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dubbo:registry</span> <span class=\"attr\">address</span>=<span class=\"string\">\"zookeeper://localhost:2181\"</span>/&gt;</span></span><br></pre></td></tr></table></div></figure>\n<p>② dubbo:reference<br>\n由于我们这里使用 zookeeper 作为注册中心，所以，跟点对点的方式是不一样的，这里不再需要 dubbo 服务端提供的 url 了，只需要直接引用服务端提供的接口即可。</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dubbo:reference id=&quot;providerService&quot;</span><br><span class=\"line\">                     interface=&quot;com.sihai.dubbo.provider.service.ProviderService&quot;/&gt;</span><br></pre></td></tr></table></div></figure>\n<p>好了，消费端也配置好了，这样就可以使用<strong>修改的入门案例</strong>，重新启动运行了。</p>\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81ODI0MDE2LWQ3OTAxMjAwMTMxYTdkM2YucG5n\" alt=\"img\" class=\"article-img\"></p>\n<p>同样成功了。</p>\n<p>这时候的区别在于，<strong>将 dubbo 发布的 url 注册到了 zookeeper，消费端从 zookeeper 消费，zookeeper 相当于一个中介，给消费者提供服务。</strong></p>\n<h3 id=\"注解配置方式\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#注解配置方式\"></a> 注解配置方式<a href=\"spring&mybatis/Dubbo#注解配置方式\"></a></h3>\n<p>注解配置方式还是需要了解一下的，现在微服务都倾向于这种方式，这也是以后发展的趋势，0 配置应该是这几年的趋势。</p>\n<p>那么如何对 dubbo 使用注解的方式呢？我们先看服务端。</p>\n<h4 id=\"服务端-3\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#服务端-3\"></a> 服务端<a href=\"spring&mybatis/Dubbo#服务端-3\"></a></h4>\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81ODI0MDE2LWEwNTM0YWNkMWMwNGU1NTAucG5n\" alt=\"img\" class=\"article-img\"></p>\n<h5 id=\"第一步定义接口及实现类在上面的截图中的-annotation-包下\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#第一步定义接口及实现类在上面的截图中的-annotation-包下\"></a> <strong>第一步：定义接口及实现类</strong>，在上面的截图中的 annotation 包下<a href=\"spring&mybatis/Dubbo#第一步定义接口及实现类在上面的截图中的-annotation-包下\"></a></h5>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sihai.dubbo.provider.service.annotation;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 注解方式接口</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">ProviderServiceAnnotation</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">SayHelloAnnotation</span><span class=\"params\">(String word)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sihai.dubbo.provider.service.annotation;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.dubbo.config.annotation.Service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 注解方式实现类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Service</span>(timeout = <span class=\"number\">5000</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProviderServiceImplAnnotation</span> <span class=\"keyword\">implements</span> <span class=\"title\">ProviderServiceAnnotation</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">SayHelloAnnotation</span><span class=\"params\">(String word)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> word;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<p><strong>@Service</strong></p>\n<p><code>@Service</code> 用来配置 Dubbo 的服务提供方。</p>\n<h5 id=\"第二步组装服务提供方\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#第二步组装服务提供方\"></a> <strong>第二步：组装服务提供方。</strong><a href=\"spring&mybatis/Dubbo#第二步组装服务提供方\"></a></h5>\n<p>通过 Spring 中 <code>Java Config</code> 的技术（<code>@Configuration</code>）和 annotation 扫描（<code>@EnableDubbo</code>）来发现、组装、并向外提供 Dubbo 的服务。</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sihai.dubbo.provider.configuration;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.dubbo.config.ApplicationConfig;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.dubbo.config.ProtocolConfig;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.dubbo.config.ProviderConfig;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.dubbo.config.RegistryConfig;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.dubbo.config.spring.context.annotation.EnableDubbo;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 注解方式配置</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@EnableDubbo</span>(scanBasePackages = <span class=\"string\">\"com.sihai.dubbo.provider.service.annotation\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DubboConfiguration</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span> <span class=\"comment\">// #1 服务提供者信息配置</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ProviderConfig <span class=\"title\">providerConfig</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        ProviderConfig providerConfig = <span class=\"keyword\">new</span> ProviderConfig();</span><br><span class=\"line\">        providerConfig.setTimeout(<span class=\"number\">1000</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> providerConfig;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span> <span class=\"comment\">// #2 分布式应用信息配置</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ApplicationConfig <span class=\"title\">applicationConfig</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        ApplicationConfig applicationConfig = <span class=\"keyword\">new</span> ApplicationConfig();</span><br><span class=\"line\">        applicationConfig.setName(<span class=\"string\">\"dubbo-annotation-provider\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> applicationConfig;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span> <span class=\"comment\">// #3 注册中心信息配置</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> RegistryConfig <span class=\"title\">registryConfig</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        RegistryConfig registryConfig = <span class=\"keyword\">new</span> RegistryConfig();</span><br><span class=\"line\">        registryConfig.setProtocol(<span class=\"string\">\"zookeeper\"</span>);</span><br><span class=\"line\">        registryConfig.setAddress(<span class=\"string\">\"localhost\"</span>);</span><br><span class=\"line\">        registryConfig.setPort(<span class=\"number\">2181</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> registryConfig;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span> <span class=\"comment\">// #4 使用协议配置，这里使用 dubbo</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ProtocolConfig <span class=\"title\">protocolConfig</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        ProtocolConfig protocolConfig = <span class=\"keyword\">new</span> ProtocolConfig();</span><br><span class=\"line\">        protocolConfig.setName(<span class=\"string\">\"dubbo\"</span>);</span><br><span class=\"line\">        protocolConfig.setPort(<span class=\"number\">20880</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> protocolConfig;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<p><strong>分析</strong></p>\n<ul>\n<li>通过 @EnableDubbo 指定在<code>com.sihai.dubbo.provider.service.annotation</code> 下扫描所有标注有 <code>@Service</code> 的类</li>\n<li>通过 <code>@Configuration</code> 将 <code>DubboConfiguration</code> 中所有的 <code>@Bean</code> 通过 <code>Java Config</code> 的方式组装出来并注入给 Dubbo 服务，也就是标注有 <code>@Service</code> 的类。这其中就包括了：\n<ul>\n<li>ProviderConfig：服务提供方配置</li>\n<li>ApplicationConfig：应用配置</li>\n<li>RegistryConfig：注册中心配置</li>\n<li>ProtocolConfig：协议配置</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"第三步启动服务\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#第三步启动服务\"></a> <strong>第三步：启动服务</strong><a href=\"spring&mybatis/Dubbo#第三步启动服务\"></a></h5>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sihai.dubbo.provider;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScan;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sihai.dubbo.provider.configuration.DubboConfiguration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.AnnotationConfigApplicationContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> sun.applet.Main;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 注解启动方式</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AppAnnotation</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        AnnotationConfigApplicationContext context = <span class=\"keyword\">new</span> AnnotationConfigApplicationContext(DubboConfiguration.class); </span><br><span class=\"line\">        context.start();</span><br><span class=\"line\">        System.in.read(); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<p>发现输出下面信息就表示 success 了。<br>\n<img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81ODI0MDE2LTE0MmNlZTM0YTcxN2MwMmQucG5n\" alt=\"img\"></p>\n<h4 id=\"消费端-3\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#消费端-3\"></a> 消费端<a href=\"spring&mybatis/Dubbo#消费端-3\"></a></h4>\n<p>同样我们下看看消费端的工程，有一个感性认识。<br>\n<img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81ODI0MDE2LTQyM2ZjYmFjZWY1NThiZWEucG5n\" alt=\"图片.png\"></p>\n<h5 id=\"第一步引用服务\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#第一步引用服务\"></a> <strong>第一步：引用服务</strong><a href=\"spring&mybatis/Dubbo#第一步引用服务\"></a></h5>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sihai.dubbo.consumer.Annotation;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.dubbo.config.annotation.Reference;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sihai.dubbo.provider.service.annotation.ProviderServiceAnnotation;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 注解方式的service</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span>(<span class=\"string\">\"annotatedConsumer\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConsumerAnnotationService</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Reference</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> ProviderServiceAnnotation providerServiceAnnotation;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">doSayHello</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> providerServiceAnnotation.SayHelloAnnotation(name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<p>在 <code>ConsumerAnnotationService</code> 类中，通过 <code>@Reference</code> 引用服务端提供的类，然后通过方法调用这个类的方式，给消费端提供接口。<br>\n**注意：**如果这里找不到 <code>ProviderServiceAnnotation</code> 类，请在服务端先把服务端工程用 <code>Maven intall</code> 一下，然后将服务端的依赖放到消费端的 <code>pom</code> 中。如下：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.ouyangsihai<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>dubbo-provider<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n<h5 id=\"第二步组装服务消费者\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#第二步组装服务消费者\"></a> <strong>第二步：组装服务消费者</strong><a href=\"spring&mybatis/Dubbo#第二步组装服务消费者\"></a></h5>\n<p>这一步和服务端是类似的，这里就不在重复了。</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sihai.dubbo.consumer.configuration;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.dubbo.config.ApplicationConfig;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.dubbo.config.ConsumerConfig;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.dubbo.config.RegistryConfig;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.dubbo.config.spring.context.annotation.EnableDubbo;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.ComponentScan;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 注解配置类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@EnableDubbo</span>(scanBasePackages = <span class=\"string\">\"com.sihai.dubbo.consumer.Annotation\"</span>)</span><br><span class=\"line\"><span class=\"meta\">@ComponentScan</span>(value = &#123;<span class=\"string\">\"com.sihai.dubbo.consumer.Annotation\"</span>&#125;)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConsumerConfiguration</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Bean</span> <span class=\"comment\">// 应用配置</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ApplicationConfig <span class=\"title\">applicationConfig</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        ApplicationConfig applicationConfig = <span class=\"keyword\">new</span> ApplicationConfig();</span><br><span class=\"line\">        applicationConfig.setName(<span class=\"string\">\"dubbo-annotation-consumer\"</span>);</span><br><span class=\"line\">        Map&lt;String, String&gt; stringStringMap = <span class=\"keyword\">new</span> HashMap&lt;String, String&gt;();</span><br><span class=\"line\">        stringStringMap.put(<span class=\"string\">\"qos.enable\"</span>,<span class=\"string\">\"true\"</span>);</span><br><span class=\"line\">        stringStringMap.put(<span class=\"string\">\"qos.accept.foreign.ip\"</span>,<span class=\"string\">\"false\"</span>);</span><br><span class=\"line\">        stringStringMap.put(<span class=\"string\">\"qos.port\"</span>,<span class=\"string\">\"33333\"</span>);</span><br><span class=\"line\">        applicationConfig.setParameters(stringStringMap);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> applicationConfig;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span> <span class=\"comment\">// 服务消费者配置</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ConsumerConfig <span class=\"title\">consumerConfig</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        ConsumerConfig consumerConfig = <span class=\"keyword\">new</span> ConsumerConfig();</span><br><span class=\"line\">        consumerConfig.setTimeout(<span class=\"number\">3000</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> consumerConfig;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span> <span class=\"comment\">// 配置注册中心</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> RegistryConfig <span class=\"title\">registryConfig</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        RegistryConfig registryConfig = <span class=\"keyword\">new</span> RegistryConfig();</span><br><span class=\"line\">        registryConfig.setProtocol(<span class=\"string\">\"zookeeper\"</span>);</span><br><span class=\"line\">        registryConfig.setAddress(<span class=\"string\">\"localhost\"</span>);</span><br><span class=\"line\">        registryConfig.setPort(<span class=\"number\">2181</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> registryConfig;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<h5 id=\"第三步发起远程调用\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#第三步发起远程调用\"></a> <strong>第三步：发起远程调用</strong><a href=\"spring&mybatis/Dubbo#第三步发起远程调用\"></a></h5>\n<p>在 <code>main</code> 方法中通过启动一个 <code>Spring Context</code>，从其中查找到组装好的 Dubbo 的服务消费者，并发起一次远程调用。</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.sihai.dubbo.consumer;</span><br><span class=\"line\"></span><br><span class=\"line\">import com.sihai.dubbo.consumer.Annotation.ConsumerAnnotationService;</span><br><span class=\"line\">import com.sihai.dubbo.consumer.configuration.ConsumerConfiguration;</span><br><span class=\"line\">import com.sihai.dubbo.provider.service.ProviderService;</span><br><span class=\"line\">import org.springframework.context.annotation.AnnotationConfigApplicationContext;</span><br><span class=\"line\">import org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 注解方式启动</span><br><span class=\"line\"> *</span><br><span class=\"line\"> */</span><br><span class=\"line\">public class AppAnnotation</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    public static void main( String[] args ) throws IOException &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(ConsumerConfiguration.class); </span><br><span class=\"line\">        context.start(); // 启动</span><br><span class=\"line\">        ConsumerAnnotationService consumerAnnotationService = context.getBean(ConsumerAnnotationService.class); </span><br><span class=\"line\">        String hello = consumerAnnotationService.doSayHello(&quot;annotation&quot;); // 调用方法</span><br><span class=\"line\">        System.out.println(&quot;result: &quot; + hello); // 输出结果</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<h5 id=\"结果\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#结果\"></a> <strong>结果</strong><a href=\"spring&mybatis/Dubbo#结果\"></a></h5>\n<p><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81ODI0MDE2LWI4NWRmZjhhMmVmZTUxNzkucG5n\" alt=\"img\" class=\"article-img\"></p>\n<h2 id=\"常用场景\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#常用场景\"></a> 常用场景<a href=\"spring&mybatis/Dubbo#常用场景\"></a></h2>\n<p>在下面的讲解中，都会是以 <code>xml</code> 配置的方式来讲解的，这也是 dubbo 官方比较推荐的方式。以下的操作都是在服务端的 <code>xml</code> 配置文件和消费端的配置文件来讲解的。</p>\n<h3 id=\"启动时检查\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#启动时检查\"></a> 启动时检查<a href=\"spring&mybatis/Dubbo#启动时检查\"></a></h3>\n<p>Dubbo 缺省会在启动时检查依赖的服务是否可用，不可用时会抛出异常，阻止 Spring 初始化完成，以便上线时，能及早发现问题，默认 `check=“true”。</p>\n<p>但是，有的时候，我们并不是都需要启动时就检查的，比如测试的时候，我们是需要更快速的启动，所以，这种场景的时候，我们是需要关闭这个功能的。</p>\n<p>下面，我们看看如何使用这个功能。</p>\n<p>在服务端注册的时候（客户端注册时同样适用）；</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dubbo:registry protocol=&quot;zookeeper&quot; address=&quot;localhost:2181,localhost:2182,localhost:2183&quot; check=&quot;false&quot;/&gt;</span><br></pre></td></tr></table></div></figure>\n<p>在客户端引用服务端服务的时候；</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dubbo:reference</span> <span class=\"attr\">check</span>=<span class=\"string\">\"false\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"providerService\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                     <span class=\"attr\">interface</span>=<span class=\"string\">\"com.sihai.dubbo.provider.service.ProviderService\"</span>/&gt;</span></span><br></pre></td></tr></table></div></figure>\n<p>就是这么简单，就是这么强！</p>\n<h3 id=\"集群容错\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#集群容错\"></a> 集群容错<a href=\"spring&mybatis/Dubbo#集群容错\"></a></h3>\n<p>dubbo 也是支持集群容错的，同时也有很多可选的方案，其中，默认的方案是 <code>failover</code>，也就是重试机制。</p>\n<p>首先，我们先把所有的容错机制都整理一遍，然后再看看使用。</p>\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th>集群模式</th>\n<th>说明</th>\n<th>使用方法</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Failover Cluster</td>\n<td>失败自动切换，当出现失败，重试其它服务器。通常用于读操作，但重试会带来更长延迟。可通过 retries=“2” 来设置重试次数(不含第一次)。</td>\n<td>cluster=“xxx” xxx：集群模式名称 ，例如cluster=“failover”</td>\n</tr>\n<tr>\n<td>Failfast Cluster</td>\n<td>快速失败，只发起一次调用，失败立即报错。通常用于非幂等性的写操作，比如新增记录。</td>\n<td></td>\n</tr>\n<tr>\n<td>Failsafe Cluster</td>\n<td>失败安全，出现异常时，直接忽略。</td>\n<td></td>\n</tr>\n<tr>\n<td>Failback Cluster</td>\n<td>失败自动恢复，后台记录失败请求，定时重发。通常用于消息通知操作。</td>\n<td></td>\n</tr>\n<tr>\n<td>Forking Cluster</td>\n<td>并行调用多个服务器，只要一个成功即返回。通常用于实时性要求较高的读操作，但需要浪费更多服务资源。可通过 forks=“2” 来设置最大并行数。</td>\n<td></td>\n</tr>\n<tr>\n<td>Broadcast Cluster</td>\n<td>广播调用所有提供者，逐个调用，任意一台报错则报错。通常用于通知所有提供者更新缓存或日志等本地资源信息。</td>\n<td></td>\n</tr>\n</tbody>\n</table></div></div>\n<h5 id=\"使用实例\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#使用实例\"></a> <strong>使用实例</strong><a href=\"spring&mybatis/Dubbo#使用实例\"></a></h5>\n<p>在发布服务或者引用服务的时候设置</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--服务发布的配置，需要暴露的服务接口--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:service</span> <span class=\"attr\">cluster</span>=<span class=\"string\">\"failover\"</span> <span class=\"attr\">retries</span>=<span class=\"string\">\"2\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">interface</span>=<span class=\"string\">\"com.sihai.dubbo.provider.service.ProviderService\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">ref</span>=<span class=\"string\">\"providerService\"</span>/&gt;</span></span><br></pre></td></tr></table></div></figure>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dubbo:reference</span> <span class=\"attr\">cluster</span>=<span class=\"string\">\"failover\"</span> <span class=\"attr\">retries</span>=<span class=\"string\">\"2\"</span> <span class=\"attr\">check</span>=<span class=\"string\">\"false\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"providerService\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                     <span class=\"attr\">interface</span>=<span class=\"string\">\"com.sihai.dubbo.provider.service.ProviderService\"</span>/&gt;</span></span><br></pre></td></tr></table></div></figure>\n<h3 id=\"负载均衡\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#负载均衡\"></a> 负载均衡<a href=\"spring&mybatis/Dubbo#负载均衡\"></a></h3>\n<p>负载均衡想必是一个再熟悉不过的概念了，所以，dubbo 支持也是再正常不过了，这里也总结一下 dubbo 支持的负载均衡的一些方案及使用方法。</p>\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th>负载均衡模式</th>\n<th>说明</th>\n<th>使用方法</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Random LoadBalance</td>\n<td>随机 按权重设置随机概率</td>\n<td>&lt;dubbo:service loadbalance=“xxx”/&gt; xxx：负载均衡方法</td>\n</tr>\n<tr>\n<td>RoundRobin LoadBalance</td>\n<td>轮询 按公约后的权重设置轮询比率。</td>\n<td></td>\n</tr>\n<tr>\n<td>LeastActive LoadBalance</td>\n<td>最少活跃调用数 相同活跃数的随机，活跃数指调用前后计数差。</td>\n<td></td>\n</tr>\n<tr>\n<td>ConsistentHash LoadBalance</td>\n<td>一致性 Hash 相同参数的请求总是发到同一提供者。 当某一台提供者挂时，原本发往该提供者的请求，基于虚拟节点，平摊到其它提供者，不会引起剧烈变动。</td>\n<td></td>\n</tr>\n</tbody>\n</table></div></div>\n<h3 id=\"直连提供者\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#直连提供者\"></a> 直连提供者<a href=\"spring&mybatis/Dubbo#直连提供者\"></a></h3>\n<p>在开发及测试环境下，经常需要绕过注册中心，只测试指定服务提供者，所以，这种情况下，我们只需要直接连接服务端的地即可，其实，这种方法在前面的讲解已经使用到了，第一种讲解的方式就是这种方式，因为这种方式简单。</p>\n<h5 id=\"使用\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#使用\"></a> <strong>使用</strong><a href=\"spring&mybatis/Dubbo#使用\"></a></h5>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dubbo:reference</span> <span class=\"attr\">id</span>=<span class=\"string\">\"providerService\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                     <span class=\"attr\">interface</span>=<span class=\"string\">\"com.sihai.dubbo.provider.service.ProviderService\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                     <span class=\"attr\">url</span>=<span class=\"string\">\"dubbo://192.168.234.1:20880/com.sihai.dubbo.provider.service.ProviderService\"</span>/&gt;</span></span><br></pre></td></tr></table></div></figure>\n<p>说明：可以看到，只要在消费端在 <code>dubbo:reference</code> 节点使用 <code>url</code> 给出服务端的方法即可。</p>\n<h3 id=\"只订阅\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#只订阅\"></a> 只订阅<a href=\"spring&mybatis/Dubbo#只订阅\"></a></h3>\n<p>只订阅就是只能够订阅服务端的服务，而不能够注册。</p>\n<p>引用官方的使用场景如下：</p>\n<blockquote>\n<p>为方便开发测试，经常会在线下共用一个所有服务可用的注册中心，这时，如果一个正在开发中的服务提供者注册，可能会影响消费者不能正常运行。<br>\n可以让服务提供者开发方，只订阅服务(开发的服务可能依赖其它服务)，而不注册正在开发的服务，通过直连测试正在开发的服务。</p>\n</blockquote>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dubbo:registry</span> <span class=\"attr\">register</span>=<span class=\"string\">\"false\"</span> <span class=\"attr\">protocol</span>=<span class=\"string\">\"zookeeper\"</span> <span class=\"attr\">address</span>=<span class=\"string\">\"localhost:2181,localhost:2182,localhost:2183\"</span> <span class=\"attr\">check</span>=<span class=\"string\">\"false\"</span>/&gt;</span></span><br></pre></td></tr></table></div></figure>\n<h4 id=\"1-使用只订阅方式\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#1-使用只订阅方式\"></a> <strong>① 使用只订阅方式</strong><a href=\"spring&mybatis/Dubbo#1-使用只订阅方式\"></a></h4>\n<p>当在服务提供端使用 <code>register=&quot;false&quot;</code> 的时候，我们使用下面的方式获取服务端的服务；</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dubbo:reference cluster=&quot;failover&quot; retries=&quot;2&quot; check=&quot;false&quot; id=&quot;providerService&quot;</span><br><span class=\"line\">                     interface=&quot;com.sihai.dubbo.provider.service.ProviderService&quot;/&gt;</span><br></pre></td></tr></table></div></figure>\n<p><strong>启动信息</strong><br>\n<img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81ODI0MDE2LWMwOTZiOTQ5MjNhZGMyMzEucG5n\" alt=\"图片.png\"><br>\n发现，这时候并不是向<code>注册中心 zookeeper</code> 注册，而只是做了<code>发布服务和启动netty</code>。</p>\n<h4 id=\"2-不使用只订阅方式\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#2-不使用只订阅方式\"></a> <strong>② 不使用只订阅方式</strong><a href=\"spring&mybatis/Dubbo#2-不使用只订阅方式\"></a></h4>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dubbo:registry protocol=&quot;zookeeper&quot; address=&quot;localhost:2181,localhost:2182,localhost:2183&quot; check=&quot;false&quot;/&gt;</span><br></pre></td></tr></table></div></figure>\n<p><strong>启动信息</strong><br>\n<img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81ODI0MDE2LTgxY2ViNjM4OWJhODdiOWEucG5n\" alt=\"img\"></p>\n<p>可以发现，这里就向注册中心 zookeeper 注册了。</p>\n<h3 id=\"只注册\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#只注册\"></a> 只注册<a href=\"spring&mybatis/Dubbo#只注册\"></a></h3>\n<p>只注册正好跟前面的只订阅相反，这个时候可以向注册中心注册，但是，消费端却不能够读到服务。</p>\n<h4 id=\"应用场景\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#应用场景\"></a> <strong>应用场景</strong><a href=\"spring&mybatis/Dubbo#应用场景\"></a></h4>\n<blockquote>\n<p>如果有两个镜像环境，两个注册中心，有一个服务只在其中一个注册中心有部署，另一个注册中心还没来得及部署，而两个注册中心的其它应用都需要依赖此服务。这个时候，可以让服务提供者方只注册服务到另一注册中心，而不从另一注册中心订阅服务。</p>\n</blockquote>\n<h4 id=\"使用说明\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#使用说明\"></a> <strong>使用说明</strong><a href=\"spring&mybatis/Dubbo#使用说明\"></a></h4>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dubbo:registry subscribe=&quot;false&quot; address=&quot;localhost:2181&quot;&gt;&lt;/dubbo:registry&gt;</span><br></pre></td></tr></table></div></figure>\n<p>在服务端的 <code>dubbo:registry</code> 节点下使用 <code>subscribe=&quot;false&quot;</code> 来声明这个服务是只注册的服务。</p>\n<p>这个时候消费端调用的时候是不能调用的。<br>\n<img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy81ODI0MDE2LThhYjI1MDIxZDY3N2Q5YjkucG5n\" alt=\"img\"></p>\n<h3 id=\"多协议机制\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#多协议机制\"></a> 多协议机制<a href=\"spring&mybatis/Dubbo#多协议机制\"></a></h3>\n<p>在前面我们使用的协议都是 dubbo 协议，但是 dubbo 除了支持这种协议外还支持其他的协议，比如，rmi、hessian等，另外，而且还可以用多种协议同时暴露一种服务。</p>\n<h4 id=\"使用方法\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#使用方法\"></a> <strong>使用方法</strong><a href=\"spring&mybatis/Dubbo#使用方法\"></a></h4>\n<p>一对一，一对多</p>\n<h5 id=\"1-一种接口使用一种协议\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#1-一种接口使用一种协议\"></a> <strong>① 一种接口使用一种协议</strong><a href=\"spring&mybatis/Dubbo#1-一种接口使用一种协议\"></a></h5>\n<p>先声明多种协议</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--当前服务发布所依赖的协议；webserovice、Thrift、Hessain、http--&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">dubbo:protocol</span> <span class=\"attr\">name</span>=<span class=\"string\">\"dubbo\"</span> <span class=\"attr\">port</span>=<span class=\"string\">\"20880\"</span>/&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">dubbo:protocol</span> <span class=\"attr\">name</span>=<span class=\"string\">\"rmi\"</span> <span class=\"attr\">port</span>=<span class=\"string\">\"1099\"</span> /&gt;</span></span><br></pre></td></tr></table></div></figure>\n<p>然后在发布接口的时候使用具体协议</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--服务发布的配置，需要暴露的服务接口--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:service</span> <span class=\"attr\">cluster</span>=<span class=\"string\">\"failover\"</span> <span class=\"attr\">retries</span>=<span class=\"string\">\"2\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">interface</span>=<span class=\"string\">\"com.sihai.dubbo.provider.service.ProviderService\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">ref</span>=<span class=\"string\">\"providerService\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:service</span> <span class=\"attr\">cluster</span>=<span class=\"string\">\"failover\"</span> <span class=\"attr\">retries</span>=<span class=\"string\">\"2\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                   <span class=\"attr\">interface</span>=<span class=\"string\">\"com.sihai.dubbo.provider.service.ProviderService\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                   <span class=\"attr\">ref</span>=<span class=\"string\">\"providerService\"</span> <span class=\"attr\">protocol</span>=<span class=\"string\">\"rmi\"</span>/&gt;</span></span><br></pre></td></tr></table></div></figure>\n<p>在输出日志中，就可以找到rmi发布的接口。</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rmi://192.168.234.1:1099/com.sihai.dubbo.provider.service.ProviderService?anyhost=true&amp;application=provider&amp;bean.name=com.sihai.dubbo.provider.service.ProviderService&amp;cluster=failover&amp;dubbo=2.0.2&amp;generic=false&amp;interface=com.sihai.dubbo.provider.service.ProviderService&amp;methods=SayHello&amp;owner=sihai&amp;pid=796&amp;retries=2&amp;side=provider&amp;timestamp=1564281053185, dubbo version: 2.6.6, current host: 192.168.234.1</span><br></pre></td></tr></table></div></figure>\n<h5 id=\"2-一种接口使用多种协议\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#2-一种接口使用多种协议\"></a> <strong>② 一种接口使用多种协议</strong><a href=\"spring&mybatis/Dubbo#2-一种接口使用多种协议\"></a></h5>\n<p>声明协议和上面的方式一样，在发布接口的时候有一点不一样。</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dubbo:service cluster=&quot;failover&quot; retries=&quot;2&quot;</span><br><span class=\"line\">                   interface=&quot;com.sihai.dubbo.provider.service.ProviderService&quot;</span><br><span class=\"line\">                   ref=&quot;providerService&quot; protocol=&quot;rmi,dubbo&quot;/&gt;</span><br></pre></td></tr></table></div></figure>\n<p>**说明：**protocol属性，可以用<code>,</code>隔开，使用多种协议。</p>\n<h3 id=\"多注册中心\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#多注册中心\"></a> 多注册中心<a href=\"spring&mybatis/Dubbo#多注册中心\"></a></h3>\n<p>Dubbo 支持同一服务向多注册中心同时注册，或者不同服务分别注册到不同的注册中心上去，甚至可以同时引用注册在不同注册中心上的同名服务。</p>\n<h4 id=\"服务端多注册中心发布服务\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#服务端多注册中心发布服务\"></a> 服务端多注册中心发布服务<a href=\"spring&mybatis/Dubbo#服务端多注册中心发布服务\"></a></h4>\n<p>一个服务可以在不同的注册中心注册，当一个注册中心出现问题时，可以用其他的注册中心。</p>\n<h5 id=\"注册\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#注册\"></a> <strong>注册</strong><a href=\"spring&mybatis/Dubbo#注册\"></a></h5>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--多注册中心--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:registry</span> <span class=\"attr\">protocol</span>=<span class=\"string\">\"zookeeper\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"reg1\"</span> <span class=\"attr\">timeout</span>=<span class=\"string\">\"10000\"</span> <span class=\"attr\">address</span>=<span class=\"string\">\"localhost:2181\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:registry</span> <span class=\"attr\">protocol</span>=<span class=\"string\">\"zookeeper\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"reg2\"</span> <span class=\"attr\">timeout</span>=<span class=\"string\">\"10000\"</span> <span class=\"attr\">address</span>=<span class=\"string\">\"localhost:2182\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:registry</span> <span class=\"attr\">protocol</span>=<span class=\"string\">\"zookeeper\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"reg3\"</span> <span class=\"attr\">timeout</span>=<span class=\"string\">\"10000\"</span> <span class=\"attr\">address</span>=<span class=\"string\">\"localhost:2183\"</span>/&gt;</span></span><br></pre></td></tr></table></div></figure>\n<h5 id=\"发布服务\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#发布服务\"></a> <strong>发布服务</strong><a href=\"spring&mybatis/Dubbo#发布服务\"></a></h5>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--服务发布的配置，需要暴露的服务接口--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:service</span> <span class=\"attr\">cluster</span>=<span class=\"string\">\"failover\"</span> <span class=\"attr\">retries</span>=<span class=\"string\">\"2\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">interface</span>=<span class=\"string\">\"com.sihai.dubbo.provider.service.ProviderService\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">ref</span>=<span class=\"string\">\"providerService\"</span> <span class=\"attr\">registry</span>=<span class=\"string\">\"reg1\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:service</span> <span class=\"attr\">cluster</span>=<span class=\"string\">\"failover\"</span> <span class=\"attr\">retries</span>=<span class=\"string\">\"2\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                   <span class=\"attr\">interface</span>=<span class=\"string\">\"com.sihai.dubbo.provider.service.ProviderService\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                   <span class=\"attr\">ref</span>=<span class=\"string\">\"providerService\"</span> <span class=\"attr\">protocol</span>=<span class=\"string\">\"rmi\"</span> <span class=\"attr\">registry</span>=<span class=\"string\">\"reg2\"</span>/&gt;</span></span><br></pre></td></tr></table></div></figure>\n<p>**说明：**使用<code>registry=&quot;reg2&quot;</code>指定该接口使用的注册中心，同时也可以使用多个，用<code>，</code>隔开，例如，<code>registry=&quot;reg1,,reg2&quot;</code>。</p>\n<h4 id=\"消费端多注册中心引用服务\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#消费端多注册中心引用服务\"></a> 消费端多注册中心引用服务<a href=\"spring&mybatis/Dubbo#消费端多注册中心引用服务\"></a></h4>\n<p>首先，先向不同注册中心注册;</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--多注册中心--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:registry</span> <span class=\"attr\">protocol</span>=<span class=\"string\">\"zookeeper\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"reg1\"</span> <span class=\"attr\">timeout</span>=<span class=\"string\">\"10000\"</span> <span class=\"attr\">address</span>=<span class=\"string\">\"localhost:2181\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:registry</span> <span class=\"attr\">protocol</span>=<span class=\"string\">\"zookeeper\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"reg2\"</span> <span class=\"attr\">timeout</span>=<span class=\"string\">\"10000\"</span> <span class=\"attr\">address</span>=<span class=\"string\">\"localhost:2182\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:registry</span> <span class=\"attr\">protocol</span>=<span class=\"string\">\"zookeeper\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"reg3\"</span> <span class=\"attr\">timeout</span>=<span class=\"string\">\"10000\"</span> <span class=\"attr\">address</span>=<span class=\"string\">\"localhost:2183\"</span>/&gt;</span></span><br></pre></td></tr></table></div></figure>\n<p>其次，不同的消费端服务引用使用不同的注册中心；</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!--不同的服务使用不同的注册中心--&gt;</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:reference</span> <span class=\"attr\">cluster</span>=<span class=\"string\">\"failover\"</span> <span class=\"attr\">retries</span>=<span class=\"string\">\"2\"</span> <span class=\"attr\">check</span>=<span class=\"string\">\"false\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"providerService\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                     <span class=\"attr\">interface</span>=<span class=\"string\">\"com.sihai.dubbo.provider.service.ProviderService\"</span> <span class=\"attr\">registry</span>=<span class=\"string\">\"reg1\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:reference</span> <span class=\"attr\">cluster</span>=<span class=\"string\">\"failover\"</span> <span class=\"attr\">retries</span>=<span class=\"string\">\"2\"</span> <span class=\"attr\">check</span>=<span class=\"string\">\"false\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"providerService2\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                     <span class=\"attr\">interface</span>=<span class=\"string\">\"com.sihai.dubbo.provider.service.ProviderService\"</span> <span class=\"attr\">registry</span>=<span class=\"string\">\"reg2\"</span>/&gt;</span></span><br></pre></td></tr></table></div></figure>\n<p>**说明：**上面分别使用注册中心1和注册中心2。</p>\n<h3 id=\"多版本\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#多版本\"></a> 多版本<a href=\"spring&mybatis/Dubbo#多版本\"></a></h3>\n<p>不同的服务是有版本不同的，版本可以更新并且升级，同时，不同的版本之间是不可以调用的。</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--服务发布的配置，需要暴露的服务接口--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:service</span> <span class=\"attr\">cluster</span>=<span class=\"string\">\"failover\"</span> <span class=\"attr\">retries</span>=<span class=\"string\">\"2\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">interface</span>=<span class=\"string\">\"com.sihai.dubbo.provider.service.ProviderService\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">ref</span>=<span class=\"string\">\"providerService\"</span> <span class=\"attr\">registry</span>=<span class=\"string\">\"reg1\"</span> <span class=\"attr\">version</span>=<span class=\"string\">\"1.0.0\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dubbo:service</span> <span class=\"attr\">cluster</span>=<span class=\"string\">\"failover\"</span> <span class=\"attr\">retries</span>=<span class=\"string\">\"2\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                   <span class=\"attr\">interface</span>=<span class=\"string\">\"com.sihai.dubbo.provider.service.ProviderService\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                   <span class=\"attr\">ref</span>=<span class=\"string\">\"providerService\"</span> <span class=\"attr\">protocol</span>=<span class=\"string\">\"rmi\"</span> <span class=\"attr\">registry</span>=<span class=\"string\">\"reg2\"</span> <span class=\"attr\">version</span>=<span class=\"string\">\"1.0.0\"</span>/&gt;</span></span><br></pre></td></tr></table></div></figure>\n<p>加入了版本控制。</p>\n<h3 id=\"日志管理\"><a class=\"markdownIt-Anchor\" href=\"spring&mybatis/Dubbo#日志管理\"></a> 日志管理<a href=\"spring&mybatis/Dubbo#日志管理\"></a></h3>\n<p>dubbo 也可以将日志信息记录或者保存到文件中的。</p>\n<p>① 使用accesslog输出到log4j</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dubbo:protocol accesslog=&quot;true&quot; name=&quot;dubbo&quot; port=&quot;20880&quot;/&gt;</span><br><span class=\"line\">    &lt;dubbo:protocol accesslog=&quot;true&quot; name=&quot;rmi&quot; port=&quot;1099&quot; /&gt;</span><br></pre></td></tr></table></div></figure>\n<p>② 输出到文件</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dubbo:protocol accesslog=&quot;http://localhost/log.txt&quot; name=&quot;dubbo&quot; port=&quot;20880&quot;/&gt;</span><br><span class=\"line\">    &lt;dubbo:protocol accesslog=&quot;http://localhost/log2.txt&quot; name=&quot;rmi&quot; port=&quot;1099&quot; /&gt;</span><br></pre></td></tr></table></div></figure>\n","prev":{"title":"多线程","link":"多线程"},"next":{"title":"spring&mybatis/Java Web","link":"spring&mybatis/Java Web"},"plink":"ilucia.github.io/spring&mybatis/Dubbo/","toc":[{"title":"<a class=\"markdownIt-Anchor\"></a> Dubbo","id":"dubbo","index":"1","children":[{"title":"<a class=\"markdownIt-Anchor\"></a> Dubbo项目构建","id":"dubbo项目构建","index":"1.1","children":[{"title":"<a class=\"markdownIt-Anchor\"></a> <strong>基础</strong>","id":"基础","index":"1.1.1"},{"title":"<a class=\"markdownIt-Anchor\"></a> 加入 zookeeper 作为注册中心","id":"加入-zookeeper-作为注册中心","index":"1.1.2"},{"title":"<a class=\"markdownIt-Anchor\"></a> 注解配置方式","id":"注解配置方式","index":"1.1.3"}]},{"title":"<a class=\"markdownIt-Anchor\"></a> 常用场景","id":"常用场景","index":"1.2","children":[{"title":"<a class=\"markdownIt-Anchor\"></a> 启动时检查","id":"启动时检查","index":"1.2.1"},{"title":"<a class=\"markdownIt-Anchor\"></a> 集群容错","id":"集群容错","index":"1.2.2"},{"title":"<a class=\"markdownIt-Anchor\"></a> 负载均衡","id":"负载均衡","index":"1.2.3"},{"title":"<a class=\"markdownIt-Anchor\"></a> 直连提供者","id":"直连提供者","index":"1.2.4"},{"title":"<a class=\"markdownIt-Anchor\"></a> 只订阅","id":"只订阅","index":"1.2.5"},{"title":"<a class=\"markdownIt-Anchor\"></a> 只注册","id":"只注册","index":"1.2.6"},{"title":"<a class=\"markdownIt-Anchor\"></a> 多协议机制","id":"多协议机制","index":"1.2.7"},{"title":"<a class=\"markdownIt-Anchor\"></a> 多注册中心","id":"多注册中心","index":"1.2.8"},{"title":"<a class=\"markdownIt-Anchor\"></a> 多版本","id":"多版本","index":"1.2.9"},{"title":"<a class=\"markdownIt-Anchor\"></a> 日志管理","id":"日志管理","index":"1.2.10"}]}]}],"copyright":{"author":"Ilucia Niu","license":"<a rel=\"license\" href=\"http://creativecommons.org/licenses/by/4.0/\">知识共享署名 4.0 国际许可协议</a>","published":"2022年4月27日","updated":"2022年4月27日"}}