{"title":"Spring生态学习笔记","date":"2020-07-13T00:00:00.000Z","link":"springLearn","tags":["Java","Spring"],"updated":"2022-04-27T15:24:01.763Z","content":"<p>[toc]</p>\n<h1 id=\"概览\"><a class=\"markdownIt-Anchor\" href=\"springLearn#概览\"></a> 概览<a href=\"springLearn#概览\"></a></h1>\n<h2 id=\"体系结构\"><a class=\"markdownIt-Anchor\" href=\"springLearn#体系结构\"></a> 体系结构<a href=\"springLearn#体系结构\"></a></h2>\n<p><img src=\"springLearn/arch1.png\" alt=\"img\" class=\"article-img\"></p>\n<h2 id=\"核心容器\"><a class=\"markdownIt-Anchor\" href=\"springLearn#核心容器\"></a> 核心容器<a href=\"springLearn#核心容器\"></a></h2>\n<p>核心容器由核心，Bean，上下文和表达式语言模块组成，它们的细节如下：</p>\n<ul>\n<li><strong>核心</strong>模块提供了框架的基本组成部分，包括 IoC 和依赖注入功能。</li>\n<li><strong>Bean</strong> 模块提供 BeanFactory，它是一个工厂模式的复杂实现。</li>\n<li><strong>上下文</strong>模块建立在由核心和 Bean 模块提供的坚实基础上，它是访问定义和配置的任何对象的媒介。ApplicationContext 接口是上下文模块的重点。</li>\n<li><strong>表达式语言</strong>模块在运行时提供了查询和操作一个对象图的强大的表达式语言。</li>\n</ul>\n<h2 id=\"数据访问集成\"><a class=\"markdownIt-Anchor\" href=\"springLearn#数据访问集成\"></a> 数据访问/集成<a href=\"springLearn#数据访问集成\"></a></h2>\n<p>数据访问/集成层包括 JDBC，ORM，OXM，JMS 和事务处理模块，它们的细节如下：</p>\n<ul>\n<li><strong>JDBC</strong> 模块提供了删除冗余的 JDBC 相关编码的 JDBC 抽象层。</li>\n<li><strong>ORM</strong> 模块为流行的对象关系映射 API，包括 JPA，JDO，Hibernate 和 iBatis，提供了集成层。</li>\n<li><strong>OXM</strong> 模块提供了抽象层，它支持对 JAXB，Castor，XMLBeans，JiBX 和 XStream 的对象/XML 映射实现。</li>\n<li>Java 消息服务 <strong>JMS</strong> 模块包含生产和消费的信息的功能。</li>\n<li><strong>事务</strong>模块为实现特殊接口的类及所有的 POJO 支持编程式和声明式事务管理。</li>\n</ul>\n<h2 id=\"web\"><a class=\"markdownIt-Anchor\" href=\"springLearn#web\"></a> Web<a href=\"springLearn#web\"></a></h2>\n<p>Web 层由 Web，Web-MVC，Web-Socket 和 Web-Portlet 组成，它们的细节如下：</p>\n<ul>\n<li><strong>Web</strong> 模块提供了基本的面向 web 的集成功能，例如多个文件上传的功能和使用 servlet 监听器和面向 web 应用程序的上下文来初始化 IoC 容器。</li>\n<li><strong>Web-MVC</strong> 模块包含 Spring 的模型-视图-控制器（MVC），实现了 web 应用程序。</li>\n<li><strong>Web-Socket</strong> 模块为 WebSocket-based 提供了支持，而且在 web 应用程序中提供了客户端和服务器端之间通信的两种方式。</li>\n<li><strong>Web-Portlet</strong> 模块提供了在 portlet 环境中实现 MVC，并且反映了 Web-Servlet 模块的功能。</li>\n</ul>\n<h2 id=\"其他\"><a class=\"markdownIt-Anchor\" href=\"springLearn#其他\"></a> 其他<a href=\"springLearn#其他\"></a></h2>\n<p>还有其他一些重要的模块，像 AOP，Aspects，Instrumentation，Web 和测试模块，它们的细节如下：</p>\n<ul>\n<li><strong>AOP</strong> 模块提供了面向方面的编程实现，允许你定义方法拦截器和切入点对代码进行干净地解耦，它实现了应该分离的功能。</li>\n<li><strong>Aspects</strong> 模块提供了与 <strong>AspectJ</strong> 的集成，这是一个功能强大且成熟的面向切面编程（AOP）框架。</li>\n<li><strong>Instrumentation</strong> 模块在一定的应用服务器中提供了类 instrumentation 的支持和类加载器的实现。</li>\n<li><strong>Messaging</strong> 模块为 STOMP 提供了支持作为在应用程序中 WebSocket 子协议的使用。它也支持一个注解编程模型，它是为了选路和处理来自 WebSocket 客户端的 STOMP 信息。</li>\n<li><strong>测试</strong>模块支持对具有 JUnit 或 TestNG 框架的 Spring 组件的测试。</li>\n</ul>\n<h1 id=\"ioc\"><a class=\"markdownIt-Anchor\" href=\"springLearn#ioc\"></a> IOC<a href=\"springLearn#ioc\"></a></h1>\n<h2 id=\"beanfactory容器\"><a class=\"markdownIt-Anchor\" href=\"springLearn#beanfactory容器\"></a> BeanFactory容器<a href=\"springLearn#beanfactory容器\"></a></h2>\n<p><code>HelloWorld.java</code></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hanyuu;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloWorld</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">private</span> String message;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setMessage</span><span class=\"params\">(String message)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.message  = message;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">getMessage</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"Your Message : \"</span> + message);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<p><code>Main.java</code></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hanyuu;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.InitializingBean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.xml.XmlBeanFactory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.core.io.ClassPathResource;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainApp</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">      XmlBeanFactory factory = <span class=\"keyword\">new</span> XmlBeanFactory</span><br><span class=\"line\">                             (<span class=\"keyword\">new</span> ClassPathResource(<span class=\"string\">\"Beans.xml\"</span>));</span><br><span class=\"line\">      HelloWorld obj = (HelloWorld) factory.getBean(<span class=\"string\">\"helloWorld\"</span>);</span><br><span class=\"line\">      obj.getMessage();</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<p><code>Beans.xml</code></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"helloWorld\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.hanyuu.HelloWorld\"</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"message\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"Hello World!\"</span>/&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n<h2 id=\"applicationcontent容器\"><a class=\"markdownIt-Anchor\" href=\"springLearn#applicationcontent容器\"></a> ApplicationContent容器<a href=\"springLearn#applicationcontent容器\"></a></h2>\n<ul>\n<li>ApplicationContent 接口实现\n<ul>\n<li><strong>FileSystemXmlApplicationContext</strong>：使用文件完整路径加载bean</li>\n<li><strong>ClassPathXmlApplicationContext</strong>：在ClassPath中搜索（只需要提供文件名）</li>\n<li><strong>WebXmlApplicationContext</strong>：该容器会在一个 web 应用程序的范围内加载在 XML 文件中已被定义的 bean。</li>\n</ul>\n</li>\n</ul>\n<p><code>Student.java</code></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hanyuu.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Data;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">private</span> Integer age;</span><br><span class=\"line\">   <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<p><code>DemoApplication.java</code></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hanyuu.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedWriter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileWriter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.sound.midi.SysexMessage;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.SpringApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.ApplicationContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.support.FileSystemXmlApplicationContext;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoApplication</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">final</span> String[] args)</span> </span>&#123;\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">final</span> ApplicationContext applicationContext = <span class=\"keyword\">new</span> FileSystemXmlApplicationContext(<span class=\"string\">\"beans.xml\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">final</span> Student student = (Student) applicationContext.getBean(<span class=\"string\">\"student\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"Name : \"</span> + student.getName());</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"Age : \"</span> + student.getAge());</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></div></figure>\n<p><code>beans.xml</code></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:context</span>=<span class=\"string\">\"http://www.springframework.org/schema/context\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    http://www.springframework.org/schema/context</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    http://www.springframework.org/schema/context/spring-context-3.0.xsd\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">context:annotation-config</span>/&gt;</span></span><br><span class=\"line\">   <span class=\"comment\">&lt;!-- bean definitions go here --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">&lt;!-- Definition for student bean --&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"student\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.hanyuu.test.Student\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"name\"</span>  <span class=\"attr\">value</span>=<span class=\"string\">\"Hanyuu\"</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"age\"</span>  <span class=\"attr\">value</span>=<span class=\"string\">\"3\"</span>/&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n<h1 id=\"bean-定义\"><a class=\"markdownIt-Anchor\" href=\"springLearn#bean-定义\"></a> Bean 定义<a href=\"springLearn#bean-定义\"></a></h1>\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th>属性</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>class</td>\n<td>强制性，并且指定用来创建 bean 的 bean 类。</td>\n</tr>\n<tr>\n<td>name</td>\n<td>指定唯一的 bean 标识符。在基于 XML 的配置元数据中，你可以使用 ID 和/或 name 属性来指定 bean 标识符。</td>\n</tr>\n<tr>\n<td>scope</td>\n<td>指定由特定的 bean 定义创建的对象的作用域</td>\n</tr>\n<tr>\n<td>constructor-arg</td>\n<td>注入依赖关系</td>\n</tr>\n<tr>\n<td>properties</td>\n<td>注入依赖关系</td>\n</tr>\n<tr>\n<td>autowiring mode</td>\n<td>注入依赖关系</td>\n</tr>\n<tr>\n<td>lazy-initialization mode</td>\n<td>延迟初始化</td>\n</tr>\n<tr>\n<td>initialization 方法</td>\n<td>在 bean 的所有必需的属性被容器设置之后，调用回调方法</td>\n</tr>\n<tr>\n<td>destruction 方法</td>\n<td>当包含该 bean 的容器被销毁时，使用回调方法</td>\n</tr>\n</tbody>\n</table></div></div>\n<h2 id=\"配置元数据来源\"><a class=\"markdownIt-Anchor\" href=\"springLearn#配置元数据来源\"></a> 配置元数据来源<a href=\"springLearn#配置元数据来源\"></a></h2>\n<ul>\n<li>基于 XML 的配置文件。</li>\n<li>基于注解的配置</li>\n<li>基于 Java 的配置</li>\n</ul>\n<h2 id=\"xml样例\"><a class=\"markdownIt-Anchor\" href=\"springLearn#xml样例\"></a> xml样例<a href=\"springLearn#xml样例\"></a></h2>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">&lt;!-- A simple bean definition --&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"...\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"...\"</span>&gt;</span></span><br><span class=\"line\">       <span class=\"comment\">&lt;!-- collaborators and configuration for this bean go here --&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">&lt;!-- A bean definition with lazy init set on --&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"...\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"...\"</span> <span class=\"attr\">lazy-init</span>=<span class=\"string\">\"true\"</span>&gt;</span></span><br><span class=\"line\">       <span class=\"comment\">&lt;!-- collaborators and configuration for this bean go here --&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">&lt;!-- A bean definition with initialization method --&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"...\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"...\"</span> <span class=\"attr\">init-method</span>=<span class=\"string\">\"...\"</span>&gt;</span></span><br><span class=\"line\">       <span class=\"comment\">&lt;!-- collaborators and configuration for this bean go here --&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">&lt;!-- A bean definition with destruction method --&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"...\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"...\"</span> <span class=\"attr\">destroy-method</span>=<span class=\"string\">\"...\"</span>&gt;</span></span><br><span class=\"line\">       <span class=\"comment\">&lt;!-- collaborators and configuration for this bean go here --&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">&lt;!-- more bean definitions go here --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></div></figure>\n<h2 id=\"区别\"><a class=\"markdownIt-Anchor\" href=\"springLearn#区别\"></a> 区别<a href=\"springLearn#区别\"></a></h2>\n<ol>\n<li>\n<p>功能</p>\n<ul>\n<li>BeanFactory提供了最简单的功能（实例化对象和获取对象）</li>\n<li>ApplicationContent提供了MessageSource（国际化）、ResourceLoader（资源访问）、载入多个上下文、ApplicationEventPublisher（消息发送、响应机制）和AOP（拦截器）</li>\n</ul>\n</li>\n<li>\n<p>加载机制</p>\n<ul>\n<li>BeanFactory懒加载</li>\n<li>ApplicationContext启动时全部加载</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"作用域scope\"><a class=\"markdownIt-Anchor\" href=\"springLearn#作用域scope\"></a> 作用域（Scope）<a href=\"springLearn#作用域scope\"></a></h2>\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th>作用域</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>singleton</td>\n<td>该作用域将 bean 的定义的限制在每一个 Spring IoC 容器中的一个单一实例(默认)。</td>\n</tr>\n<tr>\n<td>prototype</td>\n<td>该作用域将单一 bean 的定义限制在任意数量的对象实例。</td>\n</tr>\n<tr>\n<td>request</td>\n<td>该作用域将 bean 的定义限制为 HTTP 请求。只在 web-aware Spring ApplicationContext 的上下文中有效。</td>\n</tr>\n<tr>\n<td>session</td>\n<td>该作用域将 bean 的定义限制为 HTTP 会话。 只在web-aware Spring ApplicationContext的上下文中有效。</td>\n</tr>\n<tr>\n<td>global-session</td>\n<td>该作用域将 bean 的定义限制为全局 HTTP 会话。只在 web-aware Spring ApplicationContext 的上下文中有效。</td>\n</tr>\n</tbody>\n</table></div></div>\n<h1 id=\"reference\"><a class=\"markdownIt-Anchor\" href=\"springLearn#reference\"></a> Reference<a href=\"springLearn#reference\"></a></h1>\n<ul>\n<li>\n<p><a href=\"https://wiki.jikexueyuan.com/project/spring/\" target=\"_blank\" rel=\"noopener\">https://wiki.jikexueyuan.com/project/spring/</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.csdn.net/pythias_/article/details/82752881\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/pythias_/article/details/82752881</a></p>\n</li>\n</ul>\n","prev":{"title":"Python进程池、线程池和进程间通信实践参考","link":"Template"},"next":{"title":"Oracle数据库复习提纲","link":"oracle_review"},"plink":"ilucia.github.io/springLearn/","toc":[{"title":"<a class=\"markdownIt-Anchor\"></a> 概览","id":"概览","index":"1","children":[{"title":"<a class=\"markdownIt-Anchor\"></a> 体系结构","id":"体系结构","index":"1.1"},{"title":"<a class=\"markdownIt-Anchor\"></a> 核心容器","id":"核心容器","index":"1.2"},{"title":"<a class=\"markdownIt-Anchor\"></a> 数据访问/集成","id":"数据访问集成","index":"1.3"},{"title":"<a class=\"markdownIt-Anchor\"></a> Web","id":"web","index":"1.4"},{"title":"<a class=\"markdownIt-Anchor\"></a> 其他","id":"其他","index":"1.5"}]},{"title":"<a class=\"markdownIt-Anchor\"></a> IOC","id":"ioc","index":"2","children":[{"title":"<a class=\"markdownIt-Anchor\"></a> BeanFactory容器","id":"beanfactory容器","index":"2.1"},{"title":"<a class=\"markdownIt-Anchor\"></a> ApplicationContent容器","id":"applicationcontent容器","index":"2.2"}]},{"title":"<a class=\"markdownIt-Anchor\"></a> Bean 定义","id":"bean-定义","index":"3","children":[{"title":"<a class=\"markdownIt-Anchor\"></a> 配置元数据来源","id":"配置元数据来源","index":"3.1"},{"title":"<a class=\"markdownIt-Anchor\"></a> xml样例","id":"xml样例","index":"3.2"},{"title":"<a class=\"markdownIt-Anchor\"></a> 区别","id":"区别","index":"3.3"},{"title":"<a class=\"markdownIt-Anchor\"></a> 作用域（Scope）","id":"作用域scope","index":"3.4"}]},{"title":"<a class=\"markdownIt-Anchor\"></a> Reference","id":"reference","index":"4"}],"copyright":{"author":"Ilucia Niu","license":"<a rel=\"license\" href=\"http://creativecommons.org/licenses/by/4.0/\">知识共享署名 4.0 国际许可协议</a>","published":"2020年7月13日","updated":"2022年4月27日"}}