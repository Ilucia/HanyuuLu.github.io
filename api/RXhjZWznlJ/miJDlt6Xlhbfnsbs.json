{"title":"Excel生成工具类","date":"2022-04-27T15:24:01.559Z","link":"Excel生成工具类","updated":"2022-04-27T15:24:01.559Z","content":"<h3 id=\"一次性excel导出\"><a class=\"markdownIt-Anchor\" href=\"Excel生成工具类#一次性excel导出\"></a> 一次性excel导出<a href=\"Excel生成工具类#一次性excel导出\"></a></h3>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">exportProductExcel</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">    File file = <span class=\"keyword\">new</span> File(<span class=\"string\">\"product.txt\"</span>);</span><br><span class=\"line\">    StringBuilder resultString = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">    <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">        BufferedReader br = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> FileReader(file));<span class=\"comment\">//构造一个BufferedReader类来读取文件</span></span><br><span class=\"line\">        String s = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>((s = br.readLine())!=<span class=\"keyword\">null</span>)&#123;<span class=\"comment\">//使用readLine方法，一次读一行</span></span><br><span class=\"line\">            resultString.append(System.lineSeparator()+s);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        br.close();</span><br><span class=\"line\">    &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    JSONObject result = JSONObject.parseObject(resultString.toString());</span><br><span class=\"line\">    System.out.println(resultString);</span><br><span class=\"line\">    JSONArray productList = result.getJSONArray(<span class=\"string\">\"data\"</span>);</span><br><span class=\"line\">    HSSFWorkbook workbook = <span class=\"keyword\">new</span> HSSFWorkbook();</span><br><span class=\"line\">    <span class=\"comment\">//创建excel文档</span></span><br><span class=\"line\">    HSSFSheet sheet = workbook.createSheet(<span class=\"string\">\"商品表\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//定义列的宽度</span></span><br><span class=\"line\">    sheet.setColumnWidth(<span class=\"number\">0</span>, <span class=\"number\">20</span> * <span class=\"number\">256</span>);</span><br><span class=\"line\">    sheet.setColumnWidth(<span class=\"number\">1</span>, <span class=\"number\">15</span> * <span class=\"number\">256</span>);</span><br><span class=\"line\">    sheet.setColumnWidth(<span class=\"number\">2</span>, <span class=\"number\">20</span> * <span class=\"number\">256</span>);</span><br><span class=\"line\">    sheet.setColumnWidth(<span class=\"number\">3</span>, <span class=\"number\">10</span> * <span class=\"number\">256</span>);</span><br><span class=\"line\">    sheet.setColumnWidth(<span class=\"number\">4</span>, <span class=\"number\">10</span> * <span class=\"number\">256</span>);</span><br><span class=\"line\">    sheet.setColumnWidth(<span class=\"number\">5</span>, <span class=\"number\">10</span> * <span class=\"number\">256</span>);</span><br><span class=\"line\">    sheet.setColumnWidth(<span class=\"number\">6</span>, <span class=\"number\">20</span> * <span class=\"number\">256</span>);</span><br><span class=\"line\">    sheet.setColumnWidth(<span class=\"number\">7</span>, <span class=\"number\">30</span> * <span class=\"number\">256</span>);</span><br><span class=\"line\">    sheet.setColumnWidth(<span class=\"number\">8</span>, <span class=\"number\">30</span> * <span class=\"number\">256</span>);</span><br><span class=\"line\">    <span class=\"comment\">//设置表头</span></span><br><span class=\"line\">    HSSFRow headerRow = sheet.createRow(<span class=\"number\">0</span>);</span><br><span class=\"line\">    headerRow.createCell(<span class=\"number\">0</span>).setCellValue(<span class=\"string\">\"商品编码\"</span>);</span><br><span class=\"line\">    headerRow.createCell(<span class=\"number\">1</span>).setCellValue(<span class=\"string\">\"外部商品编码\"</span>);</span><br><span class=\"line\">    headerRow.createCell(<span class=\"number\">2</span>).setCellValue(<span class=\"string\">\"商品名称\"</span>);</span><br><span class=\"line\">    headerRow.createCell(<span class=\"number\">3</span>).setCellValue(<span class=\"string\">\"大类\"</span>);</span><br><span class=\"line\">    headerRow.createCell(<span class=\"number\">4</span>).setCellValue(<span class=\"string\">\"中类\"</span>);</span><br><span class=\"line\">    headerRow.createCell(<span class=\"number\">5</span>).setCellValue(<span class=\"string\">\"小类\"</span>);</span><br><span class=\"line\">    headerRow.createCell(<span class=\"number\">6</span>).setCellValue(<span class=\"string\">\"品牌\"</span>);</span><br><span class=\"line\">    headerRow.createCell(<span class=\"number\">7</span>).setCellValue(<span class=\"string\">\"售卖机型\"</span>);</span><br><span class=\"line\">    headerRow.createCell(<span class=\"number\">8</span>).setCellValue(<span class=\"string\">\"标签\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; productList.size();i++)&#123;</span><br><span class=\"line\">        JSONObject product = productList.getJSONObject(i);</span><br><span class=\"line\">        HSSFRow row = sheet.createRow(i+<span class=\"number\">1</span>);</span><br><span class=\"line\">        row.createCell(<span class=\"number\">0</span>).setCellValue(product.getString(<span class=\"string\">\"skuCode\"</span>));</span><br><span class=\"line\">        row.createCell(<span class=\"number\">1</span>).setCellValue(product.getString(<span class=\"string\">\"externalSkuId\"</span>));</span><br><span class=\"line\">        row.createCell(<span class=\"number\">2</span>).setCellValue(product.getString(<span class=\"string\">\"name\"</span>));</span><br><span class=\"line\">        row.createCell(<span class=\"number\">3</span>).setCellValue(product.getString(<span class=\"string\">\"bigLevelSpuName\"</span>));</span><br><span class=\"line\">        row.createCell(<span class=\"number\">4</span>).setCellValue(product.getString(<span class=\"string\">\"mediumLevelSpuName\"</span>));</span><br><span class=\"line\">        row.createCell(<span class=\"number\">5</span>).setCellValue(product.getString(<span class=\"string\">\"productSpuName\"</span>));</span><br><span class=\"line\">        row.createCell(<span class=\"number\">6</span>).setCellValue(product.getString(<span class=\"string\">\"product_brand_cn\"</span>));</span><br><span class=\"line\">        row.createCell(<span class=\"number\">7</span>).setCellValue(product.getString(<span class=\"string\">\"machine_type_names\"</span>));</span><br><span class=\"line\">        JSONArray productTagList = product.getJSONArray(<span class=\"string\">\"productTagVOList\"</span>);</span><br><span class=\"line\">        StringBuilder tags = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(productTagList != <span class=\"keyword\">null</span> &amp;&amp; !productTagList.isEmpty())&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j &lt; productTagList.size();j++) &#123;</span><br><span class=\"line\">                JSONObject tag = productTagList.getJSONObject(j);</span><br><span class=\"line\">                tags.append(<span class=\"string\">\" \"</span>).append(tag.getString(<span class=\"string\">\"tagName\"</span>));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(tags.length() &gt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            row.createCell(<span class=\"number\">8</span>).setCellValue(tags.substring(<span class=\"number\">1</span>));</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            row.createCell(<span class=\"number\">8</span>).setCellValue(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//将excel写入到ByteArrayOutStream中</span></span><br><span class=\"line\">    FileOutputStream out = <span class=\"keyword\">new</span> FileOutputStream(<span class=\"string\">\"商品列表.xls\"</span>);</span><br><span class=\"line\">    workbook.write(out);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<h3 id=\"excel导出\"><a class=\"markdownIt-Anchor\" href=\"Excel生成工具类#excel导出\"></a> excel导出<a href=\"Excel生成工具类#excel导出\"></a></h3>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">exportProductExcel</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">    PageResultVO result = productSkuController.getProductSkuByPage(<span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"number\">1</span>, <span class=\"number\">900</span>, <span class=\"keyword\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    List&lt;VemProductSkuResultMap&gt; productList = (List&lt;VemProductSkuResultMap&gt;) result.getData();</span><br><span class=\"line\">    HSSFWorkbook workbook = <span class=\"keyword\">new</span> HSSFWorkbook();</span><br><span class=\"line\">    <span class=\"comment\">//创建excel文档</span></span><br><span class=\"line\">    HSSFSheet sheet = workbook.createSheet(<span class=\"string\">\"商品表\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//定义列的宽度</span></span><br><span class=\"line\">    sheet.setColumnWidth(<span class=\"number\">0</span>, <span class=\"number\">5</span> * <span class=\"number\">256</span>);</span><br><span class=\"line\">    sheet.setColumnWidth(<span class=\"number\">1</span>, <span class=\"number\">5</span> * <span class=\"number\">256</span>);</span><br><span class=\"line\">    sheet.setColumnWidth(<span class=\"number\">2</span>, <span class=\"number\">10</span> * <span class=\"number\">256</span>);</span><br><span class=\"line\">    sheet.setColumnWidth(<span class=\"number\">3</span>, <span class=\"number\">10</span> * <span class=\"number\">256</span>);</span><br><span class=\"line\">    sheet.setColumnWidth(<span class=\"number\">4</span>, <span class=\"number\">10</span> * <span class=\"number\">256</span>);</span><br><span class=\"line\">    sheet.setColumnWidth(<span class=\"number\">5</span>, <span class=\"number\">10</span> * <span class=\"number\">256</span>);</span><br><span class=\"line\">    sheet.setColumnWidth(<span class=\"number\">6</span>, <span class=\"number\">10</span> * <span class=\"number\">256</span>);</span><br><span class=\"line\">    sheet.setColumnWidth(<span class=\"number\">7</span>, <span class=\"number\">10</span> * <span class=\"number\">256</span>);</span><br><span class=\"line\">    sheet.setColumnWidth(<span class=\"number\">8</span>, <span class=\"number\">10</span> * <span class=\"number\">256</span>);</span><br><span class=\"line\">    <span class=\"comment\">//设置表头</span></span><br><span class=\"line\">    HSSFRow headerRow = sheet.createRow(<span class=\"number\">0</span>);</span><br><span class=\"line\">    headerRow.createCell(<span class=\"number\">0</span>).setCellValue(<span class=\"string\">\"商品编码\"</span>);</span><br><span class=\"line\">    headerRow.createCell(<span class=\"number\">1</span>).setCellValue(<span class=\"string\">\"外部商品编码\"</span>);</span><br><span class=\"line\">    headerRow.createCell(<span class=\"number\">2</span>).setCellValue(<span class=\"string\">\"商品名称\"</span>);</span><br><span class=\"line\">    headerRow.createCell(<span class=\"number\">3</span>).setCellValue(<span class=\"string\">\"大类\"</span>);</span><br><span class=\"line\">    headerRow.createCell(<span class=\"number\">4</span>).setCellValue(<span class=\"string\">\"中类\"</span>);</span><br><span class=\"line\">    headerRow.createCell(<span class=\"number\">5</span>).setCellValue(<span class=\"string\">\"小类\"</span>);</span><br><span class=\"line\">    headerRow.createCell(<span class=\"number\">6</span>).setCellValue(<span class=\"string\">\"品牌\"</span>);</span><br><span class=\"line\">    headerRow.createCell(<span class=\"number\">7</span>).setCellValue(<span class=\"string\">\"售卖机型\"</span>);</span><br><span class=\"line\">    headerRow.createCell(<span class=\"number\">8</span>).setCellValue(<span class=\"string\">\"标签\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; productList.size();i++)&#123;</span><br><span class=\"line\">        VemProductSkuResultMap product = productList.get(i);</span><br><span class=\"line\">        HSSFRow row = sheet.createRow(i+<span class=\"number\">1</span>);</span><br><span class=\"line\">        row.createCell(<span class=\"number\">0</span>).setCellValue(product.getId());</span><br><span class=\"line\">        row.createCell(<span class=\"number\">1</span>).setCellValue(product.getExternalSkuId());</span><br><span class=\"line\">        row.createCell(<span class=\"number\">2</span>).setCellValue(product.getName());</span><br><span class=\"line\">        row.createCell(<span class=\"number\">3</span>).setCellValue(product.getBigLevelSpuName());</span><br><span class=\"line\">        row.createCell(<span class=\"number\">4</span>).setCellValue(product.getMediumLevelSpuName());</span><br><span class=\"line\">        row.createCell(<span class=\"number\">5</span>).setCellValue(product.getProductSpuName());</span><br><span class=\"line\">        String cn = DictConsts.UNMATCH_VALUE;</span><br><span class=\"line\">        SkuBrandFacade skuBrandFacade = SpringContextUtil.getBean(<span class=\"string\">\"skuBrandFacade\"</span>);</span><br><span class=\"line\">        VemSkuBrand skuBrand = skuBrandFacade.getSkuBrand(product.getBrandCode());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!Objects.isNull(skuBrand))&#123;</span><br><span class=\"line\">            cn = skuBrand.getName();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        row.createCell(<span class=\"number\">6</span>).setCellValue(cn);</span><br><span class=\"line\">        List&lt;VemProductSkuMachineType&gt; skuMachineTypes = product.getMachineTypeList();</span><br><span class=\"line\">        StringBuilder typeNames = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(CollectionUtils.isNotEmpty(skuMachineTypes))&#123;</span><br><span class=\"line\">            DictService dictService= SpringContextUtil.getBean(<span class=\"string\">\"dictServiceImpl\"</span>);</span><br><span class=\"line\">            List&lt;VemDict&gt; dictList=dictService.listVemDictByDictGroupId(DictConsts.MACHINE_TYPE);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(CollectionUtils.isNotEmpty(dictList))&#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(VemDict dict : dictList)&#123;</span><br><span class=\"line\">                    String value = String.valueOf(dict.getDictCode());</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(VemProductSkuMachineType type : skuMachineTypes)&#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(value.equals(type.getMachineType()))&#123;</span><br><span class=\"line\">                            typeNames.append(<span class=\"string\">\",\"</span>).append(dict.getDictName());</span><br><span class=\"line\">                            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(typeNames.length() &gt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            row.createCell(<span class=\"number\">7</span>).setCellValue(typeNames.substring(<span class=\"number\">1</span>));</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            row.createCell(<span class=\"number\">7</span>).setCellValue(DictConsts.UNMATCH_VALUE);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        List&lt;ProductTagVO&gt; productTagList = product.getProductTagVOList();</span><br><span class=\"line\">        StringBuilder tags = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(CollectionUtils.isNotEmpty(productTagList))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (ProductTagVO tag : productTagList) &#123;</span><br><span class=\"line\">                tags.append(<span class=\"string\">\" \"</span>).append(tag.getTagName());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(tags.length() &gt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            row.createCell(<span class=\"number\">8</span>).setCellValue(tags.substring(<span class=\"number\">1</span>));</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            row.createCell(<span class=\"number\">8</span>).setCellValue(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//将excel写入到ByteArrayOutStream中</span></span><br><span class=\"line\">    FileOutputStream out = <span class=\"keyword\">new</span> FileOutputStream(<span class=\"string\">\"商品列表.xls\"</span>);</span><br><span class=\"line\">    workbook.write(out);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"string\">\"商品编码\"</span>, <span class=\"string\">\"商品Id\"</span>, <span class=\"string\">\"商品名称\"</span>, <span class=\"string\">\"商品别名\"</span>, <span class=\"string\">\"外部商品编码\"</span>, <span class=\"string\">\"市场指导价(元)\"</span>, <span class=\"string\">\"类目\"</span>, <span class=\"string\">\"品牌\"</span>, <span class=\"string\">\"建议售价(元)\"</span>, <span class=\"string\">\"计量单位\"</span>, <span class=\"string\">\"规格\"</span>, <span class=\"string\">\"厚度(mm)\"</span>, <span class=\"string\">\"重量(g)\"</span>, <span class=\"string\">\"图片\"</span>, <span class=\"string\">\"保质期(天)\"</span>, <span class=\"string\">\"售卖机型\"</span>, <span class=\"string\">\"标签\"</span>, <span class=\"string\">\"是否原材料\"</span>, <span class=\"string\">\"是否组合商品\"</span>, <span class=\"string\">\"是否返信用\"</span>, <span class=\"string\">\"是否非专卖\"</span>, <span class=\"string\">\"批次来源\"</span>, <span class=\"string\">\"定时折扣\"</span>, <span class=\"string\">\"折扣模板\"</span>, <span class=\"string\">\"修改时间\"</span>, <span class=\"string\">\"修改人\"</span>&#125;</span><br></pre></td></tr></table></div></figure>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.nfsq.vem.admin.entity.dto;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Getter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Setter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.math.BigDecimal;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> niu</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2020/11/24 下午5:13</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Setter</span></span><br><span class=\"line\"><span class=\"meta\">@Getter</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProductExcelModel</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String skuCode;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String nameAlias;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String externalSkuId;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> BigDecimal marketPrice;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String productSpuLevelName;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String productBrand;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> BigDecimal guidePrice;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String measurementUnit;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String specification;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer thickness;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer weight;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String imageUrl;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer guaranteePeriod;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String machineTypeNames;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String tags;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String description;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String isOrigin;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String isGroupSkuCnName;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String isReturnCreditCnName;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String ifNonMonopolyCnName;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String ifBatchNoCnName;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date updateDate;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String updatePerson;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 导出商品品项列表</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> productName</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@ResponseBody</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(value = <span class=\"string\">\"/exportProductSkuExcel\"</span>, method = RequestMethod.GET)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">exportProductExcel</span><span class=\"params\">(@RequestParam(required = <span class=\"keyword\">false</span>)</span> String brandCode,</span></span><br><span class=\"line\"><span class=\"function\">                               @<span class=\"title\">RequestParam</span><span class=\"params\">(required = <span class=\"keyword\">false</span>)</span> String spuId,</span></span><br><span class=\"line\"><span class=\"function\">                               @<span class=\"title\">RequestParam</span><span class=\"params\">(required = <span class=\"keyword\">false</span>)</span> String productName,</span></span><br><span class=\"line\"><span class=\"function\">                               @<span class=\"title\">RequestParam</span><span class=\"params\">(required = <span class=\"keyword\">false</span>)</span> String nameAlias,</span></span><br><span class=\"line\"><span class=\"function\">                               @<span class=\"title\">RequestParam</span><span class=\"params\">(required = <span class=\"keyword\">false</span>)</span> Integer tagId,</span></span><br><span class=\"line\"><span class=\"function\">                               @<span class=\"title\">RequestParam</span><span class=\"params\">(required = <span class=\"keyword\">false</span>)</span> String machineType,</span></span><br><span class=\"line\"><span class=\"function\">                               @<span class=\"title\">RequestParam</span><span class=\"params\">(required = <span class=\"keyword\">false</span>)</span> Boolean isMaterialProduct,</span></span><br><span class=\"line\"><span class=\"function\">                               HttpServletResponse response) <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">    PageResultVO result = getProductSkuByPage(brandCode, spuId, productName, nameAlias, tagId, machineType, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, isMaterialProduct);</span><br><span class=\"line\">    List&lt;VemProductSkuResultMap&gt; productList = (List&lt;VemProductSkuResultMap&gt;) result.getData();</span><br><span class=\"line\"></span><br><span class=\"line\">    PoiExcelExport poiExcelExport = <span class=\"keyword\">new</span> PoiExcelExport(response, <span class=\"string\">\"商品品项\"</span>, <span class=\"string\">\"商品品项\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 列名</span></span><br><span class=\"line\">    String[] columnNames = &#123;<span class=\"string\">\"商品编码\"</span>, <span class=\"string\">\"商品Id\"</span>, <span class=\"string\">\"商品名称\"</span>, <span class=\"string\">\"商品别名\"</span>, <span class=\"string\">\"外部商品编码\"</span>, <span class=\"string\">\"市场指导价(元)\"</span>, <span class=\"string\">\"类目\"</span>, <span class=\"string\">\"品牌\"</span>, <span class=\"string\">\"建议售价(元)\"</span>, <span class=\"string\">\"计量单位\"</span>, <span class=\"string\">\"规格\"</span>, <span class=\"string\">\"厚度(mm)\"</span>, <span class=\"string\">\"重量(g)\"</span>, <span class=\"string\">\"图片\"</span>, <span class=\"string\">\"保质期(天)\"</span>, <span class=\"string\">\"售卖机型\"</span>, <span class=\"string\">\"标签\"</span>, <span class=\"string\">\"描述\"</span>, <span class=\"string\">\"是否原材料\"</span>, <span class=\"string\">\"是否组合商品\"</span>, <span class=\"string\">\"是否返信用\"</span>, <span class=\"string\">\"是否非专卖\"</span>, <span class=\"string\">\"批次来源\"</span>, <span class=\"string\">\"修改时间\"</span>, <span class=\"string\">\"修改人\"</span>&#125;;</span><br><span class=\"line\">    <span class=\"comment\">// map中的key</span></span><br><span class=\"line\">    String[] keys = &#123; <span class=\"string\">\"skuCode\"</span>, <span class=\"string\">\"id\"</span>, <span class=\"string\">\"name\"</span>, <span class=\"string\">\"nameAlias\"</span>, <span class=\"string\">\"externalSkuId\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"marketPrice\"</span>, <span class=\"string\">\"productSpuLevelName\"</span>, <span class=\"string\">\"productBrand\"</span>, <span class=\"string\">\"guidePrice\"</span>, <span class=\"string\">\"measurementUnit\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"specification\"</span>, <span class=\"string\">\"thickness\"</span>, <span class=\"string\">\"weight\"</span>, <span class=\"string\">\"imageUrl\"</span>, <span class=\"string\">\"guaranteePeriod\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"machineTypeNames\"</span>, <span class=\"string\">\"tags\"</span>, <span class=\"string\">\"description\"</span>, <span class=\"string\">\"isOrigin\"</span>, <span class=\"string\">\"isGroupSkuCnName\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"isReturnCreditCnName\"</span>, <span class=\"string\">\"ifNonMonopolyCnName\"</span>, <span class=\"string\">\"ifBatchNoCnName\"</span>, <span class=\"string\">\"updateDate\"</span>, <span class=\"string\">\"updatePerson\"</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] titleSize = &#123; <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    List&lt;ProductExcelModel&gt; models = constructProductExcelModel(productList);</span><br><span class=\"line\">    poiExcelExport.writeExcelBaseMethod(<span class=\"string\">\"商品品项\"</span>, keys, columnNames, titleSize, models);</span><br><span class=\"line\">    poiExcelExport.writeExcelMultiSheet();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> List&lt;ProductExcelModel&gt; <span class=\"title\">constructProductExcelModel</span><span class=\"params\">(List&lt;VemProductSkuResultMap&gt; productSkuResultMaps)</span> </span>&#123;</span><br><span class=\"line\">    List&lt;ProductExcelModel&gt; models = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (VemProductSkuResultMap product : productSkuResultMaps) &#123;</span><br><span class=\"line\">        ProductExcelModel model = <span class=\"keyword\">new</span> ProductExcelModel();</span><br><span class=\"line\">        model.setSkuCode(product.getSkuCode());</span><br><span class=\"line\">        model.setId(product.getId());</span><br><span class=\"line\">        model.setName(product.getName());</span><br><span class=\"line\">        model.setNameAlias(product.getNameAlias());</span><br><span class=\"line\">        model.setExternalSkuId(product.getExternalSkuId());</span><br><span class=\"line\">        model.setMarketPrice(product.getMarketPrice());</span><br><span class=\"line\">        model.setProductSpuLevelName(product.getProductSpuLevelName());</span><br><span class=\"line\">        String cn = DictConsts.UNMATCH_VALUE;</span><br><span class=\"line\">        SkuBrandFacade skuBrandFacade = SpringContextUtil.getBean(<span class=\"string\">\"skuBrandFacade\"</span>);</span><br><span class=\"line\">        VemSkuBrand skuBrand = skuBrandFacade.getSkuBrand(product.getBrandCode());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!Objects.isNull(skuBrand))&#123;</span><br><span class=\"line\">            cn = skuBrand.getName();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        model.setProductBrand(cn);</span><br><span class=\"line\">        model.setGuidePrice(product.getGuidePrice());</span><br><span class=\"line\">        model.setMeasurementUnit(product.getMeasurementUnit());</span><br><span class=\"line\">        model.setSpecification(product.getSpecification());</span><br><span class=\"line\">        model.setThickness(product.getThickness());</span><br><span class=\"line\">        model.setWeight(product.getWeight());</span><br><span class=\"line\">        model.setImageUrl(product.getImageUrl());</span><br><span class=\"line\">        model.setGuaranteePeriod(product.getGuaranteePeriod());</span><br><span class=\"line\">        List&lt;VemProductSkuMachineType&gt; skuMachineTypes = product.getMachineTypeList();</span><br><span class=\"line\">        StringBuilder typeNames = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(CollectionUtils.isNotEmpty(skuMachineTypes))&#123;</span><br><span class=\"line\">            DictService dictService= SpringContextUtil.getBean(<span class=\"string\">\"dictServiceImpl\"</span>);</span><br><span class=\"line\">            List&lt;VemDict&gt; dictList=dictService.listVemDictByDictGroupId(DictConsts.MACHINE_TYPE);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(CollectionUtils.isNotEmpty(dictList))&#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(VemDict dict : dictList)&#123;</span><br><span class=\"line\">                    String value = String.valueOf(dict.getDictCode());</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(VemProductSkuMachineType type : skuMachineTypes)&#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(value.equals(type.getMachineType()))&#123;</span><br><span class=\"line\">                            typeNames.append(<span class=\"string\">\",\"</span>).append(dict.getDictName());</span><br><span class=\"line\">                            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(typeNames.length() &gt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            model.setMachineTypeNames(typeNames.substring(<span class=\"number\">1</span>));</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            model.setMachineTypeNames(DictConsts.UNMATCH_VALUE);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        List&lt;ProductTagVO&gt; productTagList = product.getProductTagVOList();</span><br><span class=\"line\">        StringBuilder tags = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(CollectionUtils.isNotEmpty(productTagList))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (ProductTagVO tag : productTagList) &#123;</span><br><span class=\"line\">                tags.append(<span class=\"string\">\" \"</span>).append(tag.getTagName());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(tags.length() &gt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            model.setTags(tags.substring(<span class=\"number\">1</span>));</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            model.setTags(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        model.setDescription(product.getDescription());</span><br><span class=\"line\">        model.setIsOrigin((<span class=\"string\">\"2\"</span>.equals(product.getProductType())) ? <span class=\"string\">\"是\"</span> : <span class=\"string\">\"否\"</span>);</span><br><span class=\"line\">        model.setIsGroupSkuCnName(product.getIsGroupSkuCnName());</span><br><span class=\"line\">        model.setIsReturnCreditCnName(product.getIsReturnCreditCnName());</span><br><span class=\"line\">        model.setIfNonMonopolyCnName(product.getIfNonMonopolyCnName());</span><br><span class=\"line\">        model.setIfBatchNoCnName(product.getIfBatchNoCnName());</span><br><span class=\"line\">        model.setUpdateDate(product.getUpdateDate());</span><br><span class=\"line\">        model.setUpdatePerson(product.getUpdatePerson());</span><br><span class=\"line\">        models.add(model);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> models;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> List&lt;VemProductSkuResultMap&gt; <span class=\"title\">listVemProductSkuResultMapByPage</span><span class=\"params\">(List&lt;String&gt; spuIds, String brandCode,String productSkuName, String nameAlias, <span class=\"keyword\">boolean</span> isMaterialProduct, String machineType, Integer pageNum, Integer pageSize)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (pageNum != <span class=\"keyword\">null</span> &amp;&amp; pageSize != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">        PageHelper.startPage(pageNum,pageSize);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    List&lt;VemProductSkuResultMap&gt; vemProductSkuList = manualVemProductSkuMapper.selectVemProductSkuResultMapBySkuNameAndSpuIds(<span class=\"keyword\">null</span>, productSkuName, nameAlias, spuIds, brandCode,isMaterialProduct,machineType);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> vemProductSkuList;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> vem_machine <span class=\"keyword\">ADD</span> WAREHOUSE_ADDRESS <span class=\"built_in\">CHAR</span>(<span class=\"number\">1</span>) <span class=\"keyword\">AFTER</span> <span class=\"keyword\">STATUS</span>;</span><br></pre></td></tr></table></div></figure>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 导出商品品项列表</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> productName</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@ResponseBody</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(value = <span class=\"string\">\"/exportProductSkuExcel\"</span>, method = RequestMethod.GET)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">exportProductExcel</span><span class=\"params\">(@RequestParam(required = <span class=\"keyword\">false</span>)</span> String brandCode,</span></span><br><span class=\"line\"><span class=\"function\">                               @<span class=\"title\">RequestParam</span><span class=\"params\">(required = <span class=\"keyword\">false</span>)</span> String spuId,</span></span><br><span class=\"line\"><span class=\"function\">                               @<span class=\"title\">RequestParam</span><span class=\"params\">(required = <span class=\"keyword\">false</span>)</span> String productName,</span></span><br><span class=\"line\"><span class=\"function\">                               @<span class=\"title\">RequestParam</span><span class=\"params\">(required = <span class=\"keyword\">false</span>)</span> String nameAlias,</span></span><br><span class=\"line\"><span class=\"function\">                               @<span class=\"title\">RequestParam</span><span class=\"params\">(required = <span class=\"keyword\">false</span>)</span> Integer tagId,</span></span><br><span class=\"line\"><span class=\"function\">                               @<span class=\"title\">RequestParam</span><span class=\"params\">(required = <span class=\"keyword\">false</span>)</span> String machineType,</span></span><br><span class=\"line\"><span class=\"function\">                               @<span class=\"title\">RequestParam</span><span class=\"params\">(required = <span class=\"keyword\">false</span>)</span> Boolean isMaterialProduct,</span></span><br><span class=\"line\"><span class=\"function\">                               HttpServletResponse response) </span>&#123;</span><br><span class=\"line\">    PageResultVO result = getProductSkuByPage(brandCode, spuId, productName, nameAlias, tagId, machineType, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, isMaterialProduct);</span><br><span class=\"line\">    List&lt;VemProductSkuResultMap&gt; productList = (List&lt;VemProductSkuResultMap&gt;) result.getData();</span><br><span class=\"line\"></span><br><span class=\"line\">    PoiExcelExport poiExcelExport = <span class=\"keyword\">new</span> PoiExcelExport(response, <span class=\"string\">\"商品品项\"</span>, <span class=\"string\">\"商品品项\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 列名</span></span><br><span class=\"line\">    String[] columnNames = &#123;<span class=\"string\">\"商品编码\"</span>, <span class=\"string\">\"商品Id\"</span>, <span class=\"string\">\"商品名称\"</span>, <span class=\"string\">\"商品别名\"</span>, <span class=\"string\">\"外部商品编码\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"市场指导价(元)\"</span>, <span class=\"string\">\"类目\"</span>, <span class=\"string\">\"品牌\"</span>, <span class=\"string\">\"建议售价(元)\"</span>, <span class=\"string\">\"计量单位\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"规格\"</span>, <span class=\"string\">\"厚度(mm)\"</span>, <span class=\"string\">\"重量(g)\"</span>, <span class=\"string\">\"图片\"</span>, <span class=\"string\">\"保质期(天)\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"售卖机型\"</span>, <span class=\"string\">\"标签\"</span>, <span class=\"string\">\"描述\"</span>, <span class=\"string\">\"是否原材料\"</span>, <span class=\"string\">\"是否组合商品\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"是否返信用\"</span>, <span class=\"string\">\"是否非专卖\"</span>, <span class=\"string\">\"批次来源\"</span>, <span class=\"string\">\"修改时间\"</span>, <span class=\"string\">\"修改人\"</span>&#125;;</span><br><span class=\"line\">    <span class=\"comment\">// map中的key</span></span><br><span class=\"line\">    String[] keys = &#123; <span class=\"string\">\"skuCode\"</span>, <span class=\"string\">\"id\"</span>, <span class=\"string\">\"name\"</span>, <span class=\"string\">\"nameAlias\"</span>, <span class=\"string\">\"externalSkuId\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"marketPrice\"</span>, <span class=\"string\">\"productSpuLevelName\"</span>, <span class=\"string\">\"productBrand\"</span>, <span class=\"string\">\"guidePrice\"</span>, <span class=\"string\">\"measurementUnit\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"specification\"</span>, <span class=\"string\">\"thickness\"</span>, <span class=\"string\">\"weight\"</span>, <span class=\"string\">\"imageUrl\"</span>, <span class=\"string\">\"guaranteePeriod\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"machineTypeNames\"</span>, <span class=\"string\">\"tags\"</span>, <span class=\"string\">\"description\"</span>, <span class=\"string\">\"isOrigin\"</span>, <span class=\"string\">\"isGroupSkuCnName\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"isReturnCreditCnName\"</span>, <span class=\"string\">\"ifNonMonopolyCnName\"</span>, <span class=\"string\">\"ifBatchNoCnName\"</span>, <span class=\"string\">\"updateDate\"</span>, <span class=\"string\">\"updatePerson\"</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] titleSize = &#123; <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>, <span class=\"number\">15</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    List&lt;ProductExcelModel&gt; models = constructProductExcelModel(productList);</span><br><span class=\"line\">    poiExcelExport.writeExcelBaseMethod(<span class=\"string\">\"商品品项\"</span>, keys, columnNames, titleSize, models);</span><br><span class=\"line\">    poiExcelExport.writeExcelMultiSheet();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> List&lt;ProductExcelModel&gt; <span class=\"title\">constructProductExcelModel</span><span class=\"params\">(List&lt;VemProductSkuResultMap&gt; productSkuResultMaps)</span> </span>&#123;</span><br><span class=\"line\">    List&lt;ProductExcelModel&gt; models = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">    SkuBrandFacade skuBrandFacade = SpringContextUtil.getBean(<span class=\"string\">\"skuBrandFacade\"</span>);</span><br><span class=\"line\">    Map&lt;String, String&gt; brandMap = skuBrandFacade.findSkuBrands();</span><br><span class=\"line\">    DictService dictService= SpringContextUtil.getBean(<span class=\"string\">\"dictServiceImpl\"</span>);</span><br><span class=\"line\">    List&lt;VemDict&gt; dictList=dictService.listVemDictByDictGroupId(DictConsts.MACHINE_TYPE);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (VemProductSkuResultMap product : productSkuResultMaps) &#123;</span><br><span class=\"line\">        ProductExcelModel model = <span class=\"keyword\">new</span> ProductExcelModel();</span><br><span class=\"line\">        model.setSkuCode(product.getSkuCode());</span><br><span class=\"line\">        model.setId(product.getId());</span><br><span class=\"line\">        model.setName(product.getName());</span><br><span class=\"line\">        model.setNameAlias(product.getNameAlias());</span><br><span class=\"line\">        model.setExternalSkuId(product.getExternalSkuId());</span><br><span class=\"line\">        model.setMarketPrice(product.getMarketPrice());</span><br><span class=\"line\">        model.setProductSpuLevelName(product.getProductSpuLevelName());</span><br><span class=\"line\">        String cn = DictConsts.UNMATCH_VALUE;</span><br><span class=\"line\">        String skuBrand = brandMap.get(product.getBrandCode());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(StringUtil.isNotBlank(skuBrand)) &#123;</span><br><span class=\"line\">            cn = skuBrand;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        model.setProductBrand(cn);</span><br><span class=\"line\">        model.setGuidePrice(product.getGuidePrice());</span><br><span class=\"line\">        model.setMeasurementUnit(product.getMeasurementUnit());</span><br><span class=\"line\">        model.setSpecification(product.getSpecification());</span><br><span class=\"line\">        model.setThickness(product.getThickness());</span><br><span class=\"line\">        model.setWeight(product.getWeight());</span><br><span class=\"line\">        model.setImageUrl(product.getImageUrl());</span><br><span class=\"line\">        model.setGuaranteePeriod(product.getGuaranteePeriod());</span><br><span class=\"line\">        List&lt;VemProductSkuMachineType&gt; skuMachineTypes = product.getMachineTypeList();</span><br><span class=\"line\">        StringBuilder typeNames = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(CollectionUtils.isNotEmpty(skuMachineTypes))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(CollectionUtils.isNotEmpty(dictList))&#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(VemDict dict : dictList)&#123;</span><br><span class=\"line\">                    String value = String.valueOf(dict.getDictCode());</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(VemProductSkuMachineType type : skuMachineTypes)&#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(value.equals(type.getMachineType()))&#123;</span><br><span class=\"line\">                            typeNames.append(<span class=\"string\">\",\"</span>).append(dict.getDictName());</span><br><span class=\"line\">                            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(typeNames.length() &gt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            model.setMachineTypeNames(typeNames.substring(<span class=\"number\">1</span>));</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            model.setMachineTypeNames(DictConsts.UNMATCH_VALUE);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        List&lt;ProductTagVO&gt; productTagList = product.getProductTagVOList();</span><br><span class=\"line\">        StringBuilder tags = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(CollectionUtils.isNotEmpty(productTagList))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (ProductTagVO tag : productTagList) &#123;</span><br><span class=\"line\">                tags.append(<span class=\"string\">\" \"</span>).append(tag.getTagName());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(tags.length() &gt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            model.setTags(tags.substring(<span class=\"number\">1</span>));</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            model.setTags(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        model.setDescription(product.getDescription());</span><br><span class=\"line\">        model.setIsOrigin((<span class=\"string\">\"2\"</span>.equals(product.getProductType())) ? <span class=\"string\">\"是\"</span> : <span class=\"string\">\"否\"</span>);</span><br><span class=\"line\">        model.setIsGroupSkuCnName(product.getIsGroupSkuCnName());</span><br><span class=\"line\">        model.setIsReturnCreditCnName(product.getIsReturnCreditCnName());</span><br><span class=\"line\">        model.setIfNonMonopolyCnName(product.getIfNonMonopolyCnName());</span><br><span class=\"line\">        model.setIfBatchNoCnName(product.getIfBatchNoCnName());</span><br><span class=\"line\">        model.setUpdateDate(product.getUpdateDate());</span><br><span class=\"line\">        model.setUpdatePerson(product.getUpdatePerson());</span><br><span class=\"line\">        models.add(model);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> models;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<h5 id=\"提交信息\"><a class=\"markdownIt-Anchor\" href=\"Excel生成工具类#提交信息\"></a> 提交信息<a href=\"Excel生成工具类#提交信息\"></a></h5>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【Fix】ID1107326 商品信息导出功能】 https://www.tapd.cn/52268405/prong/stories/view/1152268405001107326   1.导出文件并下载初步完成</span><br></pre></td></tr></table></div></figure>\n","prev":{"title":"Redis","link":"Redis"},"next":{"title":"Maven/基础&POM","link":"Maven/基础&POM"},"plink":"ilucia.github.io/Excel生成工具类/","copyright":{"author":"Ilucia Niu","license":"<a rel=\"license\" href=\"http://creativecommons.org/licenses/by/4.0/\">知识共享署名 4.0 国际许可协议</a>","published":"2022年4月27日","updated":"2022年4月27日"}}