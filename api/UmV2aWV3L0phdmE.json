{"title":"Java 复习提纲","date":"2019-01-10T00:00:00.000Z","link":"Review/Java","tags":["Java"],"categories":["review"],"updated":"2022-04-27T15:24:01.619Z","content":"<ul>\n<li>垃圾回收 <code>System.gc()</code></li>\n</ul>\n<h2 id=\"chapter-01\"><a class=\"markdownIt-Anchor\" href=\"Review/Java#chapter-01\"></a> Chapter 01<a href=\"Review/Java#chapter-01\"></a></h2>\n<ul>\n<li>数据类型</li>\n</ul>\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">容量（bit）</th>\n<th style=\"text-align:left\">范围</th>\n<th style=\"text-align:left\">包装器</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">boolean</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">true\\false</td>\n<td style=\"text-align:left\">Boolean</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">char</td>\n<td style=\"text-align:left\">16</td>\n<td style=\"text-align:left\">Unicode</td>\n<td style=\"text-align:left\">Character</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">byte</td>\n<td style=\"text-align:left\">8</td>\n<td style=\"text-align:left\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>[</mo><mo>−</mo><mn>128</mn><mo separator=\"true\">,</mo><mn>127</mn><mo>]</mo></mrow><annotation encoding=\"application/x-tex\">[-128,127]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mord\">2</span><span class=\"mord\">8</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mord\">2</span><span class=\"mord\">7</span><span class=\"mclose\">]</span></span></span></span></td>\n<td style=\"text-align:left\">Byte</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">short</td>\n<td style=\"text-align:left\">16</td>\n<td style=\"text-align:left\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>[</mo><mo>−</mo><msup><mn>2</mn><mn>15</mn></msup><mo separator=\"true\">,</mo><msup><mn>2</mn><mn>15</mn></msup><mo>−</mo><mn>1</mn><mo>]</mo></mrow><annotation encoding=\"application/x-tex\">[-2^{15},2^{15}-1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">5</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">5</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span></td>\n<td style=\"text-align:left\">Short</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">int</td>\n<td style=\"text-align:left\">32</td>\n<td style=\"text-align:left\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>[</mo><mo>−</mo><msup><mn>2</mn><mn>31</mn></msup><mo separator=\"true\">,</mo><msup><mn>2</mn><mn>31</mn></msup><mo>−</mo><mn>1</mn><mo>]</mo></mrow><annotation encoding=\"application/x-tex\">[-2^{31},2^{31}-1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span></td>\n<td style=\"text-align:left\">Integer</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Long</td>\n<td style=\"text-align:left\">64</td>\n<td style=\"text-align:left\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>[</mo><mo>−</mo><msup><mn>2</mn><mn>63</mn></msup><mo separator=\"true\">,</mo><msup><mn>2</mn><mn>63</mn></msup><mo>−</mo><mn>1</mn><mo>]</mo></mrow><annotation encoding=\"application/x-tex\">[-2^{63},2^{63}-1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">6</span><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">6</span><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span></td>\n<td style=\"text-align:left\">Long</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">float</td>\n<td style=\"text-align:left\">32</td>\n<td style=\"text-align:left\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>3.4</mn><mo>∗</mo><mn>1</mn><msup><mn>0</mn><mn>38</mn></msup></mrow><annotation encoding=\"application/x-tex\">3.4*10^{38}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">3</span><span class=\"mord\">.</span><span class=\"mord\">4</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span><span class=\"mord mtight\">8</span></span></span></span></span></span></span></span></span></span></span></span></td>\n<td style=\"text-align:left\">Long</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">double</td>\n<td style=\"text-align:left\">64</td>\n<td style=\"text-align:left\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>1.7</mn><mo>∗</mo><mn>1</mn><msup><mn>0</mn><mn>308</mn></msup></mrow><annotation encoding=\"application/x-tex\">1.7*10^{308}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">.</span><span class=\"mord\">7</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span><span class=\"mord mtight\">0</span><span class=\"mord mtight\">8</span></span></span></span></span></span></span></span></span></span></span></span></td>\n<td style=\"text-align:left\">Double</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">void</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">Void</td>\n</tr>\n</tbody>\n</table></div></div>\n<ul>\n<li>\n<p>自动类型转换</p>\n<ul>\n<li>byte,short,char—&gt; int —&gt; long—&gt; float —&gt; double</li>\n</ul>\n</li>\n<li>\n<p>数据类型转换<code>int a = (int)3.14159</code></p>\n</li>\n<li>\n<p>Package</p>\n</li>\n<li>\n<p>Import</p>\n</li>\n<li>\n<p>Class</p>\n</li>\n<li>\n<p>Field</p>\n</li>\n<li>\n<p>Method</p>\n</li>\n<li>\n<p>Object</p>\n</li>\n<li>\n<p>Constract and Initialization</p>\n</li>\n<li>\n<p>Access Control</p>\n</li>\n<li>\n<p>Java修饰符</p>\n<ul>\n<li>访问控制修饰符 : default, public , protected, private</li>\n<li>非访问控制修饰符 : final, abstract, static, synchronized</li>\n</ul>\n</li>\n<li>\n<p>继承</p>\n<ul>\n<li>在Java中，一个类可以由其他类派生。如果你要创建一个类，而且已经存在一个类具有你所需要的属性或方法，那么你可以将新创建的类继承该类。</li>\n<li>利用继承的方法，可以重用已存在类的方法和属性，而不用重写这些代码。被继承的类称为超类（super class），派生类称为子类（subclass）。</li>\n<li>Java 源程序与编译型运行区别<br>\n<img src=\"https://www.runoob.com/wp-content/uploads/2013/12/ZSSDMld.png\" alt=\"\"></li>\n<li>一个类可以包含以下类型变量：\n<ul>\n<li>局部变量：在方法、构造方法或者语句块中定义的变量被称为局部变量。变量声明和初始化都是在方法中，方法结束后，变量就会自动销毁。\n<ul>\n<li>局部变量声明在方法、构造方法或者语句块中；\n<ul>\n<li>局部变量在方法、构造方法、或者语句块被执行的时候创建，当它们执行完成后，变量将会被销毁；</li>\n<li>访问修饰符不能用于局部变量；</li>\n<li>局部变量只在声明它的方法、构造方法或者语句块中可见；</li>\n<li>局部变量是在栈上分配的。</li>\n<li>局部变量没有默认值，所以局部变量被声明后，必须经过初始化，才可以使用。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>成员变量：成员变量是定义在类中，方法体之外的变量。这种变量在创建对象的时候实例化。成员变量可以被类中方法、构造方法和特定类的语句块访问。</li>\n<li>类变量：类变量也声明在类中，方法体之外，但必须声明为static类型。\n<ul>\n<li>类变量也称为静态变量，在类中以static关键字声明，但必须在方法构造方法和语句块之外。</li>\n<li>无论一个类创建了多少个对象，类只拥有类变量的一份拷贝。</li>\n<li>静态变量除了被声明为常量外很少使用。常量是指声明为public/private，final和static类型的变量。常量初始化后不可改变。</li>\n<li>静态变量储存在静态存储区。经常被声明为常量，很少单独使用static声明变量。</li>\n<li>静态变量在第一次被访问时创建，在程序结束时销毁。</li>\n<li>与实例变量具有相似的可见性。但为了对类的使用者可见，大多数静态变量声明为public类型。</li>\n<li>默认值和实例变量相似。数值型变量默认值是0，布尔型默认值是false，引用类型默认值是null。变量的值可以在声明的时候指定，也可以在构造方法中指定。此外，静态变量还可以在静态语句块中初始化。</li>\n<li>静态变量可以通过：ClassName.VariableName的方式访问。</li>\n<li>类变量被声明为public static final类型时，类变量名称一般建议使用大写字母。如果静态变量不是public和final类型，其命名方式与实例变量以及局部变量的命名方式一致。</li>\n</ul>\n</li>\n<li>实例变量\n<ul>\n<li>实例变量声明在一个类中，但在方法、构造方法和语句块之外；</li>\n<li>当一个对象被实例化之后，每个实例变量的值就跟着确定；</li>\n<li>实例变量在对象创建的时候创建，在对象被销毁的时候销毁；</li>\n<li>实例变量的值应该至少被一个方法、构造方法或者语句块引用，使得外部能够通过这些方式获取实例变量信息；</li>\n<li>实例变量可以声明在使用前或者使用后；</li>\n<li>访问修饰符可以修饰实例变量；</li>\n<li>实例变量对于类中的方法、构造方法或者语句块是可见的。一般情况下应该把实例变量设为私有。通过使用访问修饰符可以使实例变量对子类可见；</li>\n<li>实例变量具有默认值。数值型变量的默认值是0，布尔型变量的默认值是false，引用类型变量的默认值是null。变量的值可以在声明时指定，也可以在构造方法中指定；</li>\n<li>实例变量可以直接通过变量名访问。但在静态方法以及其他类中，就应该使用完全限定名：ObejectReference.VariableName。</li>\n</ul>\n</li>\n<li>一个类可以拥有多个方法，在上面的例子中：barking()、hungry()和sleeping()都是Dog类的方法。</li>\n</ul>\n</li>\n<li>源文件声明规则\n<ul>\n<li>一个源文件中只能有一个public类</li>\n<li>一个源文件可以有多个非public类</li>\n<li>源文件的名称应该和public类的类名保持一致。例如：源文件中public类的类名是Employee，那么源文件应该命名为Employee.java。</li>\n<li>如果一个类定义在某个包中，那么package语句应该在源文件的首行。</li>\n<li>如果源文件包含import语句，那么应该放在package语句和类定义之间。如果没有package语句，那么import语句应该在源文件中最前面。</li>\n<li>import语句和package语句对源文件中定义的所有类都有效。在同一源文件中，不能给不同的类不同的包声明。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>接口</p>\n<ul>\n<li>在Java中，接口可理解为对象间相互通信的协议。接口在继承中扮演着很重要的角色。</li>\n<li>接口只定义派生要用到的方法，但是方法的具体实现完全取决于派生类。</li>\n</ul>\n</li>\n<li>\n<p>继承关键字</p>\n<ul>\n<li>继承可以使用 extends 和 implements 这两个关键字来实现继承，而且所有的类都是继承于 java.lang.Object，当一个类没有继承的两个关键字，则默认继承object（这个类在 java.lang 包中，所以不需要 import）祖先类。</li>\n<li>extends关键字\n<ul>\n<li>在 Java 中，类的继承是单一继承，也就是说，一个子类只能拥有一个父类，所以 extends 只能继承一个类。</li>\n</ul>\n</li>\n<li>implements关键字\n<ul>\n<li>使用 implements 关键字可以变相的使java具有多继承的特性，使用范围为类继承接口的情况，可以同时继承多个接口（接口跟接口之间采用逗号分隔）。</li>\n</ul>\n</li>\n<li>super 与 this 关键字\n<ul>\n<li>super关键字：我们可以通过super关键字来实现对父类成员的访问，用来引用当前对象的父类。</li>\n<li>this关键字：指向自己的引用。</li>\n</ul>\n</li>\n<li>final关键字\n<ul>\n<li>final 关键字声明类可以把类定义为不能继承的，即最终类；或者用于修饰方法，该方法不能被子类重写：</li>\n<li>声明类：\n<ul>\n<li>final class 类名 {//类体}</li>\n</ul>\n</li>\n<li>声明方法：\n<ul>\n<li>修饰符(public/private/default/protected) final 返回值类型 方法名(){//方法体}</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>构造器\n<ul>\n<li>子类是不继承父类的构造器（构造方法或者构造函数）的，它只是调用（隐式或显式）。如果父类的构造器带有参数，则必须在子类的构造器中显式地通过 super 关键字调用父类的构造器并配以适当的参数列表。</li>\n<li>如果父类构造器没有参数，则在子类的构造器中不需要使用 super 关键字调用父类构造器，系统会自动调用父类的无参构造器。<br>\n<img src=\"https://www.runoob.com/wp-content/uploads/2013/12/types_of_inheritance.png\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Java 抽象类</p>\n<ul>\n<li>在面向对象的概念中，所有的对象都是通过类来描绘的，但是反过来，并不是所有的类都是用来描绘对象的，如果一个类中没有包含足够的信息来描绘一个具体的对象，这样的类就是抽象类。</li>\n<li>抽象类除了不能实例化对象之外，类的其它功能依然存在，成员变量、成员方法和构造方法的访问方式和普通类一样。</li>\n<li>由于抽象类不能实例化对象，所以抽象类必须被继承，才能被使用。也是因为这个原因，通常在设计阶段决定要不要设计抽象类。</li>\n<li>父类包含了子类集合的常见的方法，但是由于父类本身是抽象的，所以不能使用这些方法。</li>\n<li>在Java中抽象类表示的是一种继承关系，一个类只能继承一个抽象类，而一个类却可以实现多个接口。</li>\n<li>抽象方法\n<ul>\n<li>如果你想设计这样一个类，该类包含一个特别的成员方法，该方法的具体实现由它的子类确定，那么你可以在父类中声明该方法为抽象方法。</li>\n<li>Abstract关键字同样可以用来声明抽象方法，抽象方法只包含一个方法名，而没有方法体。</li>\n<li>抽象方法没有定义，方法名后面直接跟一个分号，而不是花括号。</li>\n<li>声明抽象方法会造成以下两个结果：\n<ul>\n<li>如果一个类包含抽象方法，那么该类必须是抽象类。</li>\n<li>任何子类必须重写父类的抽象方法，或者声明自身为抽象类。</li>\n<li>继承抽象方法的子类必须重写该方法。否则，该子类也必须声明为抽象类。最终，必须有子类实现该抽象方法，否则，从最初的父类到最终的子类都不能用来实例化对象。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li>抽象类不能被实例化(初学者很容易犯的错)，如果被实例化，就会报错，编译无法通过。只有抽象类的非抽象子类可以创建对象。</li>\n<li>抽象类中不一定包含抽象方法，但是有抽象方法的类必定是抽象类。</li>\n<li>抽象类中的抽象方法只是声明，不包含方法体，就是不给出方法的具体实现也就是方法的具体功能。</li>\n<li>构造方法，类方法（用static修饰的方法）不能声明为抽象方法。</li>\n<li>抽象类的子类必须给出抽象类中的抽象方法的具体实现，除非该子类也是抽象类。</li>\n</ol>\n</li>\n</ul>\n<p>Java 接口</p>\n<ul>\n<li>接口（英文：Interface），在JAVA编程语言中是一个抽象类型，是抽象方法的集合，接口通常以interface来声明。一个类通过继承接口的方式，从而来继承接口的抽象方法。</li>\n<li>接口并不是类，编写接口的方式和类很相似，但是它们属于不同的概念。类描述对象的属性和方法。接口则包含类要实现的方法。</li>\n<li>除非实现接口的类是抽象类，否则该类要定义接口中的所有方法。</li>\n<li>接口无法被实例化，但是可以被实现。一个实现接口的类，必须实现接口内所描述的所有方法，否则就必须声明为抽象类。另外，在 Java 中，接口类型可用来声明一个变量，他们可以成为一个空指针，或是被绑定在一个以此接口实现的对象。</li>\n<li>接口与类相似点：</li>\n<li>一个接口可以有多个方法。\n<ul>\n<li>接口文件保存在 .java 结尾的文件中，文件名使用接口名。</li>\n<li>接口的字节码文件保存在 .class 结尾的文件中。</li>\n<li>接口相应的字节码文件必须在与包名称相匹配的目录结构中。</li>\n</ul>\n</li>\n<li>接口与类的区别：\n<ul>\n<li>接口不能用于实例化对象。</li>\n<li>接口没有构造方法。</li>\n<li>接口中所有的方法必须是抽象方法。</li>\n<li>接口不能包含成员变量，除了 static 和 final 变量。</li>\n<li>接口不是被类继承了，而是要被类实现。</li>\n<li>接口支持多继承。</li>\n</ul>\n</li>\n<li>接口特性\n<ul>\n<li>接口中每一个方法也是隐式抽象的,接口中的方法会被隐式的指定为 public abstract（只能是 public abstract，其他修饰符都会报错）。</li>\n<li>接口中可以含有变量，但是接口中的变量会被隐式的指定为 public static final 变量（并且只能是 public，用 private 修饰会报编译错误）。</li>\n<li>接口中的方法是不能在接口中实现的，只能由实现接口的类来实现接口中的方法。</li>\n</ul>\n</li>\n<li>抽象类和接口的区别</li>\n</ul>\n<ol>\n<li>抽象类中的方法可以有方法体，就是能实现方法的具体功能，但是接口中的方法不行。</li>\n<li>抽象类中的成员变量可以是各种类型的，而接口中的成员变量只能是 public static final 类型的。</li>\n<li>接口中不能含有静态代码块以及静态方法(用 static 修饰的方法)，而抽象类是可以有静态代码块和静态方法。</li>\n<li>一个类只能继承一个抽象类，而一个类却可以实现多个接口。</li>\n</ol>\n<h2 id=\"chapter-02-oop\"><a class=\"markdownIt-Anchor\" href=\"Review/Java#chapter-02-oop\"></a> Chapter 02 OOP<a href=\"Review/Java#chapter-02-oop\"></a></h2>\n<ul>\n<li>Object</li>\n<li>Class</li>\n<li>Abstraction</li>\n<li>Inheritance</li>\n<li>Polymorphism</li>\n<li><code>finalilze();</code></li>\n<li><code>Abstraction</code></li>\n<li><code>interface</code></li>\n<li><code>implements</code></li>\n</ul>\n<h2 id=\"chapter-03-exception\"><a class=\"markdownIt-Anchor\" href=\"Review/Java#chapter-03-exception\"></a> Chapter 03 Exception<a href=\"Review/Java#chapter-03-exception\"></a></h2>\n<ul>\n<li>检查性异常：最具代表的检查性异常是用户错误或问题引起的异常，这是程序员无法预见的。例如要打开一个不存在文件时，一个异常就发生了，这些异常在编译时不能被简单地忽略。</li>\n<li>运行时异常： 运行时异常是可能被程序员避免的异常。与检查性异常相反，运行时异常可以在编译时被忽略。</li>\n<li>错误： 错误不是异常，而是脱离程序员控制的问题。错误在代码中通常被忽略。例如，当栈溢出时，一个错误就发生了，它们在编译也检查不到的。</li>\n<li>Exception 类的层次\n<ul>\n<li>所有的异常类是从 java.lang.Exception 类继承的子类。</li>\n<li>Exception 类是 Throwable 类的子类。除了Exception类外，Throwable还有一个子类Error 。</li>\n<li>Java 程序通常不捕获错误。错误一般发生在严重故障时，它们在Java程序处理的范畴之外。</li>\n<li>Error 用来指示运行时环境发生的错误。<br>\n<img src=\"https://www.runoob.com/wp-content/uploads/2013/12/12-130Q1234I6223.jpg\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"chapter-04-java-io\"><a class=\"markdownIt-Anchor\" href=\"Review/Java#chapter-04-java-io\"></a> Chapter 04 Java I/O<a href=\"Review/Java#chapter-04-java-io\"></a></h2>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">File file = <span class=\"keyword\">new</span> File(<span class=\"string\">\"filePath/fileName\"</span>);</span><br><span class=\"line\">System.out.println(file.exists());</span><br><span class=\"line\">System.out.println(file.isFile());</span><br><span class=\"line\">File[] files = file.listFlies(filter);</span><br><span class=\"line\">System.out.println(files.length);</span><br><span class=\"line\">Arrays.sort(files,comparator);</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>\n<p>Stream</p>\n<ul>\n<li>Byte stream\n<ul>\n<li>java.io.InputStream\n<ul>\n<li><code>int read()\t//read a byte</code></li>\n</ul>\n</li>\n<li>java.io.OutputStream\n<ul>\n<li><code>void write(int b)</code></li>\n<li><code>void write(byte[] b)</code></li>\n</ul>\n</li>\n<li>FileInputStream, FileOutputStream</li>\n<li>PipedInputStream, PipedOutputStream</li>\n<li>ByteArrayInputStream, ByteArrayOutputStream</li>\n<li>BufferedInputStream, BufferedOutputStream</li>\n<li>ObjectInputStreamm ObjectOutputStream</li>\n</ul>\n</li>\n<li>Character stream\n<ul>\n<li>java.io.Reader\n<ul>\n<li><code>int read()\t//read a char</code></li>\n</ul>\n</li>\n<li>java.io.Writer\n<ul>\n<li><code>void write(int b)</code></li>\n<li><code>void write(char[] c)</code></li>\n</ul>\n</li>\n<li>FileReader, FileWriter</li>\n<li>PipedReader, PipedWriter</li>\n<li>BufferedReader, BufferedWriter</li>\n<li>InpputStreamReader, OutputStreamWriter</li>\n</ul>\n</li>\n<li>Bridge\n<ul>\n<li>InputStreamReader</li>\n<li>OutputStreamWriter</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>FileInputStream</p>\n<ul>\n<li>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FileInputStream fis = FileInputStream(file);</span><br><span class=\"line\"><span class=\"keyword\">int</span>  res = fis.read();\t<span class=\"comment\">//IOException</span></span><br><span class=\"line\">fis.available();\t<span class=\"comment\">//是否可用</span></span><br><span class=\"line\">fis.close();</span><br></pre></td></tr></table></div></figure>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t</span><br></pre></td></tr></table></div></figure>\n</li>\n</ul>\n</li>\n<li>\n<p>FileOutputStream</p>\n<ul>\n<li>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> \tfile.createNewFile()</span><br><span class=\"line\">fos.write(<span class=\"number\">2</span>);</span><br><span class=\"line\">fos.write(<span class=\"string\">'a'</span>);</span><br></pre></td></tr></table></div></figure>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t</span><br></pre></td></tr></table></div></figure>\n</li>\n</ul>\n</li>\n<li>\n<p>FileReader</p>\n</li>\n<li>\n<p>FileWriter</p>\n<ul>\n<li>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   FileWriter w = <span class=\"keyword\">new</span> FileWriter(<span class=\"keyword\">new</span> File(<span class=\"string\">\"a.txt\"</span>),<span class=\"keyword\">true</span>);</span><br><span class=\"line\">w.write(<span class=\"string\">\"Hanyuu\"</span>.toCharArray());</span><br><span class=\"line\">w.flush();</span><br></pre></td></tr></table></div></figure>\n</li>\n</ul>\n</li>\n<li>\n<p>InputStreamReader</p>\n</li>\n<li>\n<p>OutputStreamReader</p>\n</li>\n<li>\n<p>PrintStream</p>\n</li>\n<li>\n<p>DataInputStream, DataOutputStream</p>\n</li>\n<li>\n<p>PrintWriter</p>\n</li>\n<li>\n<p>Scanner</p>\n<ul>\n<li>java.util.Scanner</li>\n</ul>\n</li>\n<li>\n<p>BufferedInputStream, BufferedOutputStream</p>\n<ul>\n<li><code>BufferedInputStream bufferedInput = new BufferedInputStream(new FileInputStream(filename));</code></li>\n<li>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testBufferedInput</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"> <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">     <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">      * 建立输入流 BufferedInputStream, 缓冲区大小为8</span></span><br><span class=\"line\"><span class=\"comment\">      * buffer.txt内容为</span></span><br><span class=\"line\"><span class=\"comment\">      * abcdefghij</span></span><br><span class=\"line\"><span class=\"comment\">      */</span></span><br><span class=\"line\">     InputStream in = <span class=\"keyword\">new</span> BufferedInputStream(<span class=\"keyword\">new</span> FileInputStream(<span class=\"keyword\">new</span> File(<span class=\"string\">\"buff.txt\"</span>)), <span class=\"number\">8</span>);</span><br><span class=\"line\">     <span class=\"comment\">/*从字节流中读取5个字节*/</span></span><br><span class=\"line\">     <span class=\"keyword\">byte</span> [] tmp = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">5</span>];</span><br><span class=\"line\">     in.read(tmp, <span class=\"number\">0</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\">     System.out.println(<span class=\"string\">\"字节流的前5个字节为: \"</span> + <span class=\"keyword\">new</span> String(tmp));</span><br><span class=\"line\">     <span class=\"comment\">/*标记测试*/</span></span><br><span class=\"line\">     in.mark(<span class=\"number\">6</span>);</span><br><span class=\"line\">     <span class=\"comment\">/*读取5个字节*/</span></span><br><span class=\"line\">     in.read(tmp, <span class=\"number\">0</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\">     System.out.println(<span class=\"string\">\"字节流中第6到10个字节为: \"</span> +  <span class=\"keyword\">new</span> String(tmp));</span><br><span class=\"line\">     <span class=\"comment\">/*reset*/</span></span><br><span class=\"line\">     in.reset();</span><br><span class=\"line\">     System.out.printf(<span class=\"string\">\"reset后读取的第一个字节为: %c\"</span> , in.read());</span><br><span class=\"line\"> &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">     e.printStackTrace();</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* InputStreamReader</span><br><span class=\"line\">* OutputStreamReader</span><br><span class=\"line\">* System.in</span><br><span class=\"line\">* System.out</span><br><span class=\"line\">* System.err</span><br><span class=\"line\">* DataOutputStream</span><br><span class=\"line\">* DataInputStream</span><br></pre></td></tr></table></div></figure>\n</li>\n</ul>\n<h2 id=\"chapter-05-collection\"><a class=\"markdownIt-Anchor\" href=\"Review/Java#chapter-05-collection\"></a> Chapter 05 Collection<a href=\"Review/Java#chapter-05-collection\"></a></h2>\n<ul>\n<li>\n<p>Arrays</p>\n<ul>\n<li>java.util.Arrays</li>\n<li><code>Arrays.sort()</code></li>\n<li><code>Arrays.fill(String[],String)</code></li>\n<li><code>Array.hashCode(String)</code></li>\n</ul>\n</li>\n<li>\n<p>Collection</p>\n<ul>\n<li><code>Set&lt;E&gt; //non-repeat</code>\n<ul>\n<li><code>SortedSet&lt;E&gt;</code></li>\n</ul>\n</li>\n<li><code>List&lt;E&gt;</code></li>\n<li><code>Quene&lt;E&gt;</code></li>\n</ul>\n</li>\n<li>\n<p>Map</p>\n<ul>\n<li>\n<p><code>HashMap&lt;K,V&gt;</code></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HashMap&lt;Integer,String&gt; map = <span class=\"keyword\">new</span> HashMap&lt;Integer,String&gt;();</span><br><span class=\"line\">map.put(<span class=\"number\">0</span>,<span class=\"string\">\"Hanyuu\"</span>);</span><br><span class=\"line\">String name = map.get(<span class=\"number\">0</span>);</span><br><span class=\"line\">map.remove(<span class=\"number\">0</span>);</span><br><span class=\"line\">Set keySet = map.keySet();</span><br><span class=\"line\">Collection valueSet = map.values();</span><br><span class=\"line\">Set entrySet = map.entrySet();</span><br></pre></td></tr></table></div></figure>\n</li>\n<li>\n<p><code>SortedMap&lt;K,V&gt;</code></p>\n</li>\n</ul>\n</li>\n<li>\n<p>Iterator</p>\n</li>\n<li>\n<p>Seqential and Linear</p>\n</li>\n<li>\n<p>Use Array as Backend</p>\n</li>\n<li>\n<p>Varible Length</p>\n</li>\n<li>\n<p>Methods</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">add(Object)</span><br><span class=\"line\">add(<span class=\"keyword\">int</span> index,Object)</span><br><span class=\"line\">remove(Object)</span><br><span class=\"line\">get(<span class=\"keyword\">int</span>)</span><br><span class=\"line\">set(<span class=\"keyword\">int</span>)</span><br><span class=\"line\">indexOf(Objects)</span><br><span class=\"line\">clear()</span><br><span class=\"line\">Size()</span><br><span class=\"line\">toArray()</span><br></pre></td></tr></table></div></figure>\n</li>\n<li>\n<p>ArrayList</p>\n<ul>\n<li><code>ArrayList&lt;String&gt; list = new ArrayList&lt;String&gt;();</code></li>\n<li><code>ArrayList&lt;String&gt; list = new ArrayList&lt;String&gt;(100);</code></li>\n<li><code>list.ensureCapacity(1000)</code></li>\n</ul>\n</li>\n<li>\n<p>LinkedList</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LinkdList&lt;String&gt; list = <span class=\"keyword\">new</span> LinkedList&lt;String&gt;();</span><br><span class=\"line\">list.add(<span class=\"string\">\"Hanyuu\"</span>);</span><br><span class=\"line\">Iterator&lt;String&gt; iterator = list.iterator();</span><br><span class=\"line\"><span class=\"keyword\">while</span>(iterator.hasNext())&#123;</span><br><span class=\"line\">  System.out.println(iterator.next());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n</li>\n</ul>\n<h2 id=\"chapter-07-ui\"><a class=\"markdownIt-Anchor\" href=\"Review/Java#chapter-07-ui\"></a> Chapter 07 UI<a href=\"Review/Java#chapter-07-ui\"></a></h2>\n<ul>\n<li>\n<p>java.jwt</p>\n</li>\n<li>\n<p>javax.swing</p>\n</li>\n<li>\n<p><code>JFrame frame = new JFrame(String //title);</code></p>\n<ul>\n<li><code>frame.getContentPane().add(BorderLayout.EAST,button);</code></li>\n<li><code>frame.setSize(300,400);</code></li>\n<li><code>frame.setVisible(true);</code></li>\n<li><code>frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</code></li>\n<li><code>Container cp = frame.getContentPane();</code></li>\n<li><code>cp.setLayout(new FloatLayout());</code></li>\n<li><code>cp.add(new JPanel)();</code></li>\n</ul>\n</li>\n<li>\n<p><code>JButton button = new JButton(&quot;Okey&quot;);</code></p>\n</li>\n<li>\n<p><code>JComboBox</code></p>\n</li>\n<li>\n<p><code>JCheckBox</code></p>\n</li>\n<li>\n<p><code>JPanel</code></p>\n<ul>\n<li><code>pnel.setLayout(new FLowLayout(FlowLayout.LEFT));</code></li>\n</ul>\n</li>\n<li>\n<p><code>JPanel //container</code></p>\n<ul>\n<li><code>JPanle = new JPanel();</code></li>\n<li><code>panel.add(new JTextField(&quot;Hanyuu&quot;));</code></li>\n</ul>\n</li>\n<li>\n<p><code>JSplistPane</code></p>\n</li>\n<li>\n<p><code>JScrollPane</code></p>\n</li>\n<li>\n<p><code>Graphics</code></p>\n</li>\n<li>\n<p><code>JLabel</code></p>\n<ul>\n<li><code>getText();</code></li>\n<li><code>setText();</code></li>\n<li><code>setIcon();</code></li>\n</ul>\n</li>\n<li>\n<p><code>JTextField</code></p>\n</li>\n<li>\n<p><code>JCheckBox</code></p>\n</li>\n<li>\n<p><code>JTextArea</code></p>\n</li>\n<li>\n<p><code>JRadioButton</code></p>\n</li>\n<li>\n<p>事件侦听</p>\n<ul>\n<li>ActionLinstener<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Action</span> <span class=\"keyword\">implements</span> <span class=\"title\">ActionListener</span></span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">actionPerformed</span><span class=\"params\">(ActionEvent event)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//TODO...</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">JButton exp = <span class=\"keyword\">new</span> JButton();</span><br><span class=\"line\">exp.addActionLintener(<span class=\"keyword\">new</span> Action());</span><br></pre></td></tr></table></div></figure>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"chapter-08-multi-thread\"><a class=\"markdownIt-Anchor\" href=\"Review/Java#chapter-08-multi-thread\"></a> Chapter 08 Multi-thread<a href=\"Review/Java#chapter-08-multi-thread\"></a></h2>\n<ol>\n<li>\n<p><code>runnable</code> interface</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Task</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//TODO...</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">  Thread thread = <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> Task(),<span class=\"string\">\"Thread name\"</span>);</span><br><span class=\"line\">  thread.start();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n</li>\n<li>\n<p>Thread</p>\n</li>\n</ol>\n   <figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HanyuuThread</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span></span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//TODO...</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">  HanyuuThread hanyuu = <span class=\"keyword\">new</span> HanyuuThread();</span><br><span class=\"line\">  hanyuu.setName(<span class=\"string\">\"Hanyuu\"</span>);</span><br><span class=\"line\">  hanyuu.statrt();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li><code>Thread.sleep(int)</code></li>\n<li><code>String Thread.currentThread().getName();</code></li>\n<li><code>join</code></li>\n<li><code>interrupt()</code></li>\n<li><code>yield()</code></li>\n</ul>\n<blockquote>\n<p>yield意味着放手，放弃，投降。一个调用yield()方法的线程告 诉虚拟机它乐意让其他线程占用自己的位置。这表明该线程没 有在做一些紧急的事情。注意，这仅是一个暗示，并不能保证 不会产生任何影响。 <br>\nYield告诉当前正在执行的线程把运行机会交给线程池中拥有相 同优先级的线程。<br>\nYield不能保证使得当前正在运行的线程迅速转换到可运行的状态。<br>\n它仅能使一个线程从运行状态转到可运行状态，而不是等待或阻塞状态</p>\n</blockquote>\n<ul>\n<li><code>notify()</code>/<code>notifyAll()</code>\n<ul>\n<li>notifyAll() wakes all waiting thread, thus, all waiting thread turn to Ready</li>\n<li>notify() only wakes one of waiting thread, others remain blocked</li>\n</ul>\n</li>\n<li><code>sleep()</code>\n<ul>\n<li>java.lang.Thread`</li>\n</ul>\n</li>\n<li><code>wait()</code>\n<ul>\n<li><code>java.lang.Object</code></li>\n<li>Each object has a wait method, inherited from java.lang.Object</li>\n<li>wait() method ask current thread to give up exclusive control</li>\n<li>wait() method give other thread a chance to visit the object</li>\n<li>wait() / wait(long timeout)</li>\n</ul>\n</li>\n<li>wait() / notifyAll() / notify()\n<ul>\n<li>The object must be locked before visit these methods</li>\n<li>They can be used in synchronized method of an object</li>\n<li>Or obj.wait() / obj.notifyAll() / obj.notify() in synchorized(obj){…}</li>\n<li>Otherwise: java.lang.IllegalMonitorStateException</li>\n</ul>\n</li>\n<li><code>synchronized</code></li>\n</ul>\n<pre><code><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Hanyuu</span></span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title\">onlyOne</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//TODO...</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title\">threadSafty</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//TODO...</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n</code></pre>\n<h2 id=\"chapter-09-java-xml\"><a class=\"markdownIt-Anchor\" href=\"Review/Java#chapter-09-java-xml\"></a> Chapter 09 Java &amp; XML<a href=\"Review/Java#chapter-09-java-xml\"></a></h2>\n<h2 id=\"chapter-10-jdbc\"><a class=\"markdownIt-Anchor\" href=\"Review/Java#chapter-10-jdbc\"></a> Chapter 10 JDBC<a href=\"Review/Java#chapter-10-jdbc\"></a></h2>\n<ul>\n<li>\n<p>Record</p>\n</li>\n<li>\n<p>Field</p>\n</li>\n<li>\n<p>Table</p>\n</li>\n<li>\n<p>Entity</p>\n</li>\n<li>\n<p>Relations</p>\n</li>\n<li>\n<p>DataBase</p>\n</li>\n<li>\n<p>Primary key</p>\n</li>\n<li>\n<p>Foreign key</p>\n</li>\n<li>\n<p>Select</p>\n<ul>\n<li><code>SELECT nameA FROM tableA</code></li>\n<li><code>SELECT nameA FROM tableA WHERE name &gt; 2</code></li>\n<li><code>SELECT nameA FROM tableA WHERE (name &gt; 2 AND name &lt; 10) OR name &gt;300</code></li>\n<li><code>SELECT * FROM tableA WHERE name IN ('Hanyuu','Inari')</code></li>\n<li><code>SELECT * FROM tableA WHERE date BETWEEN 'Jan-01-2019' AND 'Jan-02-2019'</code></li>\n<li><code>SELECT * FROM tableA WHERE name LIKE '%an%'</code></li>\n<li><code>SELECT * FROM tableA ORDER BY name DESC/ASC</code></li>\n<li><code>SELECT COUNT(DISTINCT name) FROM tableA</code></li>\n</ul>\n</li>\n<li>\n<p>Insert</p>\n<ul>\n<li><code>INSERT INTO tableA (name,Date) VALUES ('Inari','Jan-01-2019')</code></li>\n</ul>\n</li>\n<li>\n<p>Retireval</p>\n</li>\n<li>\n<p>Update</p>\n<ul>\n<li><code>UPDATE tableA SET date = 'Jan-01-2019' WEHERE name = 'Hanyuu'</code></li>\n</ul>\n</li>\n<li>\n<p>Delete</p>\n<ul>\n<li><code>DELETE FROM tableA WHERE name = 'Inari'</code></li>\n</ul>\n<blockquote>\n<p>你知道为什么SQL语句大家都选择大写嘛？（hhh）</p>\n</blockquote>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> SQL;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.sql.*;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SQL</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"><span class=\"comment\">//\t\tResultSet rs;</span></span><br><span class=\"line\"><span class=\"comment\">//\t\tStatement statement;</span></span><br><span class=\"line\"><span class=\"comment\">//\t\tConnection connection;</span></span><br><span class=\"line\">\t\tConnection connection = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\tStatement statement = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\tResultSet rs = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">//注册驱动程序</span></span><br><span class=\"line\">\t\t\tClass.forName(<span class=\"string\">\"com.mysql.cj.jdbc.Driver\"</span>);</span><br><span class=\"line\">      <span class=\"comment\">//创建JDBC连接</span></span><br><span class=\"line\">\t\t\tString dbURL = <span class=\"string\">\"jdbc:mysql://localhost:3306/Hanyuu?user=Hanyuu&amp;password=Hanyuu&amp;useSSL=false&amp;serverTimezone=GMT\"</span>;</span><br><span class=\"line\">\t\t\tconnection = DriverManager.getConnection(dbURL);</span><br><span class=\"line\">      <span class=\"comment\">//创建statement</span></span><br><span class=\"line\">\t\t\tString sqlQuery = <span class=\"string\">\"SELECT DISTINCT bookname FROM bookstore\"</span>;</span><br><span class=\"line\">\t\t\tstatement = connection.createStatement();</span><br><span class=\"line\">\t\t\trs = statement.executeQuery(sqlQuery);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span> (rs.next()) &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(rs.getString(<span class=\"string\">\"bookname\"</span>));</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tString nsqlQuery = <span class=\"string\">\"SELECT * FROM bookstore\"</span>;</span><br><span class=\"line\">\t\t\trs = statement.executeQuery(nsqlQuery);</span><br><span class=\"line\">      <span class=\"comment\">//执行查询语句</span></span><br><span class=\"line\">\t\t\tResultSetMetaData rsmd = rs.getMetaData();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= rsmd.getColumnCount(); ++i) &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(rsmd.getColumnName(i)+<span class=\"string\">'\\t'</span>);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"无驱动类\"</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t\trs.close();</span><br><span class=\"line\">\t\t\t\tstatement.close();</span><br><span class=\"line\">\t\t\t\tconnection.close();</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n</li>\n<li>\n<p>构建Prepared statement</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String sql = <span class=\"string\">\"INSERT INTO tableA (id,name,sorce) VALUES (?,?,?)\"</span>;</span><br><span class=\"line\">PreparedStatement s =connection.prepareStatement(sql);</span><br><span class=\"line\"><span class=\"comment\">//add a record</span></span><br><span class=\"line\">s.setInt(<span class=\"number\">1</span>,<span class=\"number\">0000</span>);</span><br><span class=\"line\">s.setString(<span class=\"number\">2</span>,<span class=\"string\">\"Hanyuu\"</span>);</span><br><span class=\"line\">s.setInt(<span class=\"number\">3</span>,<span class=\"number\">60</span>);</span><br><span class=\"line\">s.addBatch();</span><br><span class=\"line\">s.clearParameters();</span><br><span class=\"line\">s.executeBatch();</span><br><span class=\"line\">s.cleatBatch();</span><br></pre></td></tr></table></div></figure>\n</li>\n</ul>\n<h2 id=\"chapter-11-java-network-programming\"><a class=\"markdownIt-Anchor\" href=\"Review/Java#chapter-11-java-network-programming\"></a> Chapter 11 Java network Programming<a href=\"Review/Java#chapter-11-java-network-programming\"></a></h2>\n<ul>\n<li>IP address</li>\n<li>IPv4</li>\n<li>IPv6</li>\n<li>IP</li>\n<li>Host name</li>\n<li>Domain Name</li>\n<li>DNS</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//get InetAddress</span></span><br><span class=\"line\">  InetAddress iAddress = InetAddress.getLocalHost();</span><br><span class=\"line\">  <span class=\"comment\">//get local IP</span></span><br><span class=\"line\">  String IP = iAddress.getHostAddress().toString();</span><br><span class=\"line\">  <span class=\"comment\">//get local host name</span></span><br><span class=\"line\">  String hostName = iAddress.getHostName().toString();</span><br><span class=\"line\">  System.out.println(<span class=\"string\">\"IP address\"</span>+IP);</span><br><span class=\"line\">  System.out.println(<span class=\"string\">\"Host name\"</span>+hostName);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">catch</span> (UnknownHostException e)&#123;</span><br><span class=\"line\">  e.printStackTrace();</span><br><span class=\"line\">&#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</span><br><span class=\"line\">  e.printStackTrace();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>通过主机名获取所有IP</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.net.InetAddress;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.UnknownHostException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Iterator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">getLocal</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tInetAddress ia=InetAddress.getLocalHost();</span><br><span class=\"line\">\t\t\tSystem.out.println(ia.getHostAddress());</span><br><span class=\"line\">\t\t\tSystem.out.println(ia.getAddress());</span><br><span class=\"line\">\t\t\tSystem.out.println(ia.getHostName());</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tString hostName=InetAddress.getLocalHost().getHostName();</span><br><span class=\"line\">\t\t\tArrayList&lt;String&gt; allIP=<span class=\"keyword\">new</span> ArrayList&lt;String&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (hostName.length()&gt;<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tInetAddress[] addresses=InetAddress.getAllByName(hostName);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;addresses.length;i++)&#123;</span><br><span class=\"line\">\t\t\t\t\tallIP.add(addresses[i].getHostAddress().toString());</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (Iterator iter=allIP.iterator();((Iterator) iter).hasNext();)&#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(ier.next().toString());</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (UnknownHostException e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>Constructor localhost InetAddress</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">InetAddress addr = InetAddress.getByName(<span class=\"keyword\">null</span>);</span><br><span class=\"line\">InetAddress addr = InetAddress.getByName(<span class=\"string\">\"127.0.0.1\"</span>);</span><br><span class=\"line\">InetAddress addr = InetAddress.getByName(<span class=\"string\">\"localhost\"</span>);</span><br><span class=\"line\">InetAddress addr = InetAddress.getLocalHost();</span><br><span class=\"line\"><span class=\"keyword\">byte</span>[] IP = &#123;(<span class=\"keyword\">byte</span>)<span class=\"number\">127</span>,(<span class=\"keyword\">byte</span>)<span class=\"number\">0</span>,(<span class=\"keyword\">byte</span>)<span class=\"number\">0</span>,(<span class=\"keyword\">byte</span>)<span class=\"number\">1</span>&#125;;</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>Web server</li>\n<li>FTP server</li>\n<li>Mail server</li>\n<li>Port 1-1024 is occupied by system</li>\n<li>client</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//构建客户端socket</span></span><br><span class=\"line\">Socket client = <span class=\"keyword\">new</span> Socket(<span class=\"string\">\"hanyuu.ml\"</span>,<span class=\"number\">8080</span>);</span><br><span class=\"line\"><span class=\"comment\">//构建客户端socket（通过InetAddress）</span></span><br><span class=\"line\">InetAddress address = InetAddress.getByName(<span class=\"string\">\"Hanyuu.ml\"</span>);</span><br><span class=\"line\">Socket client = <span class=\"keyword\">new</span> Socket(address,<span class=\"number\">8080</span>);</span><br><span class=\"line\">InputStream is = socket.getInputStream();</span><br><span class=\"line\">OutputStream os = socket.getOutputStream();</span><br><span class=\"line\">is.close();</span><br><span class=\"line\">os.close();</span><br></pre></td></tr></table></div></figure>\n<p>Example</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Socket socket = <span class=\"keyword\">new</span> Socket(ip,<span class=\"number\">8008</span>);</span><br><span class=\"line\">BufferedReader in = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(socket.getInputStream()),<span class=\"keyword\">true</span>);</span><br><span class=\"line\">out.print(<span class=\"string\">\"Hi\"</span>);</span><br><span class=\"line\">Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">out.println(<span class=\"string\">\"Hello\"</span>);</span><br><span class=\"line\">socket.close();</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>server</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//创建服务端的ServerSocket监听客户请求</span></span><br><span class=\"line\">ServerSocket server = <span class=\"keyword\">new</span> ServerSocket(<span class=\"number\">8080</span>);</span><br><span class=\"line\"><span class=\"comment\">//客户端阻塞，等待连接</span></span><br><span class=\"line\">Socket serverSocket = server.accept();</span><br></pre></td></tr></table></div></figure>\n<p>Example</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">  ButteredReader in =<span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(socket.getInputStream()));</span><br><span class=\"line\">  PrintWriter out = <span class=\"keyword\">new</span> PrintWriter(<span class=\"keyword\">new</span> BufferedWriter(<span class=\"keyword\">new</span> OutputStreamWriter(socket.getOutputStream()),<span class=\"keyword\">true</span>);</span><br><span class=\"line\">  <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">    String str = in.readLine();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (str!=<span class=\"keyword\">null</span> &amp;&amp; str.equals(<span class=\"string\">\"Hi\"</span>)) out.println(<span class=\"string\">\"Hi, here is server.\"</span>);</span><br><span class=\"line\">  &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</span><br><span class=\"line\">    e.printStackTrace();</span><br><span class=\"line\">  &#125;<span class=\"keyword\">finally</span>&#123;</span><br><span class=\"line\">    socket.close();</span><br><span class=\"line\">    server.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<ul>\n<li>TCP</li>\n<li>UDP</li>\n<li>read a web page</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.URL;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.URLConnection;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">conn</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">\t\t\tURL coseURL = <span class=\"keyword\">new</span> URL(<span class=\"string\">\"http://cose.seu.edu.cn\"</span>);</span><br><span class=\"line\">\t\t\tURLConnection connection =coseURL.openConnection();</span><br><span class=\"line\">\t\t\tBufferedReader in = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(connection.getInputStream()));</span><br><span class=\"line\">\t\t\tString html = in.readLine();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(html!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(html);</span><br><span class=\"line\">\t\t\t\thtml=in.readLine();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">catch</span> (Exception e)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n","prev":{"title":"Software Engineering Review","link":"Review/SoftwareEngineering"},"next":{"title":"数据结构小结","link":"Review/dataStructure"},"plink":"ilucia.github.io/Review/Java/","toc":[{"title":"<a class=\"markdownIt-Anchor\"></a> Chapter 01","id":"chapter-01","index":"1"},{"title":"<a class=\"markdownIt-Anchor\"></a> Chapter 02 OOP","id":"chapter-02-oop","index":"2"},{"title":"<a class=\"markdownIt-Anchor\"></a> Chapter 03 Exception","id":"chapter-03-exception","index":"3"},{"title":"<a class=\"markdownIt-Anchor\"></a> Chapter 04 Java I/O","id":"chapter-04-java-io","index":"4"},{"title":"<a class=\"markdownIt-Anchor\"></a> Chapter 05 Collection","id":"chapter-05-collection","index":"5"},{"title":"<a class=\"markdownIt-Anchor\"></a> Chapter 07 UI","id":"chapter-07-ui","index":"6"},{"title":"<a class=\"markdownIt-Anchor\"></a> Chapter 08 Multi-thread","id":"chapter-08-multi-thread","index":"7"},{"title":"<a class=\"markdownIt-Anchor\"></a> Chapter 09 Java &amp; XML","id":"chapter-09-java-xml","index":"8"},{"title":"<a class=\"markdownIt-Anchor\"></a> Chapter 10 JDBC","id":"chapter-10-jdbc","index":"9"},{"title":"<a class=\"markdownIt-Anchor\"></a> Chapter 11 Java network Programming","id":"chapter-11-java-network-programming","index":"10"}],"copyright":{"author":"Ilucia Niu","license":"<a rel=\"license\" href=\"http://creativecommons.org/licenses/by/4.0/\">知识共享署名 4.0 国际许可协议</a>","published":"2019年1月10日","updated":"2022年4月27日"}}